#pragma once

#include <type_traits>

namespace Earlgrey
{
	//////////////////////////////////////////////////////////////////////////
	// ARRAY
	//////////////////////////////////////////////////////////////////////////
	template <typename T>
	class ArrayDeleter 
	{
	public:
		void operator ()( T const * p)
		{ 
			delete[] p; 
		}
	};

	//////////////////////////////////////////////////////////////////////////
	// HANDLE
	//////////////////////////////////////////////////////////////////////////
	typedef std::tr1::shared_ptr< std::tr1::remove_pointer<HANDLE>::type > handle_t;
}