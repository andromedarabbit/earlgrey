// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.38967
//    <NameSpace>UnityBuild</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>True</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>False</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>True</IncludeSerializeMethod><UseBaseClass>True</UseBaseClass><GenBaseClass>True</GenBaseClass><GenerateCloneMethod>True</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net40</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><EnableEncoding>True</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>True</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>All</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>False</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace UnityBuild.VS2008
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.IO;
    using System.Text;
    using System.Xml;
    using System.Collections.Generic;


    #region Base entity class
    public partial class EntityBase<T> : System.ComponentModel.INotifyPropertyChanged
    {

        private static System.Xml.Serialization.XmlSerializer serializer;

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(T));
                }
                return serializer;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current EntityBase object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                xmlWriterSettings.Indent = true;
                xmlWriterSettings.IndentChars = "\t";
                xmlWriterSettings.NewLineOnAttributes = true;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an EntityBase object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output EntityBase object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out T obj, out System.Exception exception)
        {
            exception = null;
            obj = default(T);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out T obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static T Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((T)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current EntityBase object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an EntityBase object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output EntityBase object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out T obj, out System.Exception exception)
        {
            exception = null;
            obj = default(T);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out T obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out T obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static T LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static T LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this T object
        /// </summary>
        public virtual T Clone()
        {
            return ((T)(this.MemberwiseClone()));
        }
        #endregion
    }
    #endregion

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("VisualStudioProject", Namespace = "", IsNullable = false)]
    public partial class VisualStudioProjectType : EntityBase<VisualStudioProjectType>
    {

        private List<VisualStudioProjectTypePlatform> platformsField;

        private List<object> toolFilesField;

        private VisualStudioProjectTypePublishingData publishingDataField;

        private List<ConfigurationType> configurationsField;

        private List<object> referencesField;

        private List<object> filesField;

        private List<VisualStudioProjectTypeGlobal> globalsField;

        private string projectTypeField;

        private VisualStudioProjectTypeVersion versionField;

        private string projectGUIDField;

        private string rootNamespaceField;

        private string keywordField;

        private string nameField;

        private string assemblyReferenceSearchPathsField;

        private string manifestKeyFileField;

        private string manifestCertificateThumbprintField;

        private string manifestTimestampURLField;

        private bool signManifestsField;

        private bool signManifestsFieldSpecified;

        private bool signAssemblyField;

        private bool signAssemblyFieldSpecified;

        private string assemblyOriginatorKeyFileField;

        private bool delaySignField;

        private bool delaySignFieldSpecified;

        private bool generateManifestsField;

        private bool generateManifestsFieldSpecified;

        private string targetZoneField;

        private string excludedPermissionsField;

        private string targetFrameworkVersionField;

        private List<System.Xml.XmlAttribute> anyAttrField;

        private bool platformsFieldSpecified;

        private bool toolFilesFieldSpecified;

        private bool publishingDataFieldSpecified;

        private bool configurationsFieldSpecified;

        private bool referencesFieldSpecified;

        private bool filesFieldSpecified;

        private bool globalsFieldSpecified;

        private bool projectTypeFieldSpecified;

        private bool versionFieldSpecified;

        private bool projectGUIDFieldSpecified;

        private bool rootNamespaceFieldSpecified;

        private bool keywordFieldSpecified;

        private bool nameFieldSpecified;

        private bool assemblyReferenceSearchPathsFieldSpecified;

        private bool manifestKeyFileFieldSpecified;

        private bool manifestCertificateThumbprintFieldSpecified;

        private bool manifestTimestampURLFieldSpecified;

        private bool assemblyOriginatorKeyFileFieldSpecified;

        private bool targetZoneFieldSpecified;

        private bool excludedPermissionsFieldSpecified;

        private bool targetFrameworkVersionFieldSpecified;

        private bool anyAttrFieldSpecified;

        public VisualStudioProjectType()
        {
            this.anyAttrField = new List<System.Xml.XmlAttribute>();
            this.globalsField = new List<VisualStudioProjectTypeGlobal>();
            this.filesField = new List<object>();
            this.referencesField = new List<object>();
            this.configurationsField = new List<ConfigurationType>();
            this.publishingDataField = new VisualStudioProjectTypePublishingData();
            this.toolFilesField = new List<object>();
            this.platformsField = new List<VisualStudioProjectTypePlatform>();
            this.projectTypeField = "Visual C++";
            this.versionField = VisualStudioProjectTypeVersion.Item700;
        }

        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Platform", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public List<VisualStudioProjectTypePlatform> Platforms
        {
            get
            {
                return this.platformsField;
            }
            set
            {
                if ((this.platformsField != null))
                {
                    if ((platformsField.Equals(value) != true))
                    {
                        this.platformsField = value;
                        this.OnPropertyChanged("Platforms");
                    }
                }
                else
                {
                    this.platformsField = value;
                    this.OnPropertyChanged("Platforms");
                }
            }
        }

        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("DefaultToolFile", typeof(VisualStudioProjectTypeDefaultToolFile), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ToolFile", typeof(VisualStudioProjectTypeToolFile), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public List<object> ToolFiles
        {
            get
            {
                return this.toolFilesField;
            }
            set
            {
                if ((this.toolFilesField != null))
                {
                    if ((toolFilesField.Equals(value) != true))
                    {
                        this.toolFilesField = value;
                        this.OnPropertyChanged("ToolFiles");
                    }
                }
                else
                {
                    this.toolFilesField = value;
                    this.OnPropertyChanged("ToolFiles");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public VisualStudioProjectTypePublishingData PublishingData
        {
            get
            {
                return this.publishingDataField;
            }
            set
            {
                if ((this.publishingDataField != null))
                {
                    if ((publishingDataField.Equals(value) != true))
                    {
                        this.publishingDataField = value;
                        this.OnPropertyChanged("PublishingData");
                    }
                }
                else
                {
                    this.publishingDataField = value;
                    this.OnPropertyChanged("PublishingData");
                }
            }
        }

        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 3)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Configuration", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public List<ConfigurationType> Configurations
        {
            get
            {
                return this.configurationsField;
            }
            set
            {
                if ((this.configurationsField != null))
                {
                    if ((configurationsField.Equals(value) != true))
                    {
                        this.configurationsField = value;
                        this.OnPropertyChanged("Configurations");
                    }
                }
                else
                {
                    this.configurationsField = value;
                    this.OnPropertyChanged("Configurations");
                }
            }
        }

        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 4)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ActiveXReference", typeof(VisualStudioProjectTypeActiveXReference), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("AssemblyReference", typeof(VisualStudioProjectTypeAssemblyReference), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ProjectReference", typeof(VisualStudioProjectTypeProjectReference), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public List<object> References
        {
            get
            {
                return this.referencesField;
            }
            set
            {
                if ((this.referencesField != null))
                {
                    if ((referencesField.Equals(value) != true))
                    {
                        this.referencesField = value;
                        this.OnPropertyChanged("References");
                    }
                }
                else
                {
                    this.referencesField = value;
                    this.OnPropertyChanged("References");
                }
            }
        }

        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 5)]
        [System.Xml.Serialization.XmlArrayItemAttribute("File", typeof(FileType), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Filter", typeof(FilterType), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public List<object> Files
        {
            get
            {
                return this.filesField;
            }
            set
            {
                if ((this.filesField != null))
                {
                    if ((filesField.Equals(value) != true))
                    {
                        this.filesField = value;
                        this.OnPropertyChanged("Files");
                    }
                }
                else
                {
                    this.filesField = value;
                    this.OnPropertyChanged("Files");
                }
            }
        }

        [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 6)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Global", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public List<VisualStudioProjectTypeGlobal> Globals
        {
            get
            {
                return this.globalsField;
            }
            set
            {
                if ((this.globalsField != null))
                {
                    if ((globalsField.Equals(value) != true))
                    {
                        this.globalsField = value;
                        this.OnPropertyChanged("Globals");
                    }
                }
                else
                {
                    this.globalsField = value;
                    this.OnPropertyChanged("Globals");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProjectType
        {
            get
            {
                return this.projectTypeField;
            }
            set
            {
                if ((this.projectTypeField != null))
                {
                    if ((projectTypeField.Equals(value) != true))
                    {
                        this.projectTypeField = value;
                        this.OnPropertyChanged("ProjectType");
                    }
                }
                else
                {
                    this.projectTypeField = value;
                    this.OnPropertyChanged("ProjectType");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(VisualStudioProjectTypeVersion.Item700)]
        public VisualStudioProjectTypeVersion Version
        {
            get
            {
                return this.versionField;
            }
            set
            {
                if ((versionField.Equals(value) != true))
                {
                    this.versionField = value;
                    this.OnPropertyChanged("Version");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProjectGUID
        {
            get
            {
                return this.projectGUIDField;
            }
            set
            {
                if ((this.projectGUIDField != null))
                {
                    if ((projectGUIDField.Equals(value) != true))
                    {
                        this.projectGUIDField = value;
                        this.OnPropertyChanged("ProjectGUID");
                    }
                }
                else
                {
                    this.projectGUIDField = value;
                    this.OnPropertyChanged("ProjectGUID");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string RootNamespace
        {
            get
            {
                return this.rootNamespaceField;
            }
            set
            {
                if ((this.rootNamespaceField != null))
                {
                    if ((rootNamespaceField.Equals(value) != true))
                    {
                        this.rootNamespaceField = value;
                        this.OnPropertyChanged("RootNamespace");
                    }
                }
                else
                {
                    this.rootNamespaceField = value;
                    this.OnPropertyChanged("RootNamespace");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Keyword
        {
            get
            {
                return this.keywordField;
            }
            set
            {
                if ((this.keywordField != null))
                {
                    if ((keywordField.Equals(value) != true))
                    {
                        this.keywordField = value;
                        this.OnPropertyChanged("Keyword");
                    }
                }
                else
                {
                    this.keywordField = value;
                    this.OnPropertyChanged("Keyword");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name");
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AssemblyReferenceSearchPaths
        {
            get
            {
                return this.assemblyReferenceSearchPathsField;
            }
            set
            {
                if ((this.assemblyReferenceSearchPathsField != null))
                {
                    if ((assemblyReferenceSearchPathsField.Equals(value) != true))
                    {
                        this.assemblyReferenceSearchPathsField = value;
                        this.OnPropertyChanged("AssemblyReferenceSearchPaths");
                    }
                }
                else
                {
                    this.assemblyReferenceSearchPathsField = value;
                    this.OnPropertyChanged("AssemblyReferenceSearchPaths");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ManifestKeyFile
        {
            get
            {
                return this.manifestKeyFileField;
            }
            set
            {
                if ((this.manifestKeyFileField != null))
                {
                    if ((manifestKeyFileField.Equals(value) != true))
                    {
                        this.manifestKeyFileField = value;
                        this.OnPropertyChanged("ManifestKeyFile");
                    }
                }
                else
                {
                    this.manifestKeyFileField = value;
                    this.OnPropertyChanged("ManifestKeyFile");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ManifestCertificateThumbprint
        {
            get
            {
                return this.manifestCertificateThumbprintField;
            }
            set
            {
                if ((this.manifestCertificateThumbprintField != null))
                {
                    if ((manifestCertificateThumbprintField.Equals(value) != true))
                    {
                        this.manifestCertificateThumbprintField = value;
                        this.OnPropertyChanged("ManifestCertificateThumbprint");
                    }
                }
                else
                {
                    this.manifestCertificateThumbprintField = value;
                    this.OnPropertyChanged("ManifestCertificateThumbprint");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ManifestTimestampURL
        {
            get
            {
                return this.manifestTimestampURLField;
            }
            set
            {
                if ((this.manifestTimestampURLField != null))
                {
                    if ((manifestTimestampURLField.Equals(value) != true))
                    {
                        this.manifestTimestampURLField = value;
                        this.OnPropertyChanged("ManifestTimestampURL");
                    }
                }
                else
                {
                    this.manifestTimestampURLField = value;
                    this.OnPropertyChanged("ManifestTimestampURL");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool SignManifests
        {
            get
            {
                return this.signManifestsField;
            }
            set
            {
                if ((signManifestsField.Equals(value) != true))
                {
                    this.signManifestsField = value;
                    this.OnPropertyChanged("SignManifests");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignManifestsSpecified
        {
            get
            {
                return this.signManifestsFieldSpecified;
            }
            set
            {
                if ((signManifestsFieldSpecified.Equals(value) != true))
                {
                    this.signManifestsFieldSpecified = value;
                    this.OnPropertyChanged("SignManifestsSpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool SignAssembly
        {
            get
            {
                return this.signAssemblyField;
            }
            set
            {
                if ((signAssemblyField.Equals(value) != true))
                {
                    this.signAssemblyField = value;
                    this.OnPropertyChanged("SignAssembly");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignAssemblySpecified
        {
            get
            {
                return this.signAssemblyFieldSpecified;
            }
            set
            {
                if ((signAssemblyFieldSpecified.Equals(value) != true))
                {
                    this.signAssemblyFieldSpecified = value;
                    this.OnPropertyChanged("SignAssemblySpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AssemblyOriginatorKeyFile
        {
            get
            {
                return this.assemblyOriginatorKeyFileField;
            }
            set
            {
                if ((this.assemblyOriginatorKeyFileField != null))
                {
                    if ((assemblyOriginatorKeyFileField.Equals(value) != true))
                    {
                        this.assemblyOriginatorKeyFileField = value;
                        this.OnPropertyChanged("AssemblyOriginatorKeyFile");
                    }
                }
                else
                {
                    this.assemblyOriginatorKeyFileField = value;
                    this.OnPropertyChanged("AssemblyOriginatorKeyFile");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool DelaySign
        {
            get
            {
                return this.delaySignField;
            }
            set
            {
                if ((delaySignField.Equals(value) != true))
                {
                    this.delaySignField = value;
                    this.OnPropertyChanged("DelaySign");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DelaySignSpecified
        {
            get
            {
                return this.delaySignFieldSpecified;
            }
            set
            {
                if ((delaySignFieldSpecified.Equals(value) != true))
                {
                    this.delaySignFieldSpecified = value;
                    this.OnPropertyChanged("DelaySignSpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool GenerateManifests
        {
            get
            {
                return this.generateManifestsField;
            }
            set
            {
                if ((generateManifestsField.Equals(value) != true))
                {
                    this.generateManifestsField = value;
                    this.OnPropertyChanged("GenerateManifests");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GenerateManifestsSpecified
        {
            get
            {
                return this.generateManifestsFieldSpecified;
            }
            set
            {
                if ((generateManifestsFieldSpecified.Equals(value) != true))
                {
                    this.generateManifestsFieldSpecified = value;
                    this.OnPropertyChanged("GenerateManifestsSpecified");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TargetZone
        {
            get
            {
                return this.targetZoneField;
            }
            set
            {
                if ((this.targetZoneField != null))
                {
                    if ((targetZoneField.Equals(value) != true))
                    {
                        this.targetZoneField = value;
                        this.OnPropertyChanged("TargetZone");
                    }
                }
                else
                {
                    this.targetZoneField = value;
                    this.OnPropertyChanged("TargetZone");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ExcludedPermissions
        {
            get
            {
                return this.excludedPermissionsField;
            }
            set
            {
                if ((this.excludedPermissionsField != null))
                {
                    if ((excludedPermissionsField.Equals(value) != true))
                    {
                        this.excludedPermissionsField = value;
                        this.OnPropertyChanged("ExcludedPermissions");
                    }
                }
                else
                {
                    this.excludedPermissionsField = value;
                    this.OnPropertyChanged("ExcludedPermissions");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TargetFrameworkVersion
        {
            get
            {
                return this.targetFrameworkVersionField;
            }
            set
            {
                if ((this.targetFrameworkVersionField != null))
                {
                    if ((targetFrameworkVersionField.Equals(value) != true))
                    {
                        this.targetFrameworkVersionField = value;
                        this.OnPropertyChanged("TargetFrameworkVersion");
                    }
                }
                else
                {
                    this.targetFrameworkVersionField = value;
                    this.OnPropertyChanged("TargetFrameworkVersion");
                }
            }
        }

        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public List<System.Xml.XmlAttribute> AnyAttr
        {
            get
            {
                return this.anyAttrField;
            }
            set
            {
                if ((this.anyAttrField != null))
                {
                    if ((anyAttrField.Equals(value) != true))
                    {
                        this.anyAttrField = value;
                        this.OnPropertyChanged("AnyAttr");
                    }
                }
                else
                {
                    this.anyAttrField = value;
                    this.OnPropertyChanged("AnyAttr");
                }
            }
        }

        [XmlIgnore()]
        public bool PlatformsSpecified
        {
            get
            {
                return platformsFieldSpecified;
            }
            set
            {
                platformsFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ToolFilesSpecified
        {
            get
            {
                return toolFilesFieldSpecified;
            }
            set
            {
                toolFilesFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool PublishingDataSpecified
        {
            get
            {
                return publishingDataFieldSpecified;
            }
            set
            {
                publishingDataFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ConfigurationsSpecified
        {
            get
            {
                return configurationsFieldSpecified;
            }
            set
            {
                configurationsFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ReferencesSpecified
        {
            get
            {
                return referencesFieldSpecified;
            }
            set
            {
                referencesFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool FilesSpecified
        {
            get
            {
                return filesFieldSpecified;
            }
            set
            {
                filesFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool GlobalsSpecified
        {
            get
            {
                return globalsFieldSpecified;
            }
            set
            {
                globalsFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ProjectTypeSpecified
        {
            get
            {
                return projectTypeFieldSpecified;
            }
            set
            {
                projectTypeFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool VersionSpecified
        {
            get
            {
                return versionFieldSpecified;
            }
            set
            {
                versionFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ProjectGUIDSpecified
        {
            get
            {
                return projectGUIDFieldSpecified;
            }
            set
            {
                projectGUIDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool RootNamespaceSpecified
        {
            get
            {
                return rootNamespaceFieldSpecified;
            }
            set
            {
                rootNamespaceFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool KeywordSpecified
        {
            get
            {
                return keywordFieldSpecified;
            }
            set
            {
                keywordFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool NameSpecified
        {
            get
            {
                return nameFieldSpecified;
            }
            set
            {
                nameFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool AssemblyReferenceSearchPathsSpecified
        {
            get
            {
                return assemblyReferenceSearchPathsFieldSpecified;
            }
            set
            {
                assemblyReferenceSearchPathsFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ManifestKeyFileSpecified
        {
            get
            {
                return manifestKeyFileFieldSpecified;
            }
            set
            {
                manifestKeyFileFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ManifestCertificateThumbprintSpecified
        {
            get
            {
                return manifestCertificateThumbprintFieldSpecified;
            }
            set
            {
                manifestCertificateThumbprintFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ManifestTimestampURLSpecified
        {
            get
            {
                return manifestTimestampURLFieldSpecified;
            }
            set
            {
                manifestTimestampURLFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool AssemblyOriginatorKeyFileSpecified
        {
            get
            {
                return assemblyOriginatorKeyFileFieldSpecified;
            }
            set
            {
                assemblyOriginatorKeyFileFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TargetZoneSpecified
        {
            get
            {
                return targetZoneFieldSpecified;
            }
            set
            {
                targetZoneFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ExcludedPermissionsSpecified
        {
            get
            {
                return excludedPermissionsFieldSpecified;
            }
            set
            {
                excludedPermissionsFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool TargetFrameworkVersionSpecified
        {
            get
            {
                return targetFrameworkVersionFieldSpecified;
            }
            set
            {
                targetFrameworkVersionFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool AnyAttrSpecified
        {
            get
            {
                return anyAttrFieldSpecified;
            }
            set
            {
                anyAttrFieldSpecified = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class VisualStudioProjectTypePlatform : EntityBase<VisualStudioProjectTypePlatform>
    {

        private string nameField;

        private bool nameFieldSpecified;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name");
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name");
                }
            }
        }

        [XmlIgnore()]
        public bool NameSpecified
        {
            get
            {
                return nameFieldSpecified;
            }
            set
            {
                nameFieldSpecified = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "", IsNullable = true)]
    public partial class FileType : EntityBase<FileType>
    {

        private List<object> itemsField;

        private string relativePathField;

        private List<System.Xml.XmlAttribute> anyAttrField;

        private bool itemsFieldSpecified;

        private bool relativePathFieldSpecified;

        private bool anyAttrFieldSpecified;

        public FileType()
        {
            this.anyAttrField = new List<System.Xml.XmlAttribute>();
            this.itemsField = new List<object>();
        }

        [System.Xml.Serialization.XmlElementAttribute("File", typeof(FileType), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute("FileConfiguration", typeof(BuildConfigurationType), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public List<object> Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                if ((this.itemsField != null))
                {
                    if ((itemsField.Equals(value) != true))
                    {
                        this.itemsField = value;
                        this.OnPropertyChanged("Items");
                    }
                }
                else
                {
                    this.itemsField = value;
                    this.OnPropertyChanged("Items");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string RelativePath
        {
            get
            {
                return this.relativePathField;
            }
            set
            {
                if ((this.relativePathField != null))
                {
                    if ((relativePathField.Equals(value) != true))
                    {
                        this.relativePathField = value;
                        this.OnPropertyChanged("RelativePath");
                    }
                }
                else
                {
                    this.relativePathField = value;
                    this.OnPropertyChanged("RelativePath");
                }
            }
        }

        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public List<System.Xml.XmlAttribute> AnyAttr
        {
            get
            {
                return this.anyAttrField;
            }
            set
            {
                if ((this.anyAttrField != null))
                {
                    if ((anyAttrField.Equals(value) != true))
                    {
                        this.anyAttrField = value;
                        this.OnPropertyChanged("AnyAttr");
                    }
                }
                else
                {
                    this.anyAttrField = value;
                    this.OnPropertyChanged("AnyAttr");
                }
            }
        }

        [XmlIgnore()]
        public bool ItemsSpecified
        {
            get
            {
                return itemsFieldSpecified;
            }
            set
            {
                itemsFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool RelativePathSpecified
        {
            get
            {
                return relativePathFieldSpecified;
            }
            set
            {
                relativePathFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool AnyAttrSpecified
        {
            get
            {
                return anyAttrFieldSpecified;
            }
            set
            {
                anyAttrFieldSpecified = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "", IsNullable = true)]
    public partial class BuildConfigurationType : ConfigurationType, System.ComponentModel.INotifyPropertyChanged
    {

        private bool excludedFromBuildField;

        private bool excludedFromBuildFieldSpecified;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool ExcludedFromBuild
        {
            get
            {
                return this.excludedFromBuildField;
            }
            set
            {
                if ((excludedFromBuildField.Equals(value) != true))
                {
                    this.excludedFromBuildField = value;
                    this.OnPropertyChanged("ExcludedFromBuild");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExcludedFromBuildSpecified
        {
            get
            {
                return this.excludedFromBuildFieldSpecified;
            }
            set
            {
                if ((excludedFromBuildFieldSpecified.Equals(value) != true))
                {
                    this.excludedFromBuildFieldSpecified = value;
                    this.OnPropertyChanged("ExcludedFromBuildSpecified");
                }
            }
        }
    }

    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BuildConfigurationType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "", IsNullable = true)]
    public partial class ConfigurationType : EntityBase<ConfigurationType>
    {

        private List<ConfigurationTypeTool> toolField;

        private List<ConfigurationTypeDeploymentTool> deploymentToolField;

        private List<ConfigurationTypeDebuggerTool> debuggerToolField;

        private string nameField;

        private List<System.Xml.XmlAttribute> anyAttrField;

        private bool toolFieldSpecified;

        private bool deploymentToolFieldSpecified;

        private bool debuggerToolFieldSpecified;

        private bool nameFieldSpecified;

        private bool anyAttrFieldSpecified;

        public ConfigurationType()
        {
            this.anyAttrField = new List<System.Xml.XmlAttribute>();
            this.debuggerToolField = new List<ConfigurationTypeDebuggerTool>();
            this.deploymentToolField = new List<ConfigurationTypeDeploymentTool>();
            this.toolField = new List<ConfigurationTypeTool>();
        }

        [System.Xml.Serialization.XmlElementAttribute("Tool", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public List<ConfigurationTypeTool> Tool
        {
            get
            {
                return this.toolField;
            }
            set
            {
                if ((this.toolField != null))
                {
                    if ((toolField.Equals(value) != true))
                    {
                        this.toolField = value;
                        this.OnPropertyChanged("Tool");
                    }
                }
                else
                {
                    this.toolField = value;
                    this.OnPropertyChanged("Tool");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("DeploymentTool", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 1)]
        public List<ConfigurationTypeDeploymentTool> DeploymentTool
        {
            get
            {
                return this.deploymentToolField;
            }
            set
            {
                if ((this.deploymentToolField != null))
                {
                    if ((deploymentToolField.Equals(value) != true))
                    {
                        this.deploymentToolField = value;
                        this.OnPropertyChanged("DeploymentTool");
                    }
                }
                else
                {
                    this.deploymentToolField = value;
                    this.OnPropertyChanged("DeploymentTool");
                }
            }
        }

        [System.Xml.Serialization.XmlElementAttribute("DebuggerTool", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 2)]
        public List<ConfigurationTypeDebuggerTool> DebuggerTool
        {
            get
            {
                return this.debuggerToolField;
            }
            set
            {
                if ((this.debuggerToolField != null))
                {
                    if ((debuggerToolField.Equals(value) != true))
                    {
                        this.debuggerToolField = value;
                        this.OnPropertyChanged("DebuggerTool");
                    }
                }
                else
                {
                    this.debuggerToolField = value;
                    this.OnPropertyChanged("DebuggerTool");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name");
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name");
                }
            }
        }

        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public List<System.Xml.XmlAttribute> AnyAttr
        {
            get
            {
                return this.anyAttrField;
            }
            set
            {
                if ((this.anyAttrField != null))
                {
                    if ((anyAttrField.Equals(value) != true))
                    {
                        this.anyAttrField = value;
                        this.OnPropertyChanged("AnyAttr");
                    }
                }
                else
                {
                    this.anyAttrField = value;
                    this.OnPropertyChanged("AnyAttr");
                }
            }
        }

        [XmlIgnore()]
        public bool ToolSpecified
        {
            get
            {
                return toolFieldSpecified;
            }
            set
            {
                toolFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool DeploymentToolSpecified
        {
            get
            {
                return deploymentToolFieldSpecified;
            }
            set
            {
                deploymentToolFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool DebuggerToolSpecified
        {
            get
            {
                return debuggerToolFieldSpecified;
            }
            set
            {
                debuggerToolFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool NameSpecified
        {
            get
            {
                return nameFieldSpecified;
            }
            set
            {
                nameFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool AnyAttrSpecified
        {
            get
            {
                return anyAttrFieldSpecified;
            }
            set
            {
                anyAttrFieldSpecified = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ConfigurationTypeTool : EntityBase<ConfigurationTypeTool>
    {

        private string nameField;

        private List<System.Xml.XmlAttribute> anyAttrField;

        private bool nameFieldSpecified;

        private bool anyAttrFieldSpecified;

        public ConfigurationTypeTool()
        {
            this.anyAttrField = new List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name");
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name");
                }
            }
        }

        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public List<System.Xml.XmlAttribute> AnyAttr
        {
            get
            {
                return this.anyAttrField;
            }
            set
            {
                if ((this.anyAttrField != null))
                {
                    if ((anyAttrField.Equals(value) != true))
                    {
                        this.anyAttrField = value;
                        this.OnPropertyChanged("AnyAttr");
                    }
                }
                else
                {
                    this.anyAttrField = value;
                    this.OnPropertyChanged("AnyAttr");
                }
            }
        }

        [XmlIgnore()]
        public bool NameSpecified
        {
            get
            {
                return nameFieldSpecified;
            }
            set
            {
                nameFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool AnyAttrSpecified
        {
            get
            {
                return anyAttrFieldSpecified;
            }
            set
            {
                anyAttrFieldSpecified = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ConfigurationTypeDeploymentTool : EntityBase<ConfigurationTypeDeploymentTool>
    {

        private List<System.Xml.XmlAttribute> anyAttrField;

        private bool anyAttrFieldSpecified;

        public ConfigurationTypeDeploymentTool()
        {
            this.anyAttrField = new List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public List<System.Xml.XmlAttribute> AnyAttr
        {
            get
            {
                return this.anyAttrField;
            }
            set
            {
                if ((this.anyAttrField != null))
                {
                    if ((anyAttrField.Equals(value) != true))
                    {
                        this.anyAttrField = value;
                        this.OnPropertyChanged("AnyAttr");
                    }
                }
                else
                {
                    this.anyAttrField = value;
                    this.OnPropertyChanged("AnyAttr");
                }
            }
        }

        [XmlIgnore()]
        public bool AnyAttrSpecified
        {
            get
            {
                return anyAttrFieldSpecified;
            }
            set
            {
                anyAttrFieldSpecified = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ConfigurationTypeDebuggerTool : EntityBase<ConfigurationTypeDebuggerTool>
    {

        private List<System.Xml.XmlAttribute> anyAttrField;

        private bool anyAttrFieldSpecified;

        public ConfigurationTypeDebuggerTool()
        {
            this.anyAttrField = new List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public List<System.Xml.XmlAttribute> AnyAttr
        {
            get
            {
                return this.anyAttrField;
            }
            set
            {
                if ((this.anyAttrField != null))
                {
                    if ((anyAttrField.Equals(value) != true))
                    {
                        this.anyAttrField = value;
                        this.OnPropertyChanged("AnyAttr");
                    }
                }
                else
                {
                    this.anyAttrField = value;
                    this.OnPropertyChanged("AnyAttr");
                }
            }
        }

        [XmlIgnore()]
        public bool AnyAttrSpecified
        {
            get
            {
                return anyAttrFieldSpecified;
            }
            set
            {
                anyAttrFieldSpecified = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "", IsNullable = true)]
    public partial class FilterType : EntityBase<FilterType>
    {

        private List<object> itemsField;

        private string nameField;

        private List<System.Xml.XmlAttribute> anyAttrField;

        private bool itemsFieldSpecified;

        private bool nameFieldSpecified;

        private bool anyAttrFieldSpecified;

        public FilterType()
        {
            this.anyAttrField = new List<System.Xml.XmlAttribute>();
            this.itemsField = new List<object>();
        }

        [System.Xml.Serialization.XmlElementAttribute("File", typeof(FileType), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        [System.Xml.Serialization.XmlElementAttribute("Filter", typeof(FilterType), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public List<object> Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                if ((this.itemsField != null))
                {
                    if ((itemsField.Equals(value) != true))
                    {
                        this.itemsField = value;
                        this.OnPropertyChanged("Items");
                    }
                }
                else
                {
                    this.itemsField = value;
                    this.OnPropertyChanged("Items");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name");
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name");
                }
            }
        }

        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public List<System.Xml.XmlAttribute> AnyAttr
        {
            get
            {
                return this.anyAttrField;
            }
            set
            {
                if ((this.anyAttrField != null))
                {
                    if ((anyAttrField.Equals(value) != true))
                    {
                        this.anyAttrField = value;
                        this.OnPropertyChanged("AnyAttr");
                    }
                }
                else
                {
                    this.anyAttrField = value;
                    this.OnPropertyChanged("AnyAttr");
                }
            }
        }

        [XmlIgnore()]
        public bool ItemsSpecified
        {
            get
            {
                return itemsFieldSpecified;
            }
            set
            {
                itemsFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool NameSpecified
        {
            get
            {
                return nameFieldSpecified;
            }
            set
            {
                nameFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool AnyAttrSpecified
        {
            get
            {
                return anyAttrFieldSpecified;
            }
            set
            {
                anyAttrFieldSpecified = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class VisualStudioProjectTypeDefaultToolFile : EntityBase<VisualStudioProjectTypeDefaultToolFile>
    {

        private string fileNameField;

        private bool fileNameFieldSpecified;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FileName
        {
            get
            {
                return this.fileNameField;
            }
            set
            {
                if ((this.fileNameField != null))
                {
                    if ((fileNameField.Equals(value) != true))
                    {
                        this.fileNameField = value;
                        this.OnPropertyChanged("FileName");
                    }
                }
                else
                {
                    this.fileNameField = value;
                    this.OnPropertyChanged("FileName");
                }
            }
        }

        [XmlIgnore()]
        public bool FileNameSpecified
        {
            get
            {
                return fileNameFieldSpecified;
            }
            set
            {
                fileNameFieldSpecified = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class VisualStudioProjectTypeToolFile : EntityBase<VisualStudioProjectTypeToolFile>
    {

        private string relativePathField;

        private bool relativePathFieldSpecified;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string RelativePath
        {
            get
            {
                return this.relativePathField;
            }
            set
            {
                if ((this.relativePathField != null))
                {
                    if ((relativePathField.Equals(value) != true))
                    {
                        this.relativePathField = value;
                        this.OnPropertyChanged("RelativePath");
                    }
                }
                else
                {
                    this.relativePathField = value;
                    this.OnPropertyChanged("RelativePath");
                }
            }
        }

        [XmlIgnore()]
        public bool RelativePathSpecified
        {
            get
            {
                return relativePathFieldSpecified;
            }
            set
            {
                relativePathFieldSpecified = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class VisualStudioProjectTypePublishingData : EntityBase<VisualStudioProjectTypePublishingData>
    {

        private List<VisualStudioProjectTypePublishingDataPublishingItem> itemsField;

        private List<System.Xml.XmlAttribute> anyAttrField;

        private bool itemsFieldSpecified;

        private bool anyAttrFieldSpecified;

        public VisualStudioProjectTypePublishingData()
        {
            this.anyAttrField = new List<System.Xml.XmlAttribute>();
            this.itemsField = new List<VisualStudioProjectTypePublishingDataPublishingItem>();
        }

        [System.Xml.Serialization.XmlElementAttribute("PublishingItem", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public List<VisualStudioProjectTypePublishingDataPublishingItem> Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                if ((this.itemsField != null))
                {
                    if ((itemsField.Equals(value) != true))
                    {
                        this.itemsField = value;
                        this.OnPropertyChanged("Items");
                    }
                }
                else
                {
                    this.itemsField = value;
                    this.OnPropertyChanged("Items");
                }
            }
        }

        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public List<System.Xml.XmlAttribute> AnyAttr
        {
            get
            {
                return this.anyAttrField;
            }
            set
            {
                if ((this.anyAttrField != null))
                {
                    if ((anyAttrField.Equals(value) != true))
                    {
                        this.anyAttrField = value;
                        this.OnPropertyChanged("AnyAttr");
                    }
                }
                else
                {
                    this.anyAttrField = value;
                    this.OnPropertyChanged("AnyAttr");
                }
            }
        }

        [XmlIgnore()]
        public bool ItemsSpecified
        {
            get
            {
                return itemsFieldSpecified;
            }
            set
            {
                itemsFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool AnyAttrSpecified
        {
            get
            {
                return anyAttrFieldSpecified;
            }
            set
            {
                anyAttrFieldSpecified = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class VisualStudioProjectTypePublishingDataPublishingItem : EntityBase<VisualStudioProjectTypePublishingDataPublishingItem>
    {

        private List<System.Xml.XmlAttribute> anyAttrField;

        private bool anyAttrFieldSpecified;

        public VisualStudioProjectTypePublishingDataPublishingItem()
        {
            this.anyAttrField = new List<System.Xml.XmlAttribute>();
        }

        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public List<System.Xml.XmlAttribute> AnyAttr
        {
            get
            {
                return this.anyAttrField;
            }
            set
            {
                if ((this.anyAttrField != null))
                {
                    if ((anyAttrField.Equals(value) != true))
                    {
                        this.anyAttrField = value;
                        this.OnPropertyChanged("AnyAttr");
                    }
                }
                else
                {
                    this.anyAttrField = value;
                    this.OnPropertyChanged("AnyAttr");
                }
            }
        }

        [XmlIgnore()]
        public bool AnyAttrSpecified
        {
            get
            {
                return anyAttrFieldSpecified;
            }
            set
            {
                anyAttrFieldSpecified = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class VisualStudioProjectTypeActiveXReference : EntityBase<VisualStudioProjectTypeActiveXReference>
    {

        private List<ConfigurationType> referenceConfigurationField;

        private string controlGUIDField;

        private float controlVersionField;

        private string localeIDField;

        private string wrapperToolField;

        private string copyLocalField;

        private bool copyLocalDependenciesField;

        private bool copyLocalSatelliteAssembliesField;

        private bool useInBuildField;

        private bool useDependenciesInBuildField;

        private bool referenceConfigurationFieldSpecified;

        private bool controlGUIDFieldSpecified;

        private bool controlVersionFieldSpecified;

        private bool localeIDFieldSpecified;

        private bool wrapperToolFieldSpecified;

        private bool copyLocalFieldSpecified;

        private bool copyLocalDependenciesFieldSpecified;

        private bool copyLocalSatelliteAssembliesFieldSpecified;

        private bool useInBuildFieldSpecified;

        private bool useDependenciesInBuildFieldSpecified;

        public VisualStudioProjectTypeActiveXReference()
        {
            this.referenceConfigurationField = new List<ConfigurationType>();
            this.copyLocalDependenciesField = true;
            this.copyLocalSatelliteAssembliesField = true;
            this.useInBuildField = true;
            this.useDependenciesInBuildField = true;
        }

        [System.Xml.Serialization.XmlElementAttribute("ReferenceConfiguration", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public List<ConfigurationType> ReferenceConfiguration
        {
            get
            {
                return this.referenceConfigurationField;
            }
            set
            {
                if ((this.referenceConfigurationField != null))
                {
                    if ((referenceConfigurationField.Equals(value) != true))
                    {
                        this.referenceConfigurationField = value;
                        this.OnPropertyChanged("ReferenceConfiguration");
                    }
                }
                else
                {
                    this.referenceConfigurationField = value;
                    this.OnPropertyChanged("ReferenceConfiguration");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ControlGUID
        {
            get
            {
                return this.controlGUIDField;
            }
            set
            {
                if ((this.controlGUIDField != null))
                {
                    if ((controlGUIDField.Equals(value) != true))
                    {
                        this.controlGUIDField = value;
                        this.OnPropertyChanged("ControlGUID");
                    }
                }
                else
                {
                    this.controlGUIDField = value;
                    this.OnPropertyChanged("ControlGUID");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float ControlVersion
        {
            get
            {
                return this.controlVersionField;
            }
            set
            {
                if ((controlVersionField.Equals(value) != true))
                {
                    this.controlVersionField = value;
                    this.OnPropertyChanged("ControlVersion");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LocaleID
        {
            get
            {
                return this.localeIDField;
            }
            set
            {
                if ((this.localeIDField != null))
                {
                    if ((localeIDField.Equals(value) != true))
                    {
                        this.localeIDField = value;
                        this.OnPropertyChanged("LocaleID");
                    }
                }
                else
                {
                    this.localeIDField = value;
                    this.OnPropertyChanged("LocaleID");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string WrapperTool
        {
            get
            {
                return this.wrapperToolField;
            }
            set
            {
                if ((this.wrapperToolField != null))
                {
                    if ((wrapperToolField.Equals(value) != true))
                    {
                        this.wrapperToolField = value;
                        this.OnPropertyChanged("WrapperTool");
                    }
                }
                else
                {
                    this.wrapperToolField = value;
                    this.OnPropertyChanged("WrapperTool");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CopyLocal
        {
            get
            {
                return this.copyLocalField;
            }
            set
            {
                if ((this.copyLocalField != null))
                {
                    if ((copyLocalField.Equals(value) != true))
                    {
                        this.copyLocalField = value;
                        this.OnPropertyChanged("CopyLocal");
                    }
                }
                else
                {
                    this.copyLocalField = value;
                    this.OnPropertyChanged("CopyLocal");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool CopyLocalDependencies
        {
            get
            {
                return this.copyLocalDependenciesField;
            }
            set
            {
                if ((copyLocalDependenciesField.Equals(value) != true))
                {
                    this.copyLocalDependenciesField = value;
                    this.OnPropertyChanged("CopyLocalDependencies");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool CopyLocalSatelliteAssemblies
        {
            get
            {
                return this.copyLocalSatelliteAssembliesField;
            }
            set
            {
                if ((copyLocalSatelliteAssembliesField.Equals(value) != true))
                {
                    this.copyLocalSatelliteAssembliesField = value;
                    this.OnPropertyChanged("CopyLocalSatelliteAssemblies");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool UseInBuild
        {
            get
            {
                return this.useInBuildField;
            }
            set
            {
                if ((useInBuildField.Equals(value) != true))
                {
                    this.useInBuildField = value;
                    this.OnPropertyChanged("UseInBuild");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool UseDependenciesInBuild
        {
            get
            {
                return this.useDependenciesInBuildField;
            }
            set
            {
                if ((useDependenciesInBuildField.Equals(value) != true))
                {
                    this.useDependenciesInBuildField = value;
                    this.OnPropertyChanged("UseDependenciesInBuild");
                }
            }
        }

        [XmlIgnore()]
        public bool ReferenceConfigurationSpecified
        {
            get
            {
                return referenceConfigurationFieldSpecified;
            }
            set
            {
                referenceConfigurationFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ControlGUIDSpecified
        {
            get
            {
                return controlGUIDFieldSpecified;
            }
            set
            {
                controlGUIDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ControlVersionSpecified
        {
            get
            {
                return controlVersionFieldSpecified;
            }
            set
            {
                controlVersionFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool LocaleIDSpecified
        {
            get
            {
                return localeIDFieldSpecified;
            }
            set
            {
                localeIDFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool WrapperToolSpecified
        {
            get
            {
                return wrapperToolFieldSpecified;
            }
            set
            {
                wrapperToolFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CopyLocalSpecified
        {
            get
            {
                return copyLocalFieldSpecified;
            }
            set
            {
                copyLocalFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CopyLocalDependenciesSpecified
        {
            get
            {
                return copyLocalDependenciesFieldSpecified;
            }
            set
            {
                copyLocalDependenciesFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CopyLocalSatelliteAssembliesSpecified
        {
            get
            {
                return copyLocalSatelliteAssembliesFieldSpecified;
            }
            set
            {
                copyLocalSatelliteAssembliesFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool UseInBuildSpecified
        {
            get
            {
                return useInBuildFieldSpecified;
            }
            set
            {
                useInBuildFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool UseDependenciesInBuildSpecified
        {
            get
            {
                return useDependenciesInBuildFieldSpecified;
            }
            set
            {
                useDependenciesInBuildFieldSpecified = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class VisualStudioProjectTypeAssemblyReference : EntityBase<VisualStudioProjectTypeAssemblyReference>
    {

        private List<ConfigurationType> referenceConfigurationField;

        private string relativePathField;

        private string assemblyNameField;

        private string copyLocalField;

        private bool copyLocalDependenciesField;

        private bool copyLocalSatelliteAssembliesField;

        private bool useInBuildField;

        private bool useDependenciesInBuildField;

        private string subTypeField;

        private string minFrameworkVersionField;

        private bool referenceConfigurationFieldSpecified;

        private bool relativePathFieldSpecified;

        private bool assemblyNameFieldSpecified;

        private bool copyLocalFieldSpecified;

        private bool copyLocalDependenciesFieldSpecified;

        private bool copyLocalSatelliteAssembliesFieldSpecified;

        private bool useInBuildFieldSpecified;

        private bool useDependenciesInBuildFieldSpecified;

        private bool subTypeFieldSpecified;

        private bool minFrameworkVersionFieldSpecified;

        public VisualStudioProjectTypeAssemblyReference()
        {
            this.referenceConfigurationField = new List<ConfigurationType>();
            this.copyLocalDependenciesField = true;
            this.copyLocalSatelliteAssembliesField = true;
            this.useInBuildField = true;
            this.useDependenciesInBuildField = true;
        }

        [System.Xml.Serialization.XmlElementAttribute("ReferenceConfiguration", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public List<ConfigurationType> ReferenceConfiguration
        {
            get
            {
                return this.referenceConfigurationField;
            }
            set
            {
                if ((this.referenceConfigurationField != null))
                {
                    if ((referenceConfigurationField.Equals(value) != true))
                    {
                        this.referenceConfigurationField = value;
                        this.OnPropertyChanged("ReferenceConfiguration");
                    }
                }
                else
                {
                    this.referenceConfigurationField = value;
                    this.OnPropertyChanged("ReferenceConfiguration");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string RelativePath
        {
            get
            {
                return this.relativePathField;
            }
            set
            {
                if ((this.relativePathField != null))
                {
                    if ((relativePathField.Equals(value) != true))
                    {
                        this.relativePathField = value;
                        this.OnPropertyChanged("RelativePath");
                    }
                }
                else
                {
                    this.relativePathField = value;
                    this.OnPropertyChanged("RelativePath");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AssemblyName
        {
            get
            {
                return this.assemblyNameField;
            }
            set
            {
                if ((this.assemblyNameField != null))
                {
                    if ((assemblyNameField.Equals(value) != true))
                    {
                        this.assemblyNameField = value;
                        this.OnPropertyChanged("AssemblyName");
                    }
                }
                else
                {
                    this.assemblyNameField = value;
                    this.OnPropertyChanged("AssemblyName");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CopyLocal
        {
            get
            {
                return this.copyLocalField;
            }
            set
            {
                if ((this.copyLocalField != null))
                {
                    if ((copyLocalField.Equals(value) != true))
                    {
                        this.copyLocalField = value;
                        this.OnPropertyChanged("CopyLocal");
                    }
                }
                else
                {
                    this.copyLocalField = value;
                    this.OnPropertyChanged("CopyLocal");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool CopyLocalDependencies
        {
            get
            {
                return this.copyLocalDependenciesField;
            }
            set
            {
                if ((copyLocalDependenciesField.Equals(value) != true))
                {
                    this.copyLocalDependenciesField = value;
                    this.OnPropertyChanged("CopyLocalDependencies");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool CopyLocalSatelliteAssemblies
        {
            get
            {
                return this.copyLocalSatelliteAssembliesField;
            }
            set
            {
                if ((copyLocalSatelliteAssembliesField.Equals(value) != true))
                {
                    this.copyLocalSatelliteAssembliesField = value;
                    this.OnPropertyChanged("CopyLocalSatelliteAssemblies");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool UseInBuild
        {
            get
            {
                return this.useInBuildField;
            }
            set
            {
                if ((useInBuildField.Equals(value) != true))
                {
                    this.useInBuildField = value;
                    this.OnPropertyChanged("UseInBuild");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool UseDependenciesInBuild
        {
            get
            {
                return this.useDependenciesInBuildField;
            }
            set
            {
                if ((useDependenciesInBuildField.Equals(value) != true))
                {
                    this.useDependenciesInBuildField = value;
                    this.OnPropertyChanged("UseDependenciesInBuild");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SubType
        {
            get
            {
                return this.subTypeField;
            }
            set
            {
                if ((this.subTypeField != null))
                {
                    if ((subTypeField.Equals(value) != true))
                    {
                        this.subTypeField = value;
                        this.OnPropertyChanged("SubType");
                    }
                }
                else
                {
                    this.subTypeField = value;
                    this.OnPropertyChanged("SubType");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MinFrameworkVersion
        {
            get
            {
                return this.minFrameworkVersionField;
            }
            set
            {
                if ((this.minFrameworkVersionField != null))
                {
                    if ((minFrameworkVersionField.Equals(value) != true))
                    {
                        this.minFrameworkVersionField = value;
                        this.OnPropertyChanged("MinFrameworkVersion");
                    }
                }
                else
                {
                    this.minFrameworkVersionField = value;
                    this.OnPropertyChanged("MinFrameworkVersion");
                }
            }
        }

        [XmlIgnore()]
        public bool ReferenceConfigurationSpecified
        {
            get
            {
                return referenceConfigurationFieldSpecified;
            }
            set
            {
                referenceConfigurationFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool RelativePathSpecified
        {
            get
            {
                return relativePathFieldSpecified;
            }
            set
            {
                relativePathFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool AssemblyNameSpecified
        {
            get
            {
                return assemblyNameFieldSpecified;
            }
            set
            {
                assemblyNameFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CopyLocalSpecified
        {
            get
            {
                return copyLocalFieldSpecified;
            }
            set
            {
                copyLocalFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CopyLocalDependenciesSpecified
        {
            get
            {
                return copyLocalDependenciesFieldSpecified;
            }
            set
            {
                copyLocalDependenciesFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CopyLocalSatelliteAssembliesSpecified
        {
            get
            {
                return copyLocalSatelliteAssembliesFieldSpecified;
            }
            set
            {
                copyLocalSatelliteAssembliesFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool UseInBuildSpecified
        {
            get
            {
                return useInBuildFieldSpecified;
            }
            set
            {
                useInBuildFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool UseDependenciesInBuildSpecified
        {
            get
            {
                return useDependenciesInBuildFieldSpecified;
            }
            set
            {
                useDependenciesInBuildFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool SubTypeSpecified
        {
            get
            {
                return subTypeFieldSpecified;
            }
            set
            {
                subTypeFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool MinFrameworkVersionSpecified
        {
            get
            {
                return minFrameworkVersionFieldSpecified;
            }
            set
            {
                minFrameworkVersionFieldSpecified = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class VisualStudioProjectTypeProjectReference : EntityBase<VisualStudioProjectTypeProjectReference>
    {

        private List<ConfigurationType> referenceConfigurationField;

        private string referencedProjectIdentifierField;

        private string nameField;

        private string copyLocalField;

        private bool copyLocalDependenciesField;

        private bool copyLocalSatelliteAssembliesField;

        private bool useInBuildField;

        private bool useDependenciesInBuildField;

        private string relativePathToProjectField;

        private bool referenceConfigurationFieldSpecified;

        private bool referencedProjectIdentifierFieldSpecified;

        private bool nameFieldSpecified;

        private bool copyLocalFieldSpecified;

        private bool copyLocalDependenciesFieldSpecified;

        private bool copyLocalSatelliteAssembliesFieldSpecified;

        private bool useInBuildFieldSpecified;

        private bool useDependenciesInBuildFieldSpecified;

        private bool relativePathToProjectFieldSpecified;

        public VisualStudioProjectTypeProjectReference()
        {
            this.referenceConfigurationField = new List<ConfigurationType>();
            this.copyLocalDependenciesField = true;
            this.copyLocalSatelliteAssembliesField = true;
            this.useInBuildField = true;
            this.useDependenciesInBuildField = true;
        }

        [System.Xml.Serialization.XmlElementAttribute("ReferenceConfiguration", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, Order = 0)]
        public List<ConfigurationType> ReferenceConfiguration
        {
            get
            {
                return this.referenceConfigurationField;
            }
            set
            {
                if ((this.referenceConfigurationField != null))
                {
                    if ((referenceConfigurationField.Equals(value) != true))
                    {
                        this.referenceConfigurationField = value;
                        this.OnPropertyChanged("ReferenceConfiguration");
                    }
                }
                else
                {
                    this.referenceConfigurationField = value;
                    this.OnPropertyChanged("ReferenceConfiguration");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ReferencedProjectIdentifier
        {
            get
            {
                return this.referencedProjectIdentifierField;
            }
            set
            {
                if ((this.referencedProjectIdentifierField != null))
                {
                    if ((referencedProjectIdentifierField.Equals(value) != true))
                    {
                        this.referencedProjectIdentifierField = value;
                        this.OnPropertyChanged("ReferencedProjectIdentifier");
                    }
                }
                else
                {
                    this.referencedProjectIdentifierField = value;
                    this.OnPropertyChanged("ReferencedProjectIdentifier");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name");
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CopyLocal
        {
            get
            {
                return this.copyLocalField;
            }
            set
            {
                if ((this.copyLocalField != null))
                {
                    if ((copyLocalField.Equals(value) != true))
                    {
                        this.copyLocalField = value;
                        this.OnPropertyChanged("CopyLocal");
                    }
                }
                else
                {
                    this.copyLocalField = value;
                    this.OnPropertyChanged("CopyLocal");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool CopyLocalDependencies
        {
            get
            {
                return this.copyLocalDependenciesField;
            }
            set
            {
                if ((copyLocalDependenciesField.Equals(value) != true))
                {
                    this.copyLocalDependenciesField = value;
                    this.OnPropertyChanged("CopyLocalDependencies");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool CopyLocalSatelliteAssemblies
        {
            get
            {
                return this.copyLocalSatelliteAssembliesField;
            }
            set
            {
                if ((copyLocalSatelliteAssembliesField.Equals(value) != true))
                {
                    this.copyLocalSatelliteAssembliesField = value;
                    this.OnPropertyChanged("CopyLocalSatelliteAssemblies");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool UseInBuild
        {
            get
            {
                return this.useInBuildField;
            }
            set
            {
                if ((useInBuildField.Equals(value) != true))
                {
                    this.useInBuildField = value;
                    this.OnPropertyChanged("UseInBuild");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool UseDependenciesInBuild
        {
            get
            {
                return this.useDependenciesInBuildField;
            }
            set
            {
                if ((useDependenciesInBuildField.Equals(value) != true))
                {
                    this.useDependenciesInBuildField = value;
                    this.OnPropertyChanged("UseDependenciesInBuild");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string RelativePathToProject
        {
            get
            {
                return this.relativePathToProjectField;
            }
            set
            {
                if ((this.relativePathToProjectField != null))
                {
                    if ((relativePathToProjectField.Equals(value) != true))
                    {
                        this.relativePathToProjectField = value;
                        this.OnPropertyChanged("RelativePathToProject");
                    }
                }
                else
                {
                    this.relativePathToProjectField = value;
                    this.OnPropertyChanged("RelativePathToProject");
                }
            }
        }

        [XmlIgnore()]
        public bool ReferenceConfigurationSpecified
        {
            get
            {
                return referenceConfigurationFieldSpecified;
            }
            set
            {
                referenceConfigurationFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ReferencedProjectIdentifierSpecified
        {
            get
            {
                return referencedProjectIdentifierFieldSpecified;
            }
            set
            {
                referencedProjectIdentifierFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool NameSpecified
        {
            get
            {
                return nameFieldSpecified;
            }
            set
            {
                nameFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CopyLocalSpecified
        {
            get
            {
                return copyLocalFieldSpecified;
            }
            set
            {
                copyLocalFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CopyLocalDependenciesSpecified
        {
            get
            {
                return copyLocalDependenciesFieldSpecified;
            }
            set
            {
                copyLocalDependenciesFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool CopyLocalSatelliteAssembliesSpecified
        {
            get
            {
                return copyLocalSatelliteAssembliesFieldSpecified;
            }
            set
            {
                copyLocalSatelliteAssembliesFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool UseInBuildSpecified
        {
            get
            {
                return useInBuildFieldSpecified;
            }
            set
            {
                useInBuildFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool UseDependenciesInBuildSpecified
        {
            get
            {
                return useDependenciesInBuildFieldSpecified;
            }
            set
            {
                useDependenciesInBuildFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool RelativePathToProjectSpecified
        {
            get
            {
                return relativePathToProjectFieldSpecified;
            }
            set
            {
                relativePathToProjectFieldSpecified = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class VisualStudioProjectTypeGlobal : EntityBase<VisualStudioProjectTypeGlobal>
    {

        private string nameField;

        private string valueField;

        private bool nameFieldSpecified;

        private bool valueFieldSpecified;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name");
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name");
                }
            }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value");
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value");
                }
            }
        }

        [XmlIgnore()]
        public bool NameSpecified
        {
            get
            {
                return nameFieldSpecified;
            }
            set
            {
                nameFieldSpecified = value;
            }
        }

        [XmlIgnore()]
        public bool ValueSpecified
        {
            get
            {
                return valueFieldSpecified;
            }
            set
            {
                valueFieldSpecified = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public enum VisualStudioProjectTypeVersion
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7.00")]
        Item700,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7,00")]
        Item7001,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7.10")]
        Item710,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7,10")]
        Item7101,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8.00")]
        Item800,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8,00")]
        Item8001,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("9.00")]
        Item900,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("9,00")]
        Item9001,
    }
}
