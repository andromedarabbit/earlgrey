<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>Microsoft.SqlServer.Rmo</name>
	</assembly>
	<members>
		<member name="N:Microsoft.SqlServer.Replication">
			<summary>The <see cref="N:Microsoft.SqlServer.Replication"></see> namespace implements the Replication Management Object (RMO) model. RMO provides programmatic access to Microsoft SQL Server replication from a managed code environment.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.AddColumnOption">
			<summary>Enumerates the options for adding a column to a table published in an existing publication.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.AddColumnOption.All">
			<summary>Include the newly added column to all existing publications in which the underlying table is published. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.AddColumnOption.None">
			<summary>Do not include the newly added column to any publication in which the underlying table is published.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.AddColumnOption.Some">
			<summary>Include the newly added column only to specified publications. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.AgentJobHistoryInfo">
			<summary>Returns information about the results of the last run of a replication agent. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.AgentJobHistoryInfo.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Replication.AgentJobHistoryInfo"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.AgentJobHistoryInfo.LastRunDateTime">
			<summary>Gets or sets the date and time when the last agent run message was logged.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies a date and time.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.AgentJobHistoryInfo.LastRunMessage">
			<summary>Gets or sets the last message logged from a replication agent.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the message.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.AgentJobHistoryInfo.Status">
			<summary>Gets or sets the last status logged by a replication agent.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ReplicationStatus"></see> object value that specifies the status.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.AgentJobHistoryInfo.UserData">
			<summary>Gets or sets an object to which users can attach their own data. </summary>
			<returns>An <see cref="T:System.Object"></see> system object value that specifies custom user data.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.AgentProfile">
			<summary>Encapsulates all operations on replication agent profiles, such as creating, deleting, adding, and removing parameters, and assigning specific profiles to certain agents.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.AgentProfile.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Replication.AgentProfile"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.AgentProfile.#ctor(System.Int32,Microsoft.SqlServer.Management.Common.ServerConnection)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Replication.AgentProfile"></see> class with a specified agent profile ID value and server connection.</summary>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object that specifies a connection to the instance of Microsoft SQL Server.</param>
			<param name="profileID">An <see cref="T:System.Int32"></see> value that uniquely identifies the agent profile.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.AgentProfile.#ctor(System.String,Microsoft.SqlServer.Management.Common.ServerConnection)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Replication.AgentProfile"></see> class with the specified profile name and server connection.</summary>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object that specifies a connection to an instance of SQL Server that is a Distributor.</param>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of an agent profile.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.AgentProfile.AddParameter(System.String,System.String)">
			<summary>Adds a parameter to the replication agent profile. </summary>
			<param name="value">A <see cref="T:System.String"></see> value that specifies a value for the profile parameter. </param>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of a profile parameter.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.AgentProfile.AssignToAgent(System.String,System.Int32)">
			<summary>Assigns the replication agent profile to a specific replication agent job.</summary>
			<param name="agentID">An <see cref="T:System.Int32"></see> value that specifies the replication agent job.</param>
			<param name="distributionDBName">A <see cref="T:System.String"></see> value that specifies the name of the distribution database used by the replication agent job.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.AgentProfile.ChangeParameter(System.String,System.String)">
			<summary>Changes the value of an existing replication agent parameter in the profile.</summary>
			<param name="name">A <see cref="T:System.String"></see> that specifies the name of the parameter.</param>
			<param name="newValue">A <see cref="T:System.String"></see> that specifies the new value for the parameter.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.AgentProfile.Create">
			<summary>Creates the replication agent profile on the instance of SQL Server by using the current properties. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.AgentProfile.EnumParameterInfo">
			<summary>Returns information about parameters that can be set and that are available for the replication agent profile.</summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.AgentProfileParameterInfo"></see> objects. </returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.AgentProfile.EnumParameters">
			<summary>Returns all existing parameters that are set for the replication agent profile.</summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.AgentProfileParameter"></see> objects. </returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.AgentProfile.MakeDefault">
			<summary>Sets the profile as the default profile for all replication agents of the same type. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.AgentProfile.Remove">
			<summary>Removes an existing replication agent profile from the Distributor.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.AgentProfile.RemoveParameter(System.String)">
			<summary>Removes an existing parameter from the replication agent profile. </summary>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of the parameter to be removed.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.AgentProfile.Script(Microsoft.SqlServer.Replication.ScriptOptions)">
			<summary>Generates a Transact-SQL script that can be used to re-create the agent profile.</summary>
			<returns>A <see cref="T:System.String"></see> value that contains a list of Transact-SQL statements in the script. </returns>
			<param name="scriptOption">A <see cref="T:Microsoft.SqlServer.Replication.ScriptOptions"></see> object value that specifies the scripting options.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.AgentProfile.AgentType">
			<summary>Gets or sets the type of replication agent for which the profile is intended. </summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Replication.AgentType"></see> object value that specifies the replication agent type.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.AgentProfile.Default">
			<summary>Specifies whether this profile is the default profile for the given replication agent type.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.AgentProfile.Description">
			<summary>Gets or sets a textual description of the replication agent profile. </summary>
			<returns>A <see cref="T:System.String"></see> value that contains a textual description of the agent profile.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.AgentProfile.Name">
			<summary>Gets or sets the name of the replication agent profile. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.AgentProfile.Type">
			<summary>Specifies whether the replication agent profile is pre-defined by replication or created by a user. </summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Replication.AgentProfileTypeOption"></see> object value that specifies the type of agent profile.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.AgentProfileParameter">
			<summary>Represents parameters in a replication agent profile.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.AgentProfileParameter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Replication.AgentProfileParameter"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.AgentProfileParameter.Name">
			<summary>Gets or sets the name of the parameter in a replication agent profile.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the parameter name. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.AgentProfileParameter.UserData">
			<summary>Gets or sets an object to which users can attach their own data. </summary>
			<returns>An <see cref="T:System.Object"></see> that specifies custom user data.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.AgentProfileParameter.Value">
			<summary>Gets or sets the value of the parameter in a replication agent profile. </summary>
			<returns>An <see cref="T:System.String"></see> value that specifies the value.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.AgentProfileParameterInfo">
			<summary>Represents a supported parameter used in replication agent profiles.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.AgentProfileParameterInfo.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Replication.AgentProfileParameterInfo"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.AgentProfileParameterInfo.DefaultValue">
			<summary>Represents the default value of the replication agent parameter. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the default value of the agent profile parameter.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.AgentProfileParameterInfo.MaximumValue">
			<summary>Represents the maximum value for the replication agent parameter.</summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.AgentProfileParameterInfo.MinimumValue">
			<summary>Represents the minimum value of the replication agent parameter. </summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the minimum value of the agent profile parameter.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.AgentProfileParameterInfo.Name">
			<summary>Represents the name of the replication agent parameter.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the parameter name.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.AgentProfileParameterInfo.NoDefaultValue">
			<summary>Specifies whether the replication agent parameter has a default value. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If the value is true, the replication agent parameter has a default value that is represented by <see cref="P:Microsoft.SqlServer.Replication.AgentProfileParameterInfo.DefaultValue"></see>. If the value is false, the replication agent parameter does not have a default value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.AgentProfileParameterInfo.NoMaximumValue">
			<summary>Specifies whether the replication agent parameter has a maximum value. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If the value is true, the replication agent parameter has a maximum value that is represented by <see cref="P:Microsoft.SqlServer.Replication.AgentProfileParameterInfo.MaximumValue"></see>. If the value is false, the replication agent parameter does not have a maximum value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.AgentProfileParameterInfo.NoMinimumValue">
			<summary>Specifies whether the replication agent parameter has a minimum value. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If the value is true, the replication agent parameter has a minimum value that is represented by <see cref="P:Microsoft.SqlServer.Replication.AgentProfileParameterInfo.MinimumValue"></see>. If the value is false, the replication agent parameter does not have a minimum value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.AgentProfileParameterInfo.UserData">
			<summary>Gets or sets an object to which users can attach their own data. </summary>
			<returns>An <see cref="T:System.Object"></see> that specifies the custom user data.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.AgentProfileTypeOption">
			<summary>Indicates whether a replication agent profile is system-defined or user-defined. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.AgentProfileTypeOption.System">
			<summary>The replication agent profile is pre-defined by replication. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.AgentProfileTypeOption.User">
			<summary>The replication agent profile is custom-defined by the user. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.AgentType">
			<summary>Enumerates the various types of replication agents.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.AgentType.All">
			<summary>All types of replication agents.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.AgentType.DistributionAgents">
			<summary>A replication Distribution Agent.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.AgentType.LogReaderAgents">
			<summary>A replication Log Reader Agent.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.AgentType.MergeAgents">
			<summary>A replication Merge Agent.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.AgentType.MiscellaneousAgents">
			<summary>A miscellaneous replication agent.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.AgentType.QueueReaderAgents">
			<summary>A replication Queue Reader Agent.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.AgentType.SnapshotAgents">
			<summary>A replication Snapshot Agent. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.Article">
			<summary>The base class from which the <see cref="T:Microsoft.SqlServer.Replication.TransArticle"></see> class and <see cref="T:Microsoft.SqlServer.Replication.MergeArticle"></see> class are derived. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.Article.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Replication.Article"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.Article.CheckValidDefinition(System.Boolean)">
			<returns>A <see cref="T:System.Boolean"></see> value.</returns>
			<param name="throwException">Internal only</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.Article.Create">
			<summary>Creates a new article on the currently connected instance of SQL Server based on the current properties of the <see cref="T:Microsoft.SqlServer.Replication.TransArticle"></see> object or the <see cref="T:Microsoft.SqlServer.Replication.MergeArticle"></see> object. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.Article.Remove">
			<summary>Removes an existing article on the currently connected instance of SQL Server based on the current properties of the <see cref="T:Microsoft.SqlServer.Replication.TransArticle"></see> object or the <see cref="T:Microsoft.SqlServer.Replication.MergeArticle"></see> object. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.Article.Script(Microsoft.SqlServer.Replication.ScriptOptions)">
			<summary>Generates a Transact-SQL script that can be executed to create or delete the <see cref="T:Microsoft.SqlServer.Replication.TransArticle"></see> object or the <see cref="T:Microsoft.SqlServer.Replication.MergeArticle"></see> object on the server. </summary>
			<returns>A <see cref="T:System.String"></see> value that contains the Transact-SQL script. </returns>
			<param name="scriptOption">A <see cref="T:Microsoft.SqlServer.Replication.ScriptOptions"></see> object value that specifies the scripting options.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Article.CreationScript">
			<summary>Gets or sets the name and full path of the Transact-SQL script file that is used to create the destination object at the Subscriber.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name and full path of the article schema script file.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Article.DatabaseName">
			<summary>Gets or sets the name of the database that contains the data and the objects that are published in the article.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the publication database.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Article.Description">
			<summary>Gets or sets a textual description of the article.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the description of the article.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Article.DestinationObjectName">
			<summary>Gets or sets the database object that is the source database object for the article at the Subscriber. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the database object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Article.DestinationObjectOwner">
			<summary>Gets or sets the schema owner of the source database object for the article at the Subscriber. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the owner of the database object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Article.IdentityRangeManagementOption">
			<summary>Gets or sets the identity range management options for the article.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Replication.IdentityRangeManagementOption"></see> enumeration value that specifies the desired identity range management options. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Article.IdentityRangeThreshold">
			<summary>Gets or sets the value at which a new range of identity column values are assigned to a Publisher or to a Subscriber. </summary>
			<returns>An <see cref="T:System.Int32"></see> value between 1 and 100 that specifies the percentage of the total identity range that must be used before a new range of identity values is assigned. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Article.Name">
			<summary>Gets or sets the name of the article.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the article.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Article.PreCreationMethod">
			<summary>Gets or sets the action to take when the published object already exists in the subscription database. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.PreCreationOption"></see> enumeration value that specifies the action.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Article.PublicationName">
			<summary>Gets or sets the name of the publication to which the article belongs.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the publication.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Article.PublisherIdentityRangeSize">
			<summary>For a <see cref="T:Microsoft.SqlServer.Replication.TransArticle"></see> object, gets or sets the range of identity values assigned to table columns at the Publisher. For a <see cref="T:Microsoft.SqlServer.Replication.MergeArticle"></see> object, gets or sets the range of identity values assigned to table columns at Subscribers that have server subscriptions.</summary>
			<returns>An <see cref="T:System.Int64"></see> value that specifies the publisher identity range.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Article.SchemaOption">
			<summary>Gets or sets the schema creation options for an article.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.CreationScriptOptions"></see> enumeration value that specifies the schema creation options.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Article.SourceObjectName">
			<summary>Gets or sets the name of the database object that is being published.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the object name.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Article.SourceObjectOwner">
			<summary>Gets or sets the owner of the database object that is being published.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the owner of the database object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Article.SubscriberIdentityRangeSize">
			<summary>Gets or sets the maximum number of new rows that can be inserted into an identity column in a table at a Subscriber before another identity range must be allocated.</summary>
			<returns>An <see cref="T:System.Int64"></see> value that specifies the maximum number of rows that can be inserted into an identity column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Article.Type">
			<summary>Gets or sets the type of article.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Replication.ArticleOptions"></see> enumeration value that specifies the type of article.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Article.VerticalPartition">
			<summary>Specifies whether all columns are published in a table article.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If the value is true, columns must be added to the article after the article is created. If the value is false, all table columns are included in the article.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ArticleConflict">
			<summary>Represents information about a merge replication conflict table.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ArticleConflict.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Replication.ArticleConflict"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ArticleConflict.ArticleName">
			<summary>Gets or sets the name of the article that uses the specified <see cref="P:Microsoft.SqlServer.Replication.ArticleConflict.ConflictTable"></see>.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the merge article.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ArticleConflict.CentralizedConflict">
			<summary>Specifies whether the conflict table exists at the Publisher or at the Subscriber. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether the conflict reporting occurs at the Publisher or at the Subscriber. If the value is true, the conflict table for the article exists at the Publisher. If the value is false, the conflict table for the article exists at the Subscriber.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ArticleConflict.ConflictTable">
			<summary>Gets or sets the name of the table in which the conflicting data for the specified <see cref="P:Microsoft.SqlServer.Replication.ArticleConflict.ArticleName"></see> is stored. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the conflict table.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ArticleConflict.GuidColumnName">
			<summary>Gets or sets the name of the column that uniquely identifies rows in the specified <see cref="P:Microsoft.SqlServer.Replication.ArticleConflict.SourceObject"></see>. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the GUID column name.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ArticleConflict.SourceObject">
			<summary>Gets or sets the name of the source object for the specified <see cref="P:Microsoft.SqlServer.Replication.ArticleConflict.ArticleName"></see>.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the object name. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ArticleConflict.SourceOwner">
			<summary>Gets or sets the owner of the source object for the specified <see cref="P:Microsoft.SqlServer.Replication.ArticleConflict.ArticleName"></see>.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the object owner. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ArticleConflict.UserData">
			<summary>Gets or sets an object to which users can attach their own data. </summary>
			<returns>An <see cref="T:System.Object"></see> system object value that specifies the object that contains the user data.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ArticleDatatypeMappingOptions">
			<summary>Specifies whether the data type mapping between two database management systems (DBMS) for an article has been defined by a user or is the default mapping.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ArticleDatatypeMappingOptions.Custom">
			<summary>The mapping has been set by a user.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ArticleDatatypeMappingOptions.Default">
			<summary>The mapping is the default data type mapping for this data type.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ArticleOptions">
			<summary>Enumerates the type of database objects that can be published by replication. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ArticleOptions.AggregateSchemaOnly">
			<summary>The source object for the published article is the schema definition of a user-defined aggregate function. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ArticleOptions.FunctionSchemaOnly">
			<summary>The source object for the published article is the schema definition of a user-defined function. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ArticleOptions.IndexedView">
			<summary>The source object for the published article is an indexed view.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ArticleOptions.IndexedViewLogBased">
			<summary>The source object for the published article is an indexed view, and data changes are read from the log.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ArticleOptions.IndexedViewLogBasedManualBoth">
			<summary>The source object for the published article is an indexed view. Data changes are read from the transaction log. The user defines the object that provides the initial snapshot data for the article and the stored procedure that filters the article horizontally. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ArticleOptions.IndexedViewLogBasedManualFilterProc">
			<summary>The source object for the published article is an indexed view. Data changes are read from the transaction log, and the user defines the stored procedure that filters the article horizontally. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ArticleOptions.IndexedViewLogBasedManualSyncView">
			<summary>The source object for the published article is an indexed view. Data changes are read from the transaction log, and the user defines the object that provides the initial snapshot data for the article.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ArticleOptions.IndexedViewSchemaOnly">
			<summary>The source object for the published article is the schema definition of an indexed view.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ArticleOptions.LogBased">
			<summary>The source object for the published article is a table. Data changes are read from the transaction log. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ArticleOptions.LogBasedManualBoth">
			<summary>The source object for the published article is a table. Data changes are read from the transaction log. The user defines the object that provides the initial snapshot data for the article and the stored procedure that filters the article horizontally. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ArticleOptions.LogBasedManualFilterProc">
			<summary>The source object for the published article is a table. Data changes are read from the transaction log, and the user defines the stored procedure that filters the article horizontally.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ArticleOptions.LogBasedManualSyncView">
			<summary>The source object for the published article is a table. Data changes are read from the transaction log, and the user defines the object that provides the initial snapshot data for the article.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ArticleOptions.ManualFilterProc">
			<summary>The user defines the stored procedure that filters the article horizontally.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ArticleOptions.ManualSyncView">
			<summary>The user defines the object that provides the initial snapshot data for the article.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ArticleOptions.ProcExecution">
			<summary>The source for the published article is the execution of a stored procedure. The commands in the stored procedure are replicated to the Subscriber. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ArticleOptions.ProcSchemaOnly">
			<summary>The source object for the published article is the schema definition of a stored procedure. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ArticleOptions.SerializableProcExecution">
			<summary>The source for the published article is the execution of a stored procedure. Only the commands of the stored procedure that are within the context of a transaction that can be serialized are replicated to the Subscriber.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ArticleOptions.TableBased">
			<summary>The source object for the published article is a table. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ArticleOptions.ViewSchemaOnly">
			<summary>The source object for the published article is the schema definition of a view.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.AuthenticationMethod">
			<summary>Enumerates values that specify the supported HTTP authentication methods for Web synchronization. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.AuthenticationMethod.BasicAuthentication">
			<summary>Indicates the standard HTTP authentication mechanism that uses a login and a password. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.AuthenticationMethod.WindowsAuthentication">
			<summary>Indicates an HTTP authentication mechanism based on the Windows Challenge/Response authentication mechanism. The challenge/response mechanism works only when the Subscriber computer and the IIS server computer are located in the same Windows domain or in trusted Windows domains. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.AutomaticReinitializationPolicies">
			<summary>Enumerates default behaviors when reinitializing subscriptions to a merge publication. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.AutomaticReinitializationPolicies.Reinitialize">
			<summary>Reinitializes the subscription without uploading pending changes to the Publisher. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.AutomaticReinitializationPolicies.ReinitializeWithUploadFirst">
			<summary>Reinitializes the subscription after uploading pending changes to the Publisher. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.BusinessLogicHandler">
			<summary>Represents the server registration for the managed code assembly that implements a business logic handler.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.BusinessLogicHandler.#ctor">
			<summary>Initializes an instance of the <see cref="T:Microsoft.SqlServer.Replication.BusinessLogicHandler"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.BusinessLogicHandler.CheckValidDefinition(System.Boolean)">
			<param name="throwException">Internal use only.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.BusinessLogicHandler.DotNetAssemblyName">
			<summary>Gets or sets the name of the assembly that implements the business logic handler.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the assembly name.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.BusinessLogicHandler.DotNetClassName">
			<summary>Gets or sets the name of the class that implements the business logic handler.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the class name.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.BusinessLogicHandler.FriendlyName">
			<summary>Gets or sets the name that registers the business logic handler on the server.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.BusinessLogicHandler.IsDotNetAssembly">
			<summary>Specifies whether the registered business logic handler is a managed code assembly.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If the value is true, the business logic handler is a managed code assembly. If the value is false, the business logic handler is not a managed code assembly.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.BusinessLogicHandler.UserData">
			<summary>Gets or sets an object to which users can attach their own data. </summary>
			<returns>An <see cref="T:System.Object"></see> system object value that specifies the object that contains the user data.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.CheckPermissionOptions">
			<summary>Enumerates the table-level permissions that are verified when the Merge Agent applies changes at the Publisher. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CheckPermissionOptions.DeleteCheck">
			<summary>Permissions are checked before applying DELETE statements at the Publisher.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CheckPermissionOptions.InsertCheck">
			<summary>Permissions are checked before applying INSERT statements at the Publisher.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CheckPermissionOptions.NoCheck">
			<summary>Permissions are not checked.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CheckPermissionOptions.UpdateCheck">
			<summary>Permissions are checked before applying UPDATE statements at the Publisher.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.CommandOptions">
			<summary>Enumerates options that control how changes are propagated for transactional articles.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CommandOptions.BinaryParameters">
			<summary>Binary parameters are used when propagating changes.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CommandOptions.DtsHorizontalPartition">
			<summary>The horizontal partition for the article is defined by a transformable subscription.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CommandOptions.IncludeInsertColumnNames">
			<summary>Includes column names in INSERT statements for the destination table.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CommandOptions.None">
			<summary>No specified options.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ConflictPolicyOption">
			<summary>Enumerates options for selecting the winning row when conflicts occur during synchronization of an updating subscription to a transactional publication. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ConflictPolicyOption.PublisherWin">
			<summary>The row from the Publisher is retained. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ConflictPolicyOption.ReinitializeSubscription">
			<summary>The subscription must be reinitialized when conflicts occur. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ConflictPolicyOption.SubscriberWin">
			<summary>The row from the Subscriber is retained. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ConnectionSecurityContext">
			<summary>Represents information you use when you connect to Microsoft SQL Server. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ConnectionSecurityContext.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Replication.ConnectionSecurityContext"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ConnectionSecurityContext.Update">
			<summary>Updates schedule fields associated with the connection security context.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ConnectionSecurityContext.SqlStandardLogin">
			<summary>Gets or sets the login used with SQL Server Authentication.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the login.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ConnectionSecurityContext.SqlStandardPassword">
			<summary>Gets or sets the password for the login required for SQL Server Authentication.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the password for the login required for SQL Server Authentication.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ConnectionSecurityContext.WindowsAuthentication">
			<summary>Gets or sets the <see cref="T:System.Boolean"></see> property that specifies whether the connection is made by using Windows Authentication or SQL Server Authentication.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether the connection is made by using Windows Authentication or SQL Server Authentication.If the value is true (default), the connection is made by using Windows Authentication.If the value is false, the connection is made by using SQL Server Authentication</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.CreationScriptOptions">
			<summary>Enumerates schema option values for published articles.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.AttemptToDropNonArticleDependencies">
			<summary>At the Subscriber, attempts to drop dependencies to any objects that are not part of the publication.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.ClusteredIndexes">
			<summary>Includes the creation of a corresponding clustered index.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.Collation">
			<summary>Includes the definition of a column-level collation.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.CustomProcedures">
			<summary>Includes the generation of custom stored procedures. This option is only valid for the <see cref="T:Microsoft.SqlServer.Replication.TransArticle"></see> object. You must also specify <see cref="P:Microsoft.SqlServer.Replication.TransArticle.InsertCommand"></see>, <see cref="P:Microsoft.SqlServer.Replication.TransArticle.UpdateCommand"></see>, and <see cref="P:Microsoft.SqlServer.Replication.TransArticle.DeleteCommand"></see>.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.DefaultBindings">
			<summary>Includes default bindings and creation of the bound defaults.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.DisableScripting">
			<summary>Object creation scripts are not generated by the Snapshot Agent. You must specify a user-supplied script file to define the object at the Subscriber for <see cref="P:Microsoft.SqlServer.Replication.Article.CreationScript"></see>.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.DriChecks">
			<summary>Includes the creation CHECK constraints.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.DriDefaults">
			<summary>Includes the creation column defaults.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.DriForeignKeys">
			<summary>Includes the creation of foreign key constraints to all referenced tables that are included in the publication. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.DriPrimaryKey">
			<summary>Includes the creation of primary key constraints.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.DriUniqueKeys">
			<summary>Includes the creation of unique keys.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.ExtendedProperties">
			<summary>Includes the extended properties associated with the database object being published.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.FileGroups">
			<summary>Includes the filegroups associated with a partitioned table or index.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.FullTextIndex">
			<summary>Includes full-text indexes.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.Identity">
			<summary>Includes the creation of identity columns. This option is supported only for <see cref="T:Microsoft.SqlServer.Replication.TransArticle"></see> objects and only for Microsoft SQL Server 2005 and later releases. For more information, see Replicating Identity Columns.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.IndexPartitioningSchemes">
			<summary>Includes the partition scheme associated with a partitioned index.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.KeepTimestamp">
			<summary>Replicates timestamp columns. Without this option, timestamp columns are created on the Subscriber as binary(16) columns. This option is supported only for <see cref="T:Microsoft.SqlServer.Replication.TransArticle"></see> objects.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.MarkReplicatedCheckConstraintsAsNotForReplication">
			<summary>Includes the NOT FOR REPLICATION clause when creating CHECK constraints so that the constraints are not enforced during synchronization. For more information, see Controlling Constraints, Identities, and Triggers with NOT FOR REPLICATION. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.MarkReplicatedForeignKeyConstraintsAsNotForReplication">
			<summary>Includes the NOT FOR REPLICATION clause when creating FOREIGN KEY constraints so that the constraints are not enforced during synchronization. For more information, see Controlling Constraints, Identities, and Triggers with NOT FOR REPLICATION. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.MaxTypesToMatchingNonMaxTypes">
			<summary>Converts nvarchar(max), varchar(max), and varbinary(max) to ntext, text, and image data types, which are supported on earlier versions of SQL Server. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.NonClusteredIndexes">
			<summary>Includes the creation of nonclustered indexes.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.NoXmlSchemaCollections">
			<summary>XML schema collections bound to xml columns are not included. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.Permissions">
			<summary>Includes permissions defined on the published object.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.PrimaryKeyUniqueKeyAsConstraints">
			<summary>Generates ALTER TABLE statements when replicating constraints.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.PrimaryObject">
			<summary>Generates a creation script (CREATE TABLE, CREATE PROCEDURE, and so on) for the published object. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.RuleBindings">
			<summary>Includes rule bindings and creation of the bound rules. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.Schema">
			<summary>Includes CREATE SCHEMA statements for XML schema collections bound to xml columns.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.Statistics">
			<summary>Includes user-defined table statistics. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.TablePartitioningScheme">
			<summary>Includes the partition scheme associated with a partitioned table.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.UserDefinedTypesToBaseTypes">
			<summary>Converts user-defined data types columns at the Publisher to base SQL Server data type columns at the Subscriber. This option is not supported for non-SQL Server Publishers.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.UserTriggers">
			<summary>Includes the creation of user-defined triggers.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.XmlIndexes">
			<summary>Includes XML indexes.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.CreationScriptOptions.XmlToNText">
			<summary>xml columns are replicated to the Subscriber as ntext.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.CustomResolver">
			<summary>Represents a COM-based resolver registration at a server in a merge replication topology.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.CustomResolver.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.CustomResolver"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.CustomResolver.ClassId">
			<summary>Gets or sets the Class ID of the registered resolver.</summary>
			<returns>A <see cref="T:System.String"></see> value that represents the Class ID of a COM-based resolver.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.CustomResolver.Description">
			<summary>Gets or sets a textual description of the resolver. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the textual description.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.CustomResolver.UserData">
			<summary>Gets or sets user data that is attached to the object. </summary>
			<returns>An <see cref="T:System.Object"></see> value that specifies the user data.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.DatabaseCompatibilityLevel">
			<summary>Enumerates the versions of Microsoft SQL Server that are supported for database compatibility with Microsoft SQL Server 2005.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.DatabaseCompatibilityLevel.Unknown">
			<summary>The compatibility level is unsupported.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.DatabaseCompatibilityLevel.Version60">
			<summary>The database is compatible with SQL Server 6.0 behaviors.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.DatabaseCompatibilityLevel.Version65">
			<summary>The database is compatible with SQL Server 6.5 behaviors.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.DatabaseCompatibilityLevel.Version70">
			<summary>The database is compatible with SQL Server 7.0 behaviors.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.DatabaseCompatibilityLevel.Version80">
			<summary>The database is compatible with SQL Server 2000 behaviors.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.DdlReplicationOptions">
			<summary>Enumerates whether data definition language (DDL) changes to published tables are replicated. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.DdlReplicationOptions.All">
			<summary>DDL changes to published tables are replicated.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.DdlReplicationOptions.None">
			<summary>DDL changes to published tables are not replicated.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.DistributionArticle">
			<summary>Represents information about an article published in a transactional or snapshot publication stored at the Distributor.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionArticle.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.DistributionArticle"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionArticle.#ctor(System.String,System.String,System.String,System.String,System.String,Microsoft.SqlServer.Management.Common.ServerConnection)">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.DistributionArticle"></see> class with the required properties and a connection to the Distributor.</summary>
			<param name="publicationDBName">A <see cref="T:System.String"></see> value that specifies the publication database.</param>
			<param name="publicationName">A <see cref="T:System.String"></see> value that specifies the publication.</param>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object that specifies the Distributor connection.</param>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of the distribution article.</param>
			<param name="publisherName">A <see cref="T:System.String"></see> value that specifies the Publisher.</param>
			<param name="distributionDBName">A <see cref="T:System.String"></see> value that specifies the distribution database.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionArticle.Create">
			<summary>Creates the article metadata at the Distributor.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionArticle.Remove">
			<summary>Removes article metadata from the Distributor.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionArticle.Script(Microsoft.SqlServer.Replication.ScriptOptions)">
			<summary>Generates a Transact-SQL script that can be used to create or delete the article with the specified properties.</summary>
			<returns>A <see cref="T:System.String"></see> value that is the script. </returns>
			<param name="scriptOption">A <see cref="T:Microsoft.SqlServer.Replication.ScriptOptions"></see> object value that specifies the scripting options.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionArticle.ArticleId">
			<summary>Gets or sets the ID value for the article. </summary>
			<returns>An <see cref="T:System.Int32"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionArticle.Description">
			<summary>Gets or sets a description for the article. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionArticle.DistributionDBName">
			<summary>Gets or sets the name of the distribution database that contains the article metadata. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionArticle.Name">
			<summary>Gets or sets the name of the article. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionArticle.PublicationDBName">
			<summary>Gets or sets the name of the publication database. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionArticle.PublicationName">
			<summary>Gets or sets the name of the publication that contains the article. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionArticle.PublisherName">
			<summary>Gets or sets the name of the Publisher. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionArticle.SourceObjectName">
			<summary>Gets or sets the database object that provides the article data. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionArticle.SourceObjectOwner">
			<summary>Gets or sets the owner of the database object that provides the article data. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.DistributionArticleCollection">
			<summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Replication.DistributionArticle"></see> objects. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionArticleCollection.CopyTo(Microsoft.SqlServer.Replication.DistributionArticleCollection,System.Int32)">
			<summary>Makes a copy of the collection.</summary>
			<param name="replicationCollection">A <see cref="T:Microsoft.SqlServer.Replication.DistributionArticleCollection"></see> object that is to receive the copy of the original collection.</param>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the index position within the original collection to start copying.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionArticleCollection.Item(System.Int32)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.DistributionArticle"></see> object in the collection by index number.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.DistributionArticle"></see> object. </returns>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the position of the <see cref="T:Microsoft.SqlServer.Replication.DistributionArticle"></see> object in the <see cref="T:Microsoft.SqlServer.Replication.DistributionArticleCollection"></see>.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionArticleCollection.Item(System.String)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.DistributionArticle"></see> object in the collection by name.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.DistributionArticle"></see> object. </returns>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of the article.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.DistributionDatabase">
			<summary>Represents a distribution database at the Distributor. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionDatabase.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.DistributionDatabase"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionDatabase.#ctor(System.String,Microsoft.SqlServer.Management.Common.ServerConnection)">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.DistributionDatabase"></see> class, with the specified database name and a connection to the Distributor.</summary>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object that specifies the connection to the Distributor.</param>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of the distribution database.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionDatabase.CleanUpAnonymousSubscription(System.Int32,Microsoft.SqlServer.Replication.PublicationType)">
			<summary>Removes metadata for anonymous subscriptions at the Distributor. </summary>
			<param name="agentId">An <see cref="T:System.Int32"></see> value that specifies the agent ID value.</param>
			<param name="publicationType">A <see cref="T:Microsoft.SqlServer.Replication.PublicationType"></see> object value that specifies the publication type.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionDatabase.Create">
			<summary>Creates the distribution database.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionDatabase.CreateQueueReaderAgent">
			<summary>Creates the Queue Reader Agent job on the distribution database.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionDatabase.Remove">
			<summary>Deletes the distribution database.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionDatabase.Script(Microsoft.SqlServer.Replication.ScriptOptions)">
			<summary>Generates a Transact-SQL script that can be used to create or delete the distribution database that the object represents.</summary>
			<returns>A <see cref="T:System.String"></see> value that is the script. </returns>
			<param name="scriptOption">A <see cref="T:Microsoft.SqlServer.Replication.ScriptOptions"></see> value that specifies the scripting options.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionDatabase.DataFile">
			<summary>Gets or sets the name of the data file for the distribution database. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionDatabase.DataFileSize">
			<summary>Gets or sets the size of the primary database file for the distribution database.</summary>
			<returns>An <see cref="T:System.Int32"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionDatabase.DataFolder">
			<summary>Gets or sets the path to the directory that contains the data file for the distribution database.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionDatabase.DistributionCleanupTaskName">
			<summary>Gets the name of the SQL Server Agent job that is responsible for cleaning up the replication tables in the distribution.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionDatabase.DistributorSecurity">
			<summary>Gets the security context used to connect to the Distributor to create the distribution database. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ConnectionSecurityContext"></see> object. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionDatabase.HistoryCleanupTaskName">
			<summary>Gets the name of the SQL Server Agent job that is responsible for cleaning up replication history tables.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionDatabase.HistoryRetention">
			<summary>Gets or sets the length of time, in hours, replication agent history data is to be retained.</summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionDatabase.LogFile">
			<summary>Gets or sets the name of the file that stores database transaction log records. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionDatabase.LogFileSize">
			<summary>Gets or sets the size of the file that stores database transaction log records.</summary>
			<returns>An <see cref="T:System.Int32"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionDatabase.LogFolder">
			<summary>Gets or sets the path to the directory where the file that stores database transaction log records is located.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionDatabase.MaxDistributionRetention">
			<summary>Gets or sets the maximum retention period, in hours, before transactions are deleted from the distribution database.</summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionDatabase.MinDistributionRetention">
			<summary>Gets or sets the minimum retention period, in hours, before transactions are deleted from the distribution database.</summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionDatabase.Name">
			<summary>Gets or sets the name of the distribution database.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionDatabase.QueueReaderAgentExists">
			<summary>Gets or sets whether the Queue Reader Agent job has been created for this distribution database.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the Queue Reader agent job already exists for this distribution database. If false, the Queue Reader Agent job has not yet been created for this distribution database.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionDatabase.QueueReaderAgentName">
			<summary>Gets or sets the name of the Queue Reader Agent job created for this distribution database.</summary>
			<returns>A string value that specifies the name of the distribution database.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionDatabase.QueueReaderAgentProcessSecurity">
			<summary>Gets the agent process security context for running the Queue Reader Agent job.</summary>
			<returns>An instance of the <see cref="T:Microsoft.SqlServer.Replication.IProcessSecurityContext"></see> interface.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.DistributionDatabaseCollection">
			<summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Replication.DistributionDatabase"></see> objects. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionDatabaseCollection.CopyTo(Microsoft.SqlServer.Replication.DistributionDatabaseCollection,System.Int32)">
			<summary>Makes a copy of the collection.</summary>
			<param name="replicationCollection">A <see cref="T:Microsoft.SqlServer.Replication.DistributionArticleCollection"></see> object that is to receive the copy of the original collection.</param>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the index position within the original collection to start copying.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionDatabaseCollection.Item(System.Int32)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.DistributionDatabase"></see> object in the collection by index number.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.DistributionDatabase"></see> object. </returns>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the position of the <see cref="T:Microsoft.SqlServer.Replication.DistributionDatabase"></see> object in the <see cref="T:Microsoft.SqlServer.Replication.DistributionDatabaseCollection"></see>.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionDatabaseCollection.Item(System.String)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.DistributionDatabase"></see> object in the collection by database name.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.DistributionDatabase"></see> object.</returns>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of the distribution database.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.DistributionPublication">
			<summary>Represents information about a transactional or snapshot publication stored at the Distributor.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionPublication.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.DistributionPublication"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionPublication.#ctor(System.String,System.String,System.String,System.String,Microsoft.SqlServer.Management.Common.ServerConnection)">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.DistributionPublication"></see> class, with the required properties and with a connection to the Distributor.</summary>
			<param name="publicationDBName">A <see cref="T:System.String"></see> value that specifies the name of the publication database.</param>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object that specifies the connection context for the Distributor connection.</param>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of the publication.</param>
			<param name="publisherName">A <see cref="T:System.String"></see> value that specifies the name of the Publisher.</param>
			<param name="distributionDBName">A <see cref="T:System.String"></see> value that specifies the name of the distribution database.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionPublication.Create">
			<summary>Creates the publication metadata at the Distributor. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionPublication.EnumDistributionArticles">
			<summary>Returns information maintained at the Distributor on articles in this publication.</summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.DistributionArticle"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionPublication.EnumDistributionSubscriptions">
			<summary>Returns information maintained at the Distributor for subscriptions to this publication.</summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.DistributionSubscription"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionPublication.Remove">
			<summary>Removes metadata for the publication from the Distributor. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionPublication.Script(Microsoft.SqlServer.Replication.ScriptOptions)">
			<summary>Generates a Transact-SQL script that can be used to create or remove the publication metadata at the Distributor. </summary>
			<returns>A <see cref="T:System.String"></see> value that is the script. </returns>
			<param name="scriptOption">A <see cref="T:Microsoft.SqlServer.Replication.ScriptOptions"></see> value that specifies the scripting options.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublication.Attributes">
			<summary>Gets or sets the publication attributes for the distribution publication.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.PublicationAttributes"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublication.Description">
			<summary>Gets or sets a description for the publication. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublication.DistributionArticles">
			<summary>Returns information about the articles in the publication stored at the Distributor.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.DistributionArticleCollection"></see> of <see cref="T:Microsoft.SqlServer.Replication.DistributionArticle"></see> objects. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublication.DistributionDBName">
			<summary>Gets or sets the name of the distribution database for the publication.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublication.DistributionSubscriptions">
			<summary>Represents information about subscriptions to the publication stored at the Distributor.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.DistributionSubscriptionCollection"></see> of <see cref="T:Microsoft.SqlServer.Replication.DistributionSubscription"></see> objects. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublication.LogReaderAgent">
			<summary>Gets or sets the name of the Log Reader Agent job for the transactional publication.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublication.Name">
			<summary>Gets or sets the name of the publication.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublication.PubId">
			<summary>Gets the publication ID. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublication.PublicationDBName">
			<summary>Gets or sets the name of the publication database. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublication.PublisherName">
			<summary>Gets or sets the name of the Publisher. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublication.SnapshotAgent">
			<summary>Gets or sets the name of the Snapshot Agent job for the transactional publication.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublication.Type">
			<summary>Gets or sets the type of replication for this publication. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.PublicationType"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublication.VendorName">
			<summary>Gets or sets the product manufacturer of the non-SQL Server Publisher of the publication. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.DistributionPublicationCollection">
			<summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Replication.DistributionPublication"></see> objects. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionPublicationCollection.CopyTo(Microsoft.SqlServer.Replication.DistributionPublicationCollection,System.Int32)">
			<summary>Makes a copy of the collection.</summary>
			<param name="replicationCollection">A <see cref="T:Microsoft.SqlServer.Replication.DistributionPublicationCollection"></see> object that is to receive the copy of the original collection.</param>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the index position within the original collection to start copying.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublicationCollection.Item(System.Int32)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.DistributionPublication"></see> object in the collection by index number.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.DistributionPublication"></see> object. </returns>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the position of the <see cref="T:Microsoft.SqlServer.Replication.DistributionPublication"></see> object in the <see cref="T:Microsoft.SqlServer.Replication.DistributionPublicationCollection"></see>.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublicationCollection.Item(System.String,System.String)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.DistributionPublication"></see> object in the collection by the properties that uniquely define the publication at the Distributor.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.DistributionPublication"></see> object. </returns>
			<param name="publicationDBName">A <see cref="T:System.String"></see> value that specifies the publication database.</param>
			<param name="publicationName">A <see cref="T:System.String"></see> value that specifies the name of the publication.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.DistributionPublisher">
			<summary>Represents information about a Publisher registered at the currently connected Distributor.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionPublisher.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.DistributionPublisher"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionPublisher.#ctor(System.String,Microsoft.SqlServer.Management.Common.ServerConnection)">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.DistributionPublisher"></see> class, with the Publisher name and with a connection to the Distributor used by the Publisher.</summary>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object that specifies the Distributor connection.</param>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of the Publisher.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionPublisher.Create">
			<summary>Registers the Publisher with the specified properties at the Distributor.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionPublisher.CreateHeterogeneousLogReaderAgent">
			<summary>Creates a Log Reader Agent job for a non-SQL Server Publisher. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionPublisher.EnumDistributionPublications">
			<summary>Returns information stored at the Distributor about publications at this Publisher.</summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.DistributionPublication"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionPublisher.EnumRegisteredSubscribers">
			<summary>Returns information stored at the Distributor about Subscribers to publications at this Publisher.</summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.RegisteredSubscriber"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionPublisher.EnumTransPublications">
			<summary>Returns information at the Distributor about transactional publications at this Publisher.</summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.TransPublication"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionPublisher.Remove(System.Boolean)">
			<summary>Removes the registration for this Publisher from the currently connected Distributor.</summary>
			<param name="force">A <see cref="T:System.Boolean"></see> value that specifies whether the Publisher is uninstalled from the Distributor without verifying that Publisher has also uninstalled the Distributor, if the Publisher is on a separate server. If true, all the replication objects associated with the Publisher are dropped even if the Publisher is on a remote server that cannot be reached. If false, replication first verifies that the remote Publisher has uninstalled the Distributor. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionPublisher.Script(Microsoft.SqlServer.Replication.ScriptOptions)">
			<summary>Generates a Transact-SQL script that can be used to install or uninstall the Publisher.</summary>
			<returns>A <see cref="T:System.String"></see> value that contains the script. </returns>
			<param name="scriptOption">A <see cref="T:Microsoft.SqlServer.Replication.ScriptOptions"></see> value that specifies the scripting options.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublisher.DistributionDatabase">
			<summary>Gets or sets the name of the distribution database used by the Publisher.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublisher.DistributionPublications">
			<summary>Returns the publications that exist at the Publisher.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.DistributionPublicationCollection"></see> of <see cref="T:Microsoft.SqlServer.Replication.DistributionPublication"></see> objects. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublisher.HeterogeneousLogReaderAgentExists">
			<summary>Gets whether the Log Reader Agent job exists for the non-SQL Server Publisher.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the agent job exists. If false, agent job does not exist.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublisher.HeterogeneousLogReaderAgentProcessSecurity">
			<summary>Gets the security context used by the Log Reader agent for a non-SQL Server Publisher.</summary>
			<returns>An instance of the <see cref="T:Microsoft.SqlServer.Replication.IProcessSecurityContext"></see> interface.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublisher.Name">
			<summary>Gets or sets the name of the Publisher instance of Microsoft SQL Server.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the Publisher.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublisher.PublisherSecurity">
			<summary>Gets the security context used by replication agent when connecting to the Publisher.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ConnectionSecurityContext"></see> object. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublisher.PublisherType">
			<summary>Gets or sets the Publisher type. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublisher.RegisteredSubscribers">
			<summary>Returns the Subscribers that are subscribed to publications at the Publisher. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.RegisteredSubscriberCollection"></see> of <see cref="T:Microsoft.SqlServer.Replication.RegisteredSubscriber"></see> objects. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublisher.Status">
			<summary>Gets the Publisher status.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.State"></see> value. <see cref="F:Microsoft.SqlServer.Replication.State.Active"></see> means that the Publisher is using the Distributor. <see cref="F:Microsoft.SqlServer.Replication.State.Inactive"></see> means that the Publisher is not using the Distributor.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublisher.ThirdParty">
			<summary>Gets or sets whether the Publisher is a non-SQL Server Publisher.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the Publisher is a non-SQL Server Publisher. If false, Publisher is an instance of SQL Server.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublisher.TransPublications">
			<summary>Returns the transactional publications at the Publisher.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.TransPublicationCollection"></see> of <see cref="T:Microsoft.SqlServer.Replication.TransPublication"></see> objects. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublisher.WorkingDirectory">
			<summary>Gets or sets the name of the working directory used to store data and schema files for the publication. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.DistributionPublisherCollection">
			<summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Replication.DistributionPublisher"></see> objects. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionPublisherCollection.CopyTo(Microsoft.SqlServer.Replication.DistributionPublisherCollection,System.Int32)">
			<summary>Makes a copy of the collection.</summary>
			<param name="replicationCollection">A <see cref="T:Microsoft.SqlServer.Replication.DistributionPublisherCollection"></see> object that is to receive the copy of the original collection.</param>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the index position within the original collection to start copying.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublisherCollection.Item(System.Int32)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.DistributionPublisher"></see> object in the collection by index number.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.DistributionPublisher"></see> object .</returns>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the position of the <see cref="T:Microsoft.SqlServer.Replication.DistributionPublisher"></see> object in the <see cref="T:Microsoft.SqlServer.Replication.DistributionPublisherCollection"></see>.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionPublisherCollection.Item(System.String)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.DistributionPublisher"></see> object in the collection by name.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.DistributionPublisher"></see> object. </returns>
			<param name="name">A <see cref="T:System.String"></see> value that is the Publisher name.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.DistributionSubscription">
			<summary>Represents information stored at the Distributor about a subscription to a transactional or snapshot publication.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionSubscription.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.DistributionSubscription"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionSubscription.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.SqlServer.Management.Common.ServerConnection)">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.DistributionSubscription"></see> class, with the required properties and with a connection to the Distributor. </summary>
			<param name="publicationDBName">A <see cref="T:System.String"></see> value that specifies the publication database.</param>
			<param name="publicationName">A <see cref="T:System.String"></see> value that specifies the publication name.</param>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object that represents the connection to the Distributor.</param>
			<param name="subscriptionDBName">A <see cref="T:System.String"></see> value that specifies the subscription database.</param>
			<param name="subscriberName">A <see cref="T:System.String"></see> value that specifies the Subscriber.</param>
			<param name="distributionDBName">A <see cref="T:System.String"></see> value that specifies the distribution database.</param>
			<param name="publisherName">A <see cref="T:System.String"></see> value that specifies the Publisher.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionSubscription.AgentJobId">
			<summary>Gets the ID of the SQL Server Agent job that synchronizes the Subscription. </summary>
			<returns>A <see cref="T:System.String"></see> value that represents an agent job ID.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionSubscription.AgentSchedule">
			<summary>Gets the synchronization agent schedule for the subscription. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ReplicationAgentSchedule"></see> object. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionSubscription.DistributionAgent">
			<summary>Gets the name of the SQL Server Agent job that is used to synchronize the subscription. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionSubscription.DistributionDBName">
			<summary>Gets or sets the name of the distribution database. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionSubscription.Name">
			<summary>Gets the name of the subscription.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionSubscription.PublicationDBName">
			<summary>Gets or sets the name of the publication database. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionSubscription.PublicationName">
			<summary>Gets or sets the name of the publication to which the subscription belongs. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionSubscription.PublisherName">
			<summary>Gets or sets the Publisher of the publication to which the subscription belongs. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionSubscription.Status">
			<summary>Gets or sets the status of the subscription. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.SubscriptionState"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionSubscription.SubscriberName">
			<summary>Gets or sets the name of the Subscriber. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionSubscription.SubscriptionDBName">
			<summary>Gets or sets the name of the subscription database.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionSubscription.SubscriptionType">
			<summary>Gets or sets whether the Distribution agent runs at the Distributor (<see cref="F:Microsoft.SqlServer.Replication.SubscriptionOption.Push"></see>) or at the Subscriber (<see cref="F:Microsoft.SqlServer.Replication.SubscriptionOption.Pull"></see>). </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.SubscriptionOption"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionSubscription.SyncType">
			<summary>Gets or sets the manner in which the subscription is initialized.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.SubscriptionSyncType"></see> value. </returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.DistributionSubscriptionCollection">
			<summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Replication.DistributionSubscription"></see> objects. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.DistributionSubscriptionCollection.CopyTo(Microsoft.SqlServer.Replication.DistributionSubscriptionCollection,System.Int32)">
			<summary>Makes a copy of the collection.</summary>
			<param name="replicationCollection">A <see cref="T:Microsoft.SqlServer.Replication.DistributionSubscriptionCollection"></see> object that is to receive the copy of the original collection.</param>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the index position within the original collection to start copying.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionSubscriptionCollection.Item(System.Int32)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.DistributionSubscription"></see> object in the collection by index number.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.DistributionSubscription"></see> object.</returns>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the position of the <see cref="T:Microsoft.SqlServer.Replication.DistributionSubscription"></see> object in the <see cref="T:Microsoft.SqlServer.Replication.DistributionSubscriptionCollection"></see>.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.DistributionSubscriptionCollection.Item(System.String,System.String)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.DistributionSubscription"></see> object in the <see cref="T:Microsoft.SqlServer.Replication.DistributionSubscriptionCollection"></see> by <see cref="P:Microsoft.SqlServer.Replication.DistributionSubscription.SubscriberName"></see> and <see cref="P:Microsoft.SqlServer.Replication.DistributionSubscription.SubscriptionDBName"></see> properties that uniquely identify the subscription at the Distributor.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.DistributionSubscription"></see> object.</returns>
			<param name="subscriptionDBName">A <see cref="T:System.String"></see> value that specifies the subscription database.</param>
			<param name="subscriberName">A <see cref="T:System.String"></see> value that specifies the Subscriber.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.DtsPackageLocationOption">
			<summary>Enumerates options for the location of the Data Transformation Services (DTS) package.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.DtsPackageLocationOption.Distributor">
			<summary>The DTS package is located at the Distributor.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.DtsPackageLocationOption.Subscriber">
			<summary>The DTS package is located at the Subscriber.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.FailoverMode">
			<summary>Enumerates the options available for an updating Subscriber to propagate changes back to the Publisher.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.FailoverMode.Immediate">
			<summary>The Publisher and Subscriber must be connected to update data at the Subscriber.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.FailoverMode.Queued">
			<summary>The Publisher and Subscriber do not have to be connected to update data at the Subscriber. Updates can be made while the Subscriber or Publisher is offline.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.FilterTypes">
			<summary>Enumerates values that specify the type of filters used in merge articles. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.FilterTypes.JoinFilter">
			<summary>Filter is a join filter.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.FilterTypes.JoinFilterAndLogicalRecordLink">
			<summary>Filter is a join filter and represents a logical record relationship.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.FilterTypes.LogicalRecordLink">
			<summary>Filter represents a logic record relationship.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.HeterogeneousColumn">
			<summary>Represents a column contained in a table on a non-Microsoft SQL Server Publisher.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.HeterogeneousColumn.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.HeterogeneousColumn"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.HeterogeneousColumn.DataLoss">
			<summary>Gets or sets whether information loss may occur when column data is replicated to the Subscriber.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value.If true, data loss can occur on the column during replication to the Subscriber.If false, data loss cannot occur on the column during replication to the Subscriber.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.HeterogeneousColumn.DestinationDatatype">
			<summary>Gets or sets the data type that can be mapped to this column. </summary>
			<returns>A <see cref="T:System.String"></see> value that is the name of a data type in the sys.types table.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.HeterogeneousColumn.DestinationLength">
			<summary>Gets or sets the length of the destination data type. </summary>
			<returns>An <see cref="T:System.Int64"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.HeterogeneousColumn.DestinationNullable">
			<summary>Gets or sets whether the destination data can accept null values. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value.If true, the destination data can be set to null.If false, the destination data cannot be set to null.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.HeterogeneousColumn.DestinationPrecision">
			<summary>Gets or sets the precision for the destination data type. </summary>
			<returns>An <see cref="T:System.Int64"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.HeterogeneousColumn.DestinationScale">
			<summary>Gets or sets the scale for the destination data type. </summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.HeterogeneousColumn.IsDefault">
			<summary>Gets or sets whether there is a default constraint bound to the column. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value.If true, there is a default constraint.If false, there is no default constraint.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.HeterogeneousColumn.IsDefined">
			<summary>Gets or sets whether a data type mapping is currently defined for the column. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value.If true, there is a mapping defined.If false, there is no mapping defined.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.HeterogeneousColumn.IsPrimaryKey">
			<summary>Sets or gets whether there is a primary key constraint defined on the column. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value.If true, there is a primary key constraint defined on the column.If false, there is no primary key.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.HeterogeneousColumn.IsPublished">
			<summary>Gets or sets whether the column is currently published. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value.If true, the column is published.If false, the column is not published.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.HeterogeneousColumn.IsValid">
			<summary>Gets or sets whether the column can be published. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value.If true, the column can be published.If false, the column cannot be published.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.HeterogeneousColumn.Name">
			<summary>Gets or sets the name of the column. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.HeterogeneousColumn.SourceDataTypeInfo">
			<summary>Gets or sets the name of the source data type for the column. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.HeterogeneousColumn.UserData">
			<summary>Gets or sets an object property value that allows users to attach their own data to this object.</summary>
			<returns>An <see cref="T:System.Object"></see> value that contains user data. The data is valid only for the lifetime of the <see cref="T:Microsoft.SqlServer.Replication.HeterogeneousColumn"></see> object.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.HeterogeneousTable">
			<summary>Represents a table on a non-Microsoft SQL Server Publisher. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.HeterogeneousTable.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.HeterogeneousTable"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.HeterogeneousTable.HasExplicitSelectGrant">
			<summary>Gets or sets whether the administrator of the non-Microsoft SQL Server Publisher was explicitly granted SELECT permissions on the table.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value.If true, the administrator of the non-SQL Server Publisher was explicitly granted SELECT permission on the table.If false, the administrator of the non-SQL Server Publisher was not explicitly granted SELECT permission on the table.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.HeterogeneousTable.HasPrimaryKey">
			<summary>Gets or sets whether the table has a primary key.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value.If true, there is a primary key defined on the table.If false, there is no primary key.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.HeterogeneousTable.HasUniqueConstraintNullable">
			<summary>Gets or sets whether the unique constraint allows null values.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value.If true, null values are allowed.If false, null values are not allowed.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.HeterogeneousTable.IsPublished">
			<summary>Gets or sets whether the table is currently being published by Microsoft SQL Server replication.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value.If true, the table is being published.If false, the table is not being published.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.HeterogeneousTable.IsTransPublished">
			<summary>Gets or sets whether the table is published in a transactional publication.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value.If true, the table is published in a transactional publication.If false, the table is not published in a transactional publication.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.HeterogeneousTable.Name">
			<summary>Gets or sets the name of the table object at the non-Microsoft SQL Server Publisher.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.HeterogeneousTable.Owner">
			<summary>Gets or sets the owner of the table at the non-Microsoft SQL Server Publisher.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.HeterogeneousTable.UserData">
			<summary>Gets or sets custom user data for this object.</summary>
			<returns>An <see cref="T:System.Object"></see> instance that contains user data. The data is only persisted for the lifetime of the <see cref="T:Microsoft.SqlServer.Replication.HeterogeneousTable"></see> object. </returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.IConnectionSecurityContext">
			<summary>Provides an implementation of the <see cref="T:Microsoft.SqlServer.Replication.ConnectionSecurityContext"></see> class for late-bound COM clients. For information on the members of this interface, see the reference documentation for <see cref="T:Microsoft.SqlServer.Replication.ConnectionSecurityContext"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.IdentityRangeInfo">
			<summary>Structure that represents identity range management settings for a published article when the source table contains identity columns.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.IdentityRangeInfo.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.IdentityRangeInfo"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.IdentityRangeInfo.CurrentIdentityValue">
			<summary>Gets or sets the last identity value generated. </summary>
			<returns>An <see cref="T:System.Int64"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.IdentityRangeInfo.IdentityIncrement">
			<summary>Gets or sets the increment value.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the identity increment.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.IdentityRangeInfo.IdentityRangeManagementOption">
			<summary>Gets or sets the identity range management options used by replication.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Replication.IdentityRangeManagementOption"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.IdentityRangeInfo.IdentityRangeThreshold">
			<summary>Gets or sets the value that determines when a new identity range is assigned to the Publisher or Subscriber. </summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.IdentityRangeInfo.InRepublishing">
			<summary>Gets or sets whether the article exists at a republishing Subscriber in a merge replication topology. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value.If true, the article exists at a republishing Subscriber.If false, the article does not exist at a republishing Subscriber</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.IdentityRangeInfo.MaximumIdentityValue">
			<summary>Gets or sets the maximum value of the identity column. </summary>
			<returns>An <see cref="T:System.Int64"></see> value that specifies the maximum value of the identity column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.IdentityRangeInfo.NextStartingSeed">
			<summary>Gets the starting point of the next range if automatic identity range is enabled. </summary>
			<returns>An <see cref="T:System.Int64"></see> value that specifies the starting point of the next range if automatic identity range is enabled.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.IdentityRangeInfo.PublisherIdentityRangeSize">
			<summary>Gets or sets the identity range size of a published table at the Publisher for transactional replication, or at a republishing Subscriber for merge replication.</summary>
			<returns>An <see cref="T:System.Int64"></see> value that specifies the identity range size.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.IdentityRangeInfo.SubscriberIdentityRangeSize">
			<summary>Gets or sets the identity range size of a table at the Subscriber for transactional replication, or at both the Publisher and Subscriber for merge replication. </summary>
			<returns>An <see cref="T:System.Int64"></see> value that specifies the identity range size.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.IdentityRangeInfo.TablePublished">
			<summary>Gets or sets whether the table is published in an existing publication.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the table is published in another publication.If false, the table is not published anywhere else.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.IdentityRangeInfo.UserData">
			<summary>Gets or sets an object property value that allows users to attach their own data to this object.</summary>
			<returns>An <see cref="T:System.Object"></see> that specifies the user's own data.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.IdentityRangeManagementOption">
			<summary>Enumerates options for managing identity column range assignments in tables published using merge replication and transactional replication with updating Subscribers.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.IdentityRangeManagementOption.Automatic">
			<summary>Identity columns are marked as NOT FOR REPLICATION, and replication automatically assigns identity ranges. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.IdentityRangeManagementOption.Manual">
			<summary>Identity columns are marked as NOT FOR REPLICATION, but replication does not assign identity ranges. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.IdentityRangeManagementOption.None">
			<summary>Identity columns are replicated to the Subscriber as the base data type.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.InitialSyncType">
			<summary>Enumerates the data file formats supported for the initial snapshot.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.InitialSyncType.BcpChar">
			<summary>Produces character-mode bulk copy program output of all tables. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.InitialSyncType.BcpNative">
			<summary>Produces native-mode bulk copy program output of all tables. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.InitialSyncType.ConcurrentChar">
			<summary>Produces character-mode bulk copy program output of all tables but does not lock tables during the snapshot.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.InitialSyncType.ConcurrentNative">
			<summary>Produces native-mode bulk copy program output of all tables but does not lock tables during the snapshot.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.InitialSyncType.DatabaseSnapshotNative">
			<summary>Internal use only.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.InitialSyncType.DatbaseSnapshotChar">
			<summary>Internal use only.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.IProcessSecurityContext">
			<summary>Interface that encapsulates the Microsoft Windows security account information used by Microsoft SQL Server Agent to start a replication agent job.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.IProcessSecurityContext.Login">
			<summary>Gets or sets the name of the Microsoft Windows security account. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.IProcessSecurityContext.Password">
			<summary>Gets or sets the password for the Microsoft Windows security account specified in the <see cref="P:Microsoft.SqlServer.Replication.IProcessSecurityContext.Login"></see> property. </summary>
			<returns>An empty string.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.IProcessSecurityContext.SecurePassword">
			<summary>Gets or sets the password (as a <see cref="T:System.Security.SecureString"></see> object) for the Microsoft Windows security account specified in the <see cref="P:Microsoft.SqlServer.Replication.IProcessSecurityContext.Login"></see> property. </summary>
			<returns>A <see cref="T:System.Security.SecureString"></see> object that is an empty string.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.LastValidationDateTime">
			<summary>Used to return the date and time of the last merge subscription validation. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.LastValidationDateTime.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.LastValidationDateTime"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.LastValidationDateTime.AttemptedDateTime">
			<summary>Gets or sets the date and time when the last validation was attempted.</summary>
			<returns>A <see cref="T:System.String"></see> value that represents the date and time.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.LastValidationDateTime.SuccessfulDateTime">
			<summary>Gets or sets the date and time when the last successful validation occurred.</summary>
			<returns>A <see cref="T:System.String"></see> value that represents the date and time.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.LastValidationDateTime.UserData">
			<summary>Gets or sets an object property that allows users to attach their own data to this object.</summary>
			<returns>A <see cref="T:System.Object"></see> value that specifies custom user data. The data is only valid for the lifetime of the object. </returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.MergeArticle">
			<summary>Represents an article in a merge publication. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeArticle.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.MergeArticle"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeArticle.#ctor(System.String,System.String,System.String,Microsoft.SqlServer.Management.Common.ServerConnection)">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.MergeArticle"></see> class with the specified name, publication, database, and connection to the instance of Microsoft SQL Server.</summary>
			<param name="databaseName">A <see cref="T:System.String"></see> value that specifies the database that is associated with the merge article.</param>
			<param name="publicationName">A <see cref="T:System.String"></see> value that specifies the publication that is associated with the merge article.</param>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object that specifies the connection context that is used to establish a connection with the instance of SQL Server.</param>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of the merge article.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeArticle.AddMergeJoinFilter(Microsoft.SqlServer.Replication.MergeJoinFilter)">
			<summary>Adds a join filter to the merge article.</summary>
			<param name="mergeJoinFilter">A <see cref="T:Microsoft.SqlServer.Replication.MergeJoinFilter"></see> object value that specifies the merge join filter to script.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeArticle.AddReplicatedColumns(System.Array)">
			<summary>Adds the specified columns to the merge article.</summary>
			<param name="columns">A <see cref="T:System.String"></see> array that contains the names of the columns to include in a vertically partitioned article.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeArticle.ChangeMergeJoinFilter(Microsoft.SqlServer.Replication.MergeJoinFilter,Microsoft.SqlServer.Replication.MergeJoinFilter)">
			<summary>Changes a join filter that defined on a merge article.</summary>
			<param name="newJoinFilter">A <see cref="T:Microsoft.SqlServer.Replication.MergeJoinFilter"></see> value that specifies the new filter.</param>
			<param name="oldJoinFilter">A <see cref="T:Microsoft.SqlServer.Replication.MergeJoinFilter"></see> value that specifies the old filter.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeArticle.EnumMergeJoinFilters">
			<summary>Returns the join filters that are defined for the merge article.</summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.MergeJoinFilter"></see> objects. </returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeArticle.ListReplicatedColumns">
			<summary>Returns the columns that exist in a vertically partitioned article.</summary>
			<returns>A <see cref="T:System.String"></see> array of column names. </returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeArticle.RemoveMergeJoinFilter(System.String)">
			<summary>Removes the specified merge join filter from the article.</summary>
			<param name="mergeJoinFilterName">A <see cref="T:System.String"></see> value that specifies the name of join filter to remove.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeArticle.RemoveReplicatedColumns(System.Array)">
			<summary>Removes existing columns from a vertically partitioned article.</summary>
			<param name="columns">A <see cref="T:System.String"></see> array that is the name of the columns to remove. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeArticle.ScriptMergeJoinFilter(Microsoft.SqlServer.Replication.MergeJoinFilter,Microsoft.SqlServer.Replication.ScriptOptions)">
			<summary>Returns a Transact-SQL script of the merge join filter attached to the merge article.</summary>
			<returns>A <see cref="T:System.String"></see> value that contains the Transact-SQL script. </returns>
			<param name="scriptOption">A <see cref="T:Microsoft.SqlServer.Replication.ScriptOptions"></see> object value that specifies the scripting options.</param>
			<param name="mergeJoinFilter">A <see cref="T:Microsoft.SqlServer.Replication.MergeJoinFilter"></see> object that represents the merge join filter to script.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeArticle.AllowInteractiveResolver">
			<summary>Gets or sets whether to allow subscriptions to invoke an interactive resolver when conflicts occur during synchronization.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, subscriptions can invoke an interactive resolver during synchronization. If false, subscriptions cannot invoke an interactive resolver during synchronization.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeArticle.ArticleResolver">
			<summary>Gets or sets the friendly name of the custom conflict resolver or business logic handler used when synchronizing the article. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeArticle.CheckPermissions">
			<summary>Gets or sets how the permissions are checked at the Publisher before changes are uploaded from a Subscriber.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.CheckPermissionOptions"></see> object value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeArticle.ColumnTracking">
			<summary>Gets or sets how conflicts are detected when synchronizing data rows.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, each column in a row is evaluated separately for conflicts. If false, the entire row is evaluated to determine conflicts. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeArticle.CompensateForErrors">
			<summary>Gets or sets whether compensating actions are taken when errors are encountered during synchronization.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, changes that cannot be applied at a Subscriber or Publisher during synchronization always lead to compensating actions to undo the change. If false, the default, compensating actions are not attempted when an error occurs.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeArticle.ConflictTable">
			<summary>Gets the name of the table used to track conflicts that occur when synchronizing a merge article.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the conflict table for the merge article.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeArticle.DeleteTracking">
			<summary>Gets or sets whether deletes are replicated.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value.If true, deleted records are replicated; this is the default behavior for merge replication. If false, deleted records are not replicated. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeArticle.FilterClause">
			<summary>Gets or sets the WHERE (Transact-SQL) clause that is evaluated to filter an article horizontally. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeArticle.PartitionOption">
			<summary>Gets or sets the filtering options when an article is filtered using a parameterized row filter.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.PartitionOptions"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeArticle.ResolverInfo">
			<summary>Gets or sets additional data and parameters that are to be used by a COM-based conflict resolver.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeArticle.SnapshotObjectName">
			<summary>Gets the name of the database object that represents the initial snapshot data for the article. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the database object that provides the initial snapshot of replicated data.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeArticle.SnapshotObjectOwner">
			<summary>Gets the owner of the database object that represents the initial snapshot data for the article. </summary>
			<returns>A <see cref="T:System.String"></see> value that represents the owner name. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeArticle.Status">
			<summary>Gets or sets the status of the merge article. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.MergeArticleState"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeArticle.StreamBlobColumns">
			<summary>Gets or sets whether a data stream optimization is used when replicating binary large object (BLOB) columns. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the default, changes to BLOB columns are transferred in chunks. If false, changes to BLOB columns are transferred individually. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeArticle.SubscriberUploadOption">
			<summary>Gets or sets the behavior of updates made at a Subscriber with a client subscription.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.SubscriberUploadOptions"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeArticle.VerifyResolverSignature">
			<summary>Gets or sets the options for verifying the digital signature on a COM-based conflict resolver to determine if it is from a trusted source. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.VerifyResolverSignatureOption"></see> value.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.MergeArticleCollection">
			<summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Replication.MergeArticle"></see> objects. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeArticleCollection.CopyTo(Microsoft.SqlServer.Replication.MergeArticleCollection,System.Int32)">
			<summary>Makes a copy of the collection.</summary>
			<param name="replicationCollection">A <see cref="T:Microsoft.SqlServer.Replication.MergeArticleCollection"></see> object that is to receive the copy of the original collection.</param>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the index position within the original collection from which to start copying.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeArticleCollection.Item(System.Int32)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.MergeArticle"></see> object in the collection by index number.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.MergeArticle"></see> object.</returns>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the position of the <see cref="T:Microsoft.SqlServer.Replication.MergeArticle"></see> object in the collection.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeArticleCollection.Item(System.String)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.MergeArticle"></see> object in the collection by name.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.MergeArticle"></see> object.</returns>
			<param name="name">A <see cref="T:System.String"></see> value that is equivalent to the <see cref="P:Microsoft.SqlServer.Replication.Article.Name"></see> property of a <see cref="T:Microsoft.SqlServer.Replication.MergeArticle"></see> object in the collection. </param>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.MergeArticleState">
			<summary>Enumerates the supported status settings for a merge article. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeArticleState.Active">
			<summary>The initial snapshot scripts for the have been generated.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeArticleState.NewActive">
			<summary>Internal use only.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeArticleState.NewInactive">
			<summary>Internal use only.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeArticleState.Unsynchronized">
			<summary>The initial snapshot scripts for this article will be generated during the next scheduled snapshot agent run for the publication. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.MergeConflictCount">
			<summary>Represents conflict information for a table article in a merge publication.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeConflictCount.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.MergeConflictCount"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeConflictCount.ArticleName">
			<summary>Gets or sets the name of the merge article that has conflicts represented by the <see cref="T:Microsoft.SqlServer.Replication.MergeConflictCount"></see> object. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeConflictCount.CentralizedConflicts">
			<summary>Gets or sets whether conflict data for the article is stored at the Publisher or at the Subscriber. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the conflict data rows are stored centrally at the Publisher in the publication database. If false, the conflict data rows are stored at each Subscriber in the subscription database.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeConflictCount.ConflictTableName">
			<summary>Gets or sets the name of the table that stores the conflict data rows. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the table name. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeConflictCount.DeleteConflictCount">
			<summary>Gets or sets the total number of conflict rows in the conflict table that are the result of deletes on the published table. </summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeConflictCount.GuidColumnName">
			<summary>Gets or sets the name of the column that uniquely identifies rows in the table article.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeConflictCount.SourceObjectName">
			<summary>Gets or sets the name of the published table. </summary>
			<returns>A <see cref="T:System.String"></see> value that represents a table name.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeConflictCount.UpdateConflictCount">
			<summary>Gets or sets the total number of conflict rows in the conflict table that are the result of updates on the published table. </summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the number of update conflicts stored in the conflict table for the referenced article.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.MergeDynamicSnapshotJob">
			<summary>Contains information about the Snapshot Agent job that generates the data snapshot for a subscription to a merge publication with a parameterized row filter.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeDynamicSnapshotJob.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.MergeDynamicSnapshotJob"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeDynamicSnapshotJob.DynamicFilterHostName">
			<summary>Gets or sets the value supplied to the HOST_NAME (Transact-SQL) function to generate the data snapshot, when the parameterized row filter is defined using this function.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeDynamicSnapshotJob.DynamicFilterLogin">
			<summary>Gets or sets the value supplied to the SUSER_SNAME (Transact-SQL) function to generate the data snapshot, when the parameterized row filter is defined using this function. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeDynamicSnapshotJob.DynamicSnapshotLocation">
			<summary>Gets or sets the operating system folder used to store the filtered snapshot generated by this Snapshot Agent job.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeDynamicSnapshotJob.JobId">
			<summary>Gets or sets the Microsoft SQL Server Agent job ID, in hexadecimal format, that generates the filtered snapshot for the Subscriber.</summary>
			<returns>A <see cref="T:System.String"></see> value that represents the job ID in hexadecimal format.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeDynamicSnapshotJob.Name">
			<summary>Gets or sets the name of the Snapshot Agent job that generates the filtered snapshot for the Subscriber.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeDynamicSnapshotJob.UserData">
			<summary>Gets or sets an object that allows you to attach custom data to this instance of <see cref="T:Microsoft.SqlServer.Replication.MergeDynamicSnapshotJob"></see>.</summary>
			<returns>An <see cref="T:System.Object"></see> that contains user data. The data is valid only for the lifetime of the <see cref="T:Microsoft.SqlServer.Replication.MergeDynamicSnapshotJob"></see> object.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.MergeJoinFilter">
			<summary>Represents a join filter or logical record relationship between to merge articles. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeJoinFilter.#ctor">
			<summary>Create a new instance of the <see cref="T:Microsoft.SqlServer.Replication.MergeJoinFilter"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeJoinFilter.ArticleName">
			<summary>Gets or sets the name of the child article filtered by the join filter. </summary>
			<returns>A <see cref="T:System.String"></see> value that is the name of a merge article.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeJoinFilter.BaseTableName">
			<summary>Gets or sets the name of the table object against which the article is filtered. </summary>
			<returns>A <see cref="T:System.String"></see> value that is a table name. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeJoinFilter.BaseTableOwner">
			<summary>Gets or sets the owner of the table object against which the article is filtered. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the table owner. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeJoinFilter.FilterName">
			<summary>Gets or sets the name of the merge article join filter. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeJoinFilter.FilterTypes">
			<summary>Gets or sets the type of merge join filter.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.FilterTypes"></see> value that specifies the type of filter.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeJoinFilter.JoinArticleName">
			<summary>Gets or sets the name of the parent article to which the filtered article is joined. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeJoinFilter.JoinFilterClause">
			<summary>Gets or sets the clause that joins the child article, specified by <see cref="P:Microsoft.SqlServer.Replication.MergeJoinFilter.ArticleName"></see>, to the parent article, specified by <see cref="P:Microsoft.SqlServer.Replication.MergeJoinFilter.JoinArticleName"></see>, to filter the child article. </summary>
			<returns>A <see cref="T:System.String"></see>Transact-SQL expression that represents the filtering or logical record relationship between the two articles.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeJoinFilter.JoinFilterId">
			<summary>Gets or sets the ID of the join filter or logical record relationship.</summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeJoinFilter.JoinTableName">
			<summary>Gets or sets the name of the source table for the child article that is joined to the base table for the parent article.</summary>
			<returns>A <see cref="T:System.String"></see> value that is a table name. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeJoinFilter.JoinTableOwner">
			<summary>Gets or sets the owner of the source table for the child article that is joined to the base table for the parent article.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the owner of the join table. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeJoinFilter.JoinUniqueKey">
			<summary>Gets or sets whether the join between the child article, specified by <see cref="P:Microsoft.SqlServer.Replication.MergeJoinFilter.ArticleName"></see>, and the parent article, specified by <see cref="P:Microsoft.SqlServer.Replication.MergeJoinFilter.JoinArticleName"></see>, is one-to-many, one-to-one, many-to-one, or many-to-many. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, there is a one-to-one or one-to-many relationship between the child article being filtered and the parent article. If false, there is a many-to-one or many-to-many relationship between the child article being filtered and the parent article. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeJoinFilter.UserData">
			<summary>Gets or sets a property that allows users to attach their own data to this object.</summary>
			<returns>An <see cref="T:System.Object"></see> that contains user data. The data is valid only for the lifetime of the object.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.MergePartition">
			<summary>Represents information about a Subscriber's partition for a merge publication with a parameterized row filter.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePartition.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.MergePartition"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePartition.CurrentSnapshotDateTime">
			<summary>Gets or sets the date and time when the data snapshot of the partition was generated.</summary>
			<returns>A <see cref="T:System.DateTime"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePartition.DynamicFilterHostName">
			<summary>Gets or sets the value supplied to the HOST_NAME (Transact-SQL) function to generate the data snapshot, when the parameterized row filter is defined using this function.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePartition.DynamicFilterLogin">
			<summary>Gets or sets the value supplied to the SUSER_SNAME (Transact-SQL) function to generate the data snapshot, when the parameterized row filter is defined using this function.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePartition.DynamicSnapshotJobId">
			<summary>Gets or sets the Microsoft SQL Server Agent job ID, in hexadecimal format, which generates the filtered snapshot for the Subscriber. </summary>
			<returns>A <see cref="T:System.String"></see> value that represents the job ID in hexadecimal format. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePartition.DynamicSnapshotLocation">
			<summary>Gets or sets the operating system folder used to store the filtered snapshot generated for the partition.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePartition.PartitionId">
			<summary>Gets or sets the ID value that uniquely identifies the partition.</summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePartition.UserData">
			<summary>Gets or sets an object that allows you to attach custom data to this instance of <see cref="T:Microsoft.SqlServer.Replication.MergePartition"></see>.</summary>
			<returns>An <see cref="T:System.Object"></see> that contains user data. </returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.MergePublication">
			<summary>Represents a merge publication.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.MergePublication"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.#ctor(System.String,System.String,Microsoft.SqlServer.Management.Common.ServerConnection)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Replication.MergePublication"></see> class with the specified name, database, and connection to the Publisher.</summary>
			<param name="databaseName">A <see cref="T:System.String"></see> value that specifies the database.</param>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object value that specifies the connection context required to establish a connection to the instance of Microsoft SQL Server.</param>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of the merge publication.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.#ctor(System.String,System.String,Microsoft.SqlServer.Management.Common.ServerConnection,System.Boolean)">
			<summary>Creates an instance of the <see cref="T:Microsoft.SqlServer.Replication.MergePublication"></see> class, specifying whether the Snapshot Agent job should be created by default.</summary>
			<param name="databaseName">A <see cref="T:System.String"></see> value that specifies the database.</param>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object value that specifies the connection context required to establish a connection to the instance of Microsoft SQL Server.</param>
			<param name="createSnapshotAgentByDefault">A <see cref="T:System.Boolean"></see> value. If true, the Snapshot Agent job for the publication is created. If false, the Snapshot Agent job for the publication is not created and the Snapshot Agent must be run manually to generate the initial snapshot.</param>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of the merge publication.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.AddMergeDynamicSnapshotJob(Microsoft.SqlServer.Replication.MergeDynamicSnapshotJob,Microsoft.SqlServer.Replication.ReplicationAgentSchedule)">
			<summary>Adds a Snapshot Agent job that generates the filtered data partition for a Subscriber when a parameterized row filter is used.</summary>
			<param name="schedule">A <see cref="T:Microsoft.SqlServer.Replication.ReplicationAgentSchedule"></see> object that specifies the schedule that is associated with the job.</param>
			<param name="mergeDynamicSnapshotJob">A <see cref="T:Microsoft.SqlServer.Replication.MergeDynamicSnapshotJob"></see> object that specifies the filtered data snapshot job.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.AddMergeDynamicSnapshotJobForLateBoundComClients(System.Object,System.Object)">
			<summary>Enables late-bound COM clients to add a Snapshot Agent job that generates the filtered data partition for a Subscriber when a parameterized row filter is used.</summary>
			<param name="schedule">An <see cref="T:System.Object"></see> that specifies the job schedule.</param>
			<param name="mergeDynamicSnapshotJob">An <see cref="T:System.Object"></see> that specifies the filtered data snapshot job.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.AddMergePartition(Microsoft.SqlServer.Replication.MergePartition)">
			<summary>Defines a Subscriber partition for a merge publication with a parameterized row filter. </summary>
			<param name="mergePartition">A <see cref="T:Microsoft.SqlServer.Replication.MergePartition"></see> object that specifies the Subscriber partition being defined.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.BrowseSnapshotFolder">
			<summary>Returns the complete path of the directory location where snapshot files are generated. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.ChangeMergeDynamicSnapshotJobScheduleWithJobId(System.String,Microsoft.SqlServer.Replication.ReplicationAgentSchedule)">
			<summary>Modifies the schedule for the Snapshot Agent job that generates the filtered data partition for a Subscriber, based on the job ID.</summary>
			<param name="schedule">A <see cref="T:Microsoft.SqlServer.Replication.ReplicationAgentSchedule"></see> object that represents the new job schedule.</param>
			<param name="dynamicSnapshotJobId">A <see cref="T:System.String"></see> value that specifies the job ID value.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.ChangeMergeDynamicSnapshotJobScheduleWithJobIdForLateBoundComClients(System.String,System.Object)">
			<summary>Allows late-bound COM clients to modify the schedule for the Snapshot Agent job that generates the filtered data partition for a Subscriber, based on the job ID.</summary>
			<param name="schedule">A <see cref="T:Microsoft.SqlServer.Replication.ReplicationAgentSchedule"></see> object that represents the new job schedule.</param>
			<param name="dynamicSnapshotJobId">A <see cref="T:System.String"></see> value that specifies the job ID value.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.ChangeMergeDynamicSnapshotJobScheduleWithJobName(System.String,Microsoft.SqlServer.Replication.ReplicationAgentSchedule)">
			<summary>Modifies the schedule for the Snapshot Agent job that generates the filtered data partition for a Subscriber, based on the job name.</summary>
			<param name="schedule">A <see cref="T:Microsoft.SqlServer.Replication.ReplicationAgentSchedule"></see> object that represents the new job schedule.</param>
			<param name="dynamicSnapshotJobName">A <see cref="T:System.String"></see> value that specifies the job name value.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.ChangeMergeDynamicSnapshotJobScheduleWithJobNameForLateBoundComClients(System.String,System.Object)">
			<summary>Allows late-bound COM clients to modify the schedule for the Snapshot Agent job that generates the filtered data partition for a Subscriber, based on the job name.</summary>
			<param name="schedule">A <see cref="T:Microsoft.SqlServer.Replication.ReplicationAgentSchedule"></see> object that represents the new job schedule.</param>
			<param name="dynamicSnapshotJobName">A <see cref="T:System.String"></see> value that specifies the job name value.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.CopySnapshot(System.String)">
			<summary>Copies the snapshot files for the merge publication from the snapshot folder to a destination folder.</summary>
			<param name="destinationFolder">A <see cref="T:System.String"></see> value that specifies the directory to which the snapshot files are to be copied.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.DisableSynchronizationPartner(System.String,System.String,System.String)">
			<summary>Disables the specified synchronization partner for this merge publication.</summary>
			<param name="publisher">A <see cref="T:System.String"></see> value that specifies the Publisher name.</param>
			<param name="publication">A <see cref="T:System.String"></see> value that specifies the publication name.</param>
			<param name="publicationDB">A <see cref="T:System.String"></see> value that specifies the publication database name.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.EnableSynchronizationPartner(Microsoft.SqlServer.Replication.SynchronizationPartner)">
			<summary>Enables a specified synchronization partner for this merge publication.</summary>
			<param name="syncPartner">A <see cref="T:Microsoft.SqlServer.Replication.SynchronizationPartner"></see> object that specifies the alternative synchronization source.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.EnumAllMergeJoinFilters">
			<summary>Returns all the merge join filters defined on the merge publication.</summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.MergeJoinFilter"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.EnumMergeDynamicSnapshotJobs">
			<summary>Returns a list of merge dynamic snapshot jobs.</summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.MergeDynamicSnapshotJob"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.EnumMergePartitions">
			<summary>Returns the Subscriber partitions defined for this merge publication.</summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.MergePartition"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.EnumSynchronizationPartners">
			<summary>Returns the alternate synchronization partners for this merge publication.</summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.AlternateSynchronizationPartner"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.GetMergeDynamicSnapshotJobScheduleWithJobId(System.String)">
			<summary>Returns the schedule for the Snapshot Agent job that generates the filtered data partition for a Subscriber based on the job ID.</summary>
			<param name="dynamicSnapshotJobId">A <see cref="T:System.String"></see> value that specifies the job ID value.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.GetMergeDynamicSnapshotJobScheduleWithJobName(System.String)">
			<summary>Returns the schedule for the Snapshot Agent job that generates the filtered data partition for a Subscriber based on the job name.</summary>
			<param name="dynamicSnapshotJobName">A <see cref="T:System.String"></see> value that specifies the job name.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.MakePullSubscriptionWellKnown(System.String,System.String,Microsoft.SqlServer.Replication.SubscriptionSyncType,Microsoft.SqlServer.Replication.MergeSubscriberType,System.Single)">
			<summary>Registers a merge pull subscription at the Publisher.</summary>
			<param name="subscriber">A <see cref="T:System.String"></see> value that specifies the Subscriber where the pull subscription was created.</param>
			<param name="subscriberType">A <see cref="T:Microsoft.SqlServer.Replication.MergeSubscriberType"></see> object that specifies whether the subscription to register is a local or global subscription.</param>
			<param name="subscriptionDB">A <see cref="T:System.String"></see> value that specifies the subscription database in which the pull subscription was created.</param>
			<param name="syncType">A <see cref="T:Microsoft.SqlServer.Replication.SubscriptionSyncType"></see> object that specifies how the subscription synchronization is performed.</param>
			<param name="priority">A <see cref="T:System.String"></see> value that specifies the weighting of the pull subscription to resolve conflicts when more than one change occurs in the same replicated data.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.ReadLastValidationDateTimes(System.String,System.String)">
			<summary>Returns information about the most recent subscription validation for a Subscriber.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.LastValidationDateTime"></see> object.</returns>
			<param name="subscriber">A <see cref="T:System.String"></see> value that specifies the Subscriber name.</param>
			<param name="subscriptionDB">A <see cref="T:System.String"></see> value that specifies the subscription database name.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.ReinitializeAllSubscriptions(System.Boolean)">
			<summary>Marks all the subscriptions for reinitialization.</summary>
			<param name="uploadFirst">A <see cref="T:System.Boolean"></see> value that specifies whether to upload all the changes from the Subscriber before reapplying the updated snapshot files when reinitializing all subscriptions to a publication. If true, the changes are uploaded before reapplying the updated snapshot files. If false, the changes are not uploaded first.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.RemoveMergeDynamicSnapshotJob(System.String)">
			<summary>Removes the specified dynamic snapshot job from the merge publication.</summary>
			<param name="dynamicSnapshotJobName">A string value that specifies the name of the dynamic snapshot job.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.RemoveMergePartition(Microsoft.SqlServer.Replication.MergePartition)">
			<summary>Removes an existing Subscriber partition defined on the merge publication.</summary>
			<param name="mergePartition">A <see cref="T:Microsoft.SqlServer.Replication.MergePartition"></see> object value that specifies the merge partition to be removed.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.RemovePullSubscription(System.String,System.String)">
			<summary>Removes the registration of a Subscriber with a pull subscription to the merge publication. </summary>
			<param name="subscriber">A <see cref="T:System.String"></see> value that represents the name of the registered Subscriber. </param>
			<param name="subscriptionDB">A <see cref="T:System.String"></see> value that represents the name of the subscription database.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.ResynchronizeSubscription(System.String,System.String,Microsoft.SqlServer.Replication.ResynchronizeType,System.String)">
			<summary>Resynchronizes a merge subscription to a known validation state that you specify.</summary>
			<param name="synchronizeType">A <see cref="T:Microsoft.SqlServer.Replication.ResynchronizeType"></see> value that specifies the resynchronization type.</param>
			<param name="subscriber">A <see cref="T:System.String"></see> value that specifies the Subscriber.</param>
			<param name="subscriptionDB">A <see cref="T:System.String"></see> value that specifies the subscription database.</param>
			<param name="dateTime">A <see cref="T:System.String"></see> value that represents the date and time from which the changes are resynchronized.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.ScriptMergeDynamicSnapshotJob(Microsoft.SqlServer.Replication.MergeDynamicSnapshotJob,Microsoft.SqlServer.Replication.ReplicationAgentSchedule,Microsoft.SqlServer.Replication.ScriptOptions)">
			<summary>Generates a Transact-SQL script that can be used to re-create the Snapshot Agent job that generates a Subscriber's partitioned data snapshot for publications with a parameterized row filter.</summary>
			<returns>A <see cref="T:System.String"></see> that contains the Transact-SQL script. </returns>
			<param name="schedule">A <see cref="T:Microsoft.SqlServer.Replication.ReplicationAgentSchedule"></see> value that specifies the replication agent schedule.</param>
			<param name="mergeDynamicSnapshotJob">A <see cref="T:Microsoft.SqlServer.Replication.MergeDynamicSnapshotJob"></see> value that specifies the merge dynamic snapshot job to be scripted.</param>
			<param name="scriptOption">A <see cref="T:Microsoft.SqlServer.Replication.ScriptOptions"></see> value that specifies the scripting options.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.ScriptMergePartition(Microsoft.SqlServer.Replication.MergePartition,Microsoft.SqlServer.Replication.ScriptOptions)">
			<summary>Generates a Transact-SQL script that can be used to re-create a Subscriber partition for publications with a parameterized row filter.</summary>
			<returns>A <see cref="T:System.String"></see> that contains the Transact-SQL script. </returns>
			<param name="mergePartition">A <see cref="T:Microsoft.SqlServer.Replication.MergePartition"></see> object that specifies the merge partition to be scripted.</param>
			<param name="scriptOption">A <see cref="T:Microsoft.SqlServer.Replication.ScriptOptions"></see> value that specifies the scripting options.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.ScriptPublicationActivation(Microsoft.SqlServer.Replication.ScriptOptions)">
			<summary>Generates a Transact-SQL script that, when run, sets the status of a merge publication to active. </summary>
			<returns>A <see cref="T:System.String"></see> value that is the Transact-SQL script.</returns>
			<param name="scriptOption">A <see cref="T:Microsoft.SqlServer.Replication.ScriptOptions"></see> value that specifies the script that is generated.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.ValidatePublication(Microsoft.SqlServer.Replication.ValidationOption)">
			<summary>Marks all subscriptions for validation during the next synchronization. </summary>
			<param name="validationOption">A <see cref="T:Microsoft.SqlServer.Replication.ValidationOption"></see> value that specifies the validation options.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublication.ValidateSubscription(System.String,System.String,Microsoft.SqlServer.Replication.ValidationOption)">
			<summary>Marks the specified subscription for validation during the next synchronization. </summary>
			<param name="subscriber">A <see cref="T:System.String"></see> value that specifies the Subscriber.</param>
			<param name="validationOption">A <see cref="T:Microsoft.SqlServer.Replication.ValidationOption"></see> value that specifies the validation options.</param>
			<param name="subscriptionDB">A <see cref="T:System.String"></see> value that specifies the subscription database.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePublication.AutomaticReinitializationPolicy">
			<summary>Gets or sets whether changes at the Publisher are uploaded to the Publisher when a subscription is reinitialized because of a change in the publication.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.AutomaticReinitializationPolicies"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePublication.CompatibilityLevel">
			<summary>Gets or sets the earliest version of Microsoft SQL Server that can subscribe to the merge publication.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.PublicationCompatibilityLevel"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePublication.MaxConcurrentDynamicSnapshots">
			<summary>Gets or sets the maximum number of concurrent Snapshot Agent sessions supported when generating data snapshots when the publication has a parameterized row filter.</summary>
			<returns>An <see cref="T:System.Int32"></see> value. When 0, there is no limit to the number of concurrent filtered data snapshot sessions that can run simultaneously against the publication at any given time</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePublication.MaxConcurrentMerge">
			<summary>Gets or sets the maximum number of Merge Agents that can synchronize with the publication concurrently.</summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePublication.MergeArticles">
			<summary>Gets the existing articles in the merge publication.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.MergeArticleCollection"></see> object. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePublication.MergeSubscriptions">
			<summary>Gets the subscriptions that belong to a merge publication.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.MergeSubscriptionCollection"></see>. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePublication.PartitionGroupsOption">
			<summary>Gets or sets whether precomputed partitions should be used to optimize the synchronization process. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.PartitionGroupsOption"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePublication.RetentionPeriodUnit">
			<summary>Gets or sets the unit in which the <see cref="P:Microsoft.SqlServer.Replication.MergePublication.RetentionPeriodUnit"></see> property is expressed.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.RetentionPeriodUnits"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePublication.SnapshotAvailable">
			<summary>Gets or sets whether the snapshot files for this publication have been generated and are available to initialize Subscribers.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the snapshot files are available and ready for use. If false, the snapshot files are not available.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePublication.UsesHostName">
			<summary>Gets whether the merge publication has a parameterized row filter that uses the HOST_NAME function to evaluate the partition.  </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the merge publication uses the HOST_NAME function to evaluate the partition. If false, the merge publication does not use the HOST_NAME function to evaluate the partition.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePublication.ValidateSubscriberInfo">
			<summary>Gets or sets the functions that are used to define a Subscriber partition of the published data when parameterized row filters are used. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies an expression containing dynamic filtering functions.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePublication.WebSynchronizationUrl">
			<summary>Gets or sets the URL used with Web synchronization. </summary>
			<returns>A <see cref="T:System.String"></see> value that represents a URL.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.MergePublicationCollection">
			<summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Replication.MergePublication"></see> objects. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePublicationCollection.CopyTo(Microsoft.SqlServer.Replication.MergePublicationCollection,System.Int32)">
			<summary>Makes a copy of the collection.</summary>
			<param name="replicationCollection">A <see cref="T:Microsoft.SqlServer.Replication.MergePublicationCollection"></see> object that is to receive the copy of the original collection.</param>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the index position within the original collection to start copying.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePublicationCollection.Item(System.Int32)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.MergePublication"></see> object in the collection by index number.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.MergePublication"></see> object. </returns>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the position of the <see cref="T:Microsoft.SqlServer.Replication.MergePublication"></see> object in the <see cref="T:Microsoft.SqlServer.Replication.MergePublicationCollection"></see>.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePublicationCollection.Item(System.String)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.MergePublication"></see> object in the collection by name.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.MergePublication"></see> object.</returns>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of the merge publication.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.MergePullSubscription">
			<summary>Represents a pull subscription to a merge publication. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePullSubscription.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.MergePullSubscription"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePullSubscription.#ctor(System.String,System.String,System.String,System.String,Microsoft.SqlServer.Management.Common.ServerConnection)">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.MergePullSubscription"></see> class with the specified database, Publisher, publication, and Subscriber connection.</summary>
			<param name="publicationDBName">A <see cref="T:System.String"></see> value that specifies the name of the publication database.</param>
			<param name="publicationName">A <see cref="T:System.String"></see> value that specifies the name of the publication. </param>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object that specifies the connection context required to establish a connection to the instance of Microsoft SQL Server that is the Subscriber.</param>
			<param name="databaseName">A <see cref="T:System.String"></see> value that specifies the name of the subscription database.</param>
			<param name="publisherName">A <see cref="T:System.String"></see> value that specifies the name of the Publisher.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePullSubscription.#ctor(System.String,System.String,System.String,System.String,Microsoft.SqlServer.Management.Common.ServerConnection,System.Boolean)">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.MergePullSubscription"></see> class with the specified database, Publisher, publication, Subscriber connection, and whether the agent job is created.</summary>
			<param name="publicationDBName">A <see cref="T:System.String"></see> value that specifies the name of the publication database.</param>
			<param name="createMergeAgentByDefault">Specifies whether or not the agent job for the subscription is created when the subscription is created.</param>
			<param name="publicationName">A <see cref="T:System.String"></see> value that specifies the name of the publication. </param>
			<param name="subscriptionDBName">A <see cref="T:System.String"></see> value that specifies the name of the subscription database.</param>
			<param name="publisherName">A <see cref="T:System.String"></see> value that specifies the name of the Publisher.</param>
			<param name="subscriberConnectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object that specifies the connection context required to establish a connection to the instance of Microsoft SQL Server that is the Subscriber.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePullSubscription.EnumSynchronizationPartners">
			<summary>Returns the Alternate Synchronization Partners </summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.SynchronizationPartner"></see> objects. </returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePullSubscription.Reinitialize(System.Boolean)">
			<summary>Marks the merge pull subscription for reinitialization.  </summary>
			<param name="uploadFirst">A <see cref="T:System.Boolean"></see> value that specifies whether to upload all changes from the Subscriber before reapplying the snapshot to reinitialize the subscription. If true, the changes are uploaded before applying the snapshot. If false, the changes are not uploaded.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePullSubscription.StopSynchronizationJob">
			<summary>Attempts to stop a running Merge Agent job that is currently synchronizing the subscription.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePullSubscription.SynchronizeWithJob">
			<summary>Starts the agent job asynchronously to synchronize the pull subscription. </summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePullSubscription.DynamicSnapshotLocation">
			<summary>Gets or sets the file location for the subscription-specific snapshot files when the publication uses a parameterized row filter.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePullSubscription.HostName">
			<summary>Gets or sets the value supplied to the HOST_NAME function when this function is used in the parameterized row filter that defines the Subscriber's data partition. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePullSubscription.InternetLogin">
			<summary>Gets or sets the login used with HTTP Basic Authentication when connecting to the Web server during Web synchronization.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePullSubscription.InternetPassword">
			<summary>Gets or sets the password for the supplied <see cref="P:Microsoft.SqlServer.Replication.MergePullSubscription.InternetLogin"></see> value when connecting to the Web server during Web synchronization.  </summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePullSubscription.InternetSecurityMode">
			<summary>Gets or sets the HTTP authentication method used when connecting to the Web server during Web synchronization.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Replication.AuthenticationMethod"></see> object value that specifies authentication method required if message replication is used to synchronize the subscription.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePullSubscription.InternetTimeout">
			<summary>Gets or sets the HTTP timeout, in seconds, when connecting to the Web server during Web synchronization.  </summary>
			<returns>An <see cref="T:System.Int32"></see> value that represents the number of seconds.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePullSubscription.InternetUrl">
			<summary>Gets or sets the URL to use when synchronizing the subscription using Web synchronization. </summary>
			<returns>A <see cref="T:System.String"></see> value that represents a URL. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePullSubscription.Priority">
			<summary>Gets or sets the weighting of this server subscription relative to other server subscriptions when resolving conflicts between subscriptions. </summary>
			<returns>A <see cref="T:System.Single"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePullSubscription.SecureInternetPassword">
			<summary>Sets the password (as a <see cref="T:System.Security.SecureString"></see> object) used when connecting to the Web server using HTTP Basic Authentication.</summary>
			<returns>A <see cref="T:System.Security.SecureString"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePullSubscription.SubscriberType">
			<summary>Gets or sets whether the subscription is a server or client subscription. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.MergeSubscriberType"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePullSubscription.SynchronizationAgent">
			<summary>Gets an object that represents an instance of the Merge Agent that can be used to synchronize the subscription. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.MergeSynchronizationAgent"></see> object. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePullSubscription.SyncType">
			<summary>Gets or sets the manner in which data is initialized at the Subscriber. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.SubscriptionSyncType"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePullSubscription.UseInteractiveResolver">
			<summary>Gets or sets whether the Interactive Resolver is used during the synchronization process. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the Interactive Resolver is displayed during the synchronization process. If false, the default, the Interactive Resolver is not displayed during the synchronization process.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePullSubscription.UseWebSynchronization">
			<summary>Gets or sets whether the subscription is synchronized using Web synchronization. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, Web synchronization is used. If false, the default, a direct connection to the Publisher and Distributor is used to synchronize the subscription.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.MergePullSubscriptionCollection">
			<summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Replication.MergePullSubscription"></see> objects. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergePullSubscriptionCollection.CopyTo(Microsoft.SqlServer.Replication.MergePullSubscriptionCollection,System.Int32)">
			<summary>Makes a copy of the collection.</summary>
			<param name="replicationCollection">A <see cref="T:Microsoft.SqlServer.Replication.MergePullSubscriptionCollection"></see> object that is to receive the copy of the original collection.</param>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the index position within the original collection to start copying.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePullSubscriptionCollection.Item(System.Int32)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.MergePullSubscription"></see> object in the collection by index number.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.MergePullSubscription"></see> object.</returns>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the position of the <see cref="T:Microsoft.SqlServer.Replication.MergePullSubscription"></see> object in the <see cref="T:Microsoft.SqlServer.Replication.MergePullSubscriptionCollection"></see>.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergePullSubscriptionCollection.Item(System.String,System.String,System.String)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.MergePullSubscription"></see> object in the collection by the <see cref="P:Microsoft.SqlServer.Replication.PullSubscription.PublisherName"></see>, <see cref="P:Microsoft.SqlServer.Replication.PullSubscription.PublicationDBName"></see>, and <see cref="P:Microsoft.SqlServer.Replication.PullSubscription.PublicationName"></see> properties that uniquely identify the pull subscription.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.MergePullSubscription"></see> object value that represents the merge pull subscription.</returns>
			<param name="publicationDBName">A <see cref="T:System.String"></see> value that specifies the name of the publication database. </param>
			<param name="publicationName">A <see cref="T:System.String"></see> value that specifies the name of the merge publication.</param>
			<param name="publisherName">A <see cref="T:System.String"></see> value that specifies the name of the Publisher.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.MergeSessionDetail">
			<summary>Represents detailed information about a step in a Merge Agent session.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeSessionDetail.#ctor">
			<summary>Creates an instance of the <see cref="T:Microsoft.SqlServer.Replication.MergeSessionDetail"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionDetail.Conflicts">
			<summary>Gets or sets the number of conflicts that occurred in the step.</summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionDetail.Deletes">
			<summary>Gets or sets the number of deletes that were replicated in the step.</summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionDetail.DetailType">
			<summary>Gets or sets the type of detail step represented by the object.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.MergeSessionDetailType"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionDetail.Duration">
			<summary>Gets or sets the duration of the detail step.</summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionDetail.Errors">
			<summary>Gets or sets errors that occurred in the detail step.</summary>
			<returns>An array of <see cref="T:Microsoft.SqlServer.Replication.MergeSessionError"></see> objects.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionDetail.Inserts">
			<summary>Gets or sets the number of inserts that were replicated in the step.</summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionDetail.Message">
			<summary>Gets or sets the message returned by the Merge Agent during the step.</summary>
			<returns>When the step is of type <see cref="F:Microsoft.SqlServer.Replication.MergeSessionDetailType.UploadArticle"></see> or <see cref="F:Microsoft.SqlServer.Replication.MergeSessionDetailType.DownloadArticle"></see>, <see cref="P:Microsoft.SqlServer.Replication.MergeSessionDetail.Message"></see> is the name of the article.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionDetail.PercentComplete">
			<summary>Gets or sets the progress of the session during the step, as a percentage of the total session.</summary>
			<returns>A <see cref="T:System.Decimal"></see> value that represents a percentage.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionDetail.PercentOfTotalTime">
			<summary>Gets or sets the amount of type spent during this step, as a percentage of the total synchronization time of the session.</summary>
			<returns>A <see cref="T:System.Decimal"></see> value that represents a percentage.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionDetail.RowsRetried">
			<summary>Gets or sets the number of rows that were retried during the step.</summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionDetail.SchemaChanges">
			<summary>Gets or sets the number of schema changes applied during the step.</summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionDetail.Updates">
			<summary>Gets or sets the number of updates that were replicated during the step.</summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.MergeSessionDetailType">
			<summary>Enumerates parts of a Merge Agent session being monitored.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeSessionDetailType.Download">
			<summary>Downloading changes.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeSessionDetailType.DownloadArticle">
			<summary>Downloading specific article rows.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeSessionDetailType.Initialization">
			<summary>Agent initialization.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeSessionDetailType.PreparingSnapshot">
			<summary>Preparing a snapshot for a filtered subscription.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeSessionDetailType.SchemaChanges">
			<summary>Applying schema changes.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeSessionDetailType.Upload">
			<summary>Uploading changes.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeSessionDetailType.UploadArticle">
			<summary>Uploading specific article rows.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.MergeSessionError">
			<summary>Represents information on errors that occur during a Merge Agent session. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeSessionError.#ctor">
			<summary>Creates an instance of the <see cref="T:Microsoft.SqlServer.Replication.MergeSessionError"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionError.ErrorCode">
			<summary>Gets or sets the error code.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionError.ErrorMessage">
			<summary>Gets or sets the error message.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionError.SourceName">
			<summary>Gets or sets the source of the error.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.MergeSessionPhase">
			<summary>Enumerates the phase of a Merge Agent session.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeSessionPhase.DownloadPhase">
			<summary>Changes are being downloaded from the Publisher.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeSessionPhase.None">
			<summary>Not applicable. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeSessionPhase.UploadPhase">
			<summary>Changes are being uploaded to the Publisher.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.MergeSessionStatus">
			<summary>Enumerates the status of a Merge Agent session.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeSessionStatus.Failed">
			<summary>One or more failures occurred during the session. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeSessionStatus.Idle">
			<summary>The agent is idle.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeSessionStatus.Interrupted">
			<summary>The agent was interrupted.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeSessionStatus.NotStarted">
			<summary>The session has not started.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeSessionStatus.Retry">
			<summary>The agent is retrying the session.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeSessionStatus.Running">
			<summary>The agent is running.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeSessionStatus.Starting">
			<summary>The agent is starting.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeSessionStatus.Succeeded">
			<summary>The subscription was synchronized successfully.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.MergeSessionSummary">
			<summary>Represents Merge Agent session information.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeSessionSummary.#ctor">
			<summary>Creates an instance of the <see cref="T:Microsoft.SqlServer.Replication.MergeSessionSummary"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionSummary.CurrentPhase">
			<summary>Gets or sets the current phase of an active session.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.MergeSessionPhase"></see> object that represents the current phase of the session.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionSummary.Duration">
			<summary>Gets or sets the length of the session, in seconds.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that represents the number of seconds.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionSummary.EndTime">
			<summary>Gets or sets the end time of the session.</summary>
			<returns>A <see cref="T:System.DateTime"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionSummary.Errors">
			<summary>Gets or sets the errors that occurred during the synchronization.</summary>
			<returns>An array of <see cref="T:Microsoft.SqlServer.Replication.MergeSessionError"></see> objects.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionSummary.LastMessage">
			<summary>Gets or sets the last message returned by the agent during the session.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionSummary.NumberOfDownloads">
			<summary>Gets or sets the number of rows downloaded during the session.</summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionSummary.NumberOfUploads">
			<summary>Gets or sets the number of rows downloaded during the session.</summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionSummary.PercentComplete">
			<summary>Gets or sets the progress of a running session, as a percentage.</summary>
			<returns>A <see cref="T:System.Decimal"></see> value that represents a percentage.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionSummary.SessionId">
			<summary>Gets or sets the identifier for the session. </summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionSummary.StartTime">
			<summary>Gets or sets the starting time for the session.</summary>
			<returns>A <see cref="T:System.DateTime"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionSummary.Status">
			<summary>Gets or sets the status of the session.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.MergeSessionStatus"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSessionSummary.TimeRemaining">
			<summary>Gets or sets the estimated time remaining for a running session.</summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.MergeSubscriberMonitor">
			<summary>Enables Subscriber-side monitoring of subscriptions to merge publications. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeSubscriberMonitor.#ctor(Microsoft.SqlServer.Management.Common.ServerConnection)">
			<summary>Creates an instance of the <see cref="T:Microsoft.SqlServer.Replication.MergeSubscriberMonitor"></see> class with a connection to the Subscriber.</summary>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object that represents a connection to the instance of Microsoft SQL Server that is the Subscriber.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeSubscriberMonitor.#ctor(Microsoft.SqlServer.Management.Common.ServerConnection,System.String,System.String,System.String,System.String)">
			<summary>Creates an instance of the <see cref="T:Microsoft.SqlServer.Replication.MergeSubscriberMonitor"></see> class to monitor a specific subscription. </summary>
			<param name="publicationName">Name of the publication to which the subscription belongs.</param>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object that represents a connection to the instance of Microsoft SQL Server that is the Subscriber.</param>
			<param name="subscriberDBName">Name of the subscription database.</param>
			<param name="publisherDBName">Name of the publication database.</param>
			<param name="publisherName">Name of the Publisher.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeSubscriberMonitor.GetLastSessionSummary">
			<summary>Returns information on the most recent Merge Agent session as a <see cref="T:Microsoft.SqlServer.Replication.MergeSessionSummary"></see> object.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.MergeSessionSummary"></see> object that represents the most recent Merge Agent session.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeSubscriberMonitor.GetLastSessionSummaryDataRow">
			<summary>Returns information on the most recent Merge Agent session as a <see cref="T:System.Data.DataRow"></see> object.</summary>
			<returns>A <see cref="T:System.Data.DataRow"></see> object that represents the most recent Merge Agent session.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeSubscriberMonitor.GetSessionDetails(System.Int32)">
			<summary>Returns detailed information on a Merge Agent session as an array of <see cref="T:Microsoft.SqlServer.Replication.MergeSessionDetail"></see> objects.</summary>
			<returns>An array of <see cref="T:Microsoft.SqlServer.Replication.MergeSessionDetail"></see> objects.</returns>
			<param name="sessionId">Identifies a Merge Agent session. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeSubscriberMonitor.GetSessionDetailsDataSet(System.Int32)">
			<summary>Returns detailed information on a Merge Agent session as an <see cref="T:System.Data.DataSet"></see> object.</summary>
			<returns>An <see cref="T:System.Data.DataSet"></see> object.</returns>
			<param name="sessionId">Identifies a Merge Agent session. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeSubscriberMonitor.GetSessionsSummary">
			<summary>Returns all available summary information on Merge Agent sessions. </summary>
			<returns>An array of <see cref="T:Microsoft.SqlServer.Replication.MergeSessionSummary"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeSubscriberMonitor.GetSessionsSummary(System.Int32)">
			<summary>Returns summary information for Merge Agent sessions that have occurred in the past number of hours specified. </summary>
			<returns>An array of <see cref="T:Microsoft.SqlServer.Replication.MergeSessionSummary"></see> objects.</returns>
			<param name="hours">The past number hours for which to return session information. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeSubscriberMonitor.GetSessionsSummaryDataSet">
			<summary>Returns summary information on all Merge Agent sessions using a <see cref="T:System.Data.DataSet"></see> object. </summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeSubscriberMonitor.GetSessionsSummaryDataSet(System.Int32)">
			<summary>Returns summary information for Merge Agent sessions that have occurred in the past number of hours specified. Summary information is returned using a <see cref="T:System.Data.DataSet"></see> object.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object.</returns>
			<param name="hours">The past number hours for which to return session information. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeSubscriberMonitor.RefreshSessionSummary(System.Data.DataRow@)">
			<summary>Refreshes information in a <see cref="T:System.Data.DataRow"></see> object that represents a specific Merge Agent session.</summary>
			<param name="drRefresh"><see cref="T:System.Data.DataRow"></see> object is the session to be refreshed.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeSubscriberMonitor.RefreshSessionSummary(Microsoft.SqlServer.Replication.MergeSessionSummary@)">
			<summary>Refreshes information in a <see cref="T:Microsoft.SqlServer.Replication.MergeSessionSummary"></see> object that represents a specific Merge Agent session.</summary>
			<param name="mss">A <see cref="T:Microsoft.SqlServer.Replication.MergeSessionSummary"></see> object that is the session to be refreshed.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSubscriberMonitor.Name">
			<summary>Gets the name of the instance of Microsoft SQL Server to which the <see cref="T:Microsoft.SqlServer.Replication.MergeSubscriberMonitor"></see> object is connected.</summary>
			<returns>A <see cref="T:Sytem.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSubscriberMonitor.Publication">
			<summary>Gets or sets the name of the publication to which the subscription belongs.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSubscriberMonitor.Publisher">
			<summary>Gets or sets the name of the Publisher.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSubscriberMonitor.PublisherDB">
			<summary>Gets or sets the name of the publication database.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSubscriberMonitor.SubscriberDB">
			<summary>Gets or sets the name of the subscription database.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.MergeSubscriberType">
			<summary>Enumeration additional types of subscriptions supported by merge replication. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeSubscriberType.Anonymous">
			<summary>This value is deprecated and is only supported for backward compatibility. In Microsoft SQL Server 2005, all subscriptions are tracked at the Publisher, regardless of the value of <see cref="T:Microsoft.SqlServer.Replication.MergeSubscriberType"></see>.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeSubscriberType.Global">
			<summary>The subscription is a server subscription. This type is typically used for Subscribers that republish data to other Subscribers. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.MergeSubscriberType.Local">
			<summary>The subscription is a client subscription. This type of subscription is appropriate for most Subscribers.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.MergeSubscription">
			<summary>Represents a subscription to a merge publication registered at the Publisher. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeSubscription.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.MergeSubscription"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeSubscription.#ctor(System.String,System.String,System.String,System.String,Microsoft.SqlServer.Management.Common.ServerConnection)">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.MergeSubscription"></see> class with the specified connection to the Publisher and the properties that uniquely define the subscription.</summary>
			<param name="publicationName">A <see cref="T:System.String"></see> value that specifies the name of the merge publication.</param>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object value that specifies the connection to the Publisher.</param>
			<param name="subscriptionDBName">A <see cref="T:System.String"></see> value that specifies the name of the subscription database.</param>
			<param name="subscriberName">A <see cref="T:System.String"></see> value that specifies the name of the Subscriber that subscribes to the publication.</param>
			<param name="databaseName">A <see cref="T:System.String"></see> value that specifies the name of the database that contains the publication.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeSubscription.Reinitialize(System.Boolean)">
			<summary>Marks the merge subscription for reinitialization.  </summary>
			<param name="uploadFirst">A <see cref="T:System.Boolean"></see> value that specifies whether to upload all changes from the Subscriber before reapplying the snapshot to reinitialize the subscription. If true, the changes are uploaded before applying the snapshot. If false, the changes are not uploaded.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeSubscription.StopSynchronizationJob">
			<summary>Attempts to stop a running Merge Agent job that is currently synchronizing the subscription.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeSubscription.SynchronizeWithJob">
			<summary>Starts the agent job to synchronize the subscription. </summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSubscription.Description">
			<summary>Gets or sets a textual description of the merge subscription. </summary>
			<returns>A <see cref="T:System.String"></see> value that contains a textual description of the merge subscription. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSubscription.HostName">
			<summary>Gets or sets the value supplied to the HOST_NAME function when this function is used in the parameterized row filter that defines the Subscriber's data partition. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSubscription.Priority">
			<summary>Gets or sets the relative priority value assigned to a server subscription. </summary>
			<returns>A <see cref="T:System.Float32"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSubscription.PublisherSecurity">
			<summary>Gets the security context used by the Merge Agent to connect to the Publisher. </summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Replication.IConnectionSecurityContext"></see> object. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSubscription.SubscriberType">
			<summary>Gets or sets whether the subscription is a client or server subscription. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.MergeSubscriberType"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSubscription.SynchronizationAgent">
			<summary>Gets an instance of the <see cref="T:Microsoft.SqlServer.Replication.MergeSynchronizationAgent"></see> class that can be used to synchronize the subscription. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.MergeSynchronizationAgent"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSubscription.UseInteractiveResolver">
			<summary>Gets or sets whether the Interactive Resolver is used during the synchronization process. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the Interactive Resolver is displayed during the synchronization process. If false, the default, the Interactive Resolver is not displayed during the synchronization process.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.MergeSubscriptionCollection">
			<summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Replication.MergeSubscription"></see> objects. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MergeSubscriptionCollection.CopyTo(Microsoft.SqlServer.Replication.MergeSubscriptionCollection,System.Int32)">
			<summary>Makes a copy of the collection.</summary>
			<param name="replicationCollection">A <see cref="T:Microsoft.SqlServer.Replication.MergeSubscriptionCollection"></see> object that is to receive the copy of the original collection.</param>
			<param name="index">A <see cref="T:System.Int32"></see> value that specifies the index position within the original collection to start copying.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSubscriptionCollection.Item(System.Int32)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.MergeSubscription"></see> object in the collection by index number.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.MergeSubscription"></see> object. </returns>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the position of the <see cref="T:Microsoft.SqlServer.Replication.MergeSubscription"></see> object in the <see cref="T:Microsoft.SqlServer.Replication.MergeSubscriptionCollection"></see>.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MergeSubscriptionCollection.Item(System.String,System.String)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.MergeSubscription"></see> object in the <see cref="T:Microsoft.SqlServer.Replication.MergeSubscriptionCollection"></see> by <see cref="P:Microsoft.SqlServer.Replication.Subscription.SubscriberName"></see> and <see cref="P:Microsoft.SqlServer.Replication.Subscription.SubscriptionDBName"></see> properties that uniquely identify the subscription.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.MergeSubscription"></see> object.</returns>
			<param name="subscriptionDBName">A <see cref="T:System.String"></see> value that specifies the subscription database.</param>
			<param name="subscriberName">A <see cref="T:System.String"></see> value that specifies the Subscriber.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.MonitorThreshold">
			<summary>Represents a threshold metric used when monitoring a publication. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.MonitorThreshold.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.MonitorThreshold"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MonitorThreshold.Enabled">
			<summary>Gets or sets whether the threshold is enabled.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the threshold is enabled. If false, the threshold is disabled.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MonitorThreshold.MetricId">
			<summary>Gets or sets the ID value that uniquely identifies the threshold metric.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the ID value that uniquely identifies the threshold metric.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MonitorThreshold.MetricTitle">
			<summary>Gets or sets the name of the threshold metric.</summary>
			<returns>A <see cref="T:System.String"></see> value that is equivalent to a sysname value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MonitorThreshold.ShouldAlert">
			<summary>Gets or sets whether an alert is generated when the metric exceeds the threshold.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, exceeding the threshold causes an alert. If false, no alert is raised when the threshold is exceeded.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MonitorThreshold.UserData">
			<summary>Gets or sets an object that allows users to attach their own data to this object. </summary>
			<returns>An <see cref="T:System.Object"></see> that specifies the user's own data. The data is only valid for the lifetime of the object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.MonitorThreshold.Value">
			<summary>Gets or sets the threshold value.</summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.PartitionGroupsOption">
			<summary>Enumerates values that determine whether a merge publication uses precomputed partitions.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PartitionGroupsOption.AutoSet">
			<summary>Replication determines whether to use precomputed partitions.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PartitionGroupsOption.False">
			<summary>Precomputed partitions are not used.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PartitionGroupsOption.True">
			<summary>Precomputed partitions are used.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.PartitionOptions">
			<summary>Enumerates the ways in which data in an article is partitioned amongst subscriptions when the merge publication uses a parameterized row filter.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PartitionOptions.NonOverlappingSharedBetweenSubscriptions">
			<summary>The filtering for the article yields non-overlapping partitions, but multiple Subscribers can receive the same partition. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PartitionOptions.NonOverlappingSingleSubscription">
			<summary>The filtering for the article yields non-overlapping partitions that are unique for each subscription.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PartitionOptions.Overlapping">
			<summary>The filtering for the article either is static or does not yield a unique subset of data for each partition, that is, an "overlapping" partition.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PartitionOptions.OverlappingDisallowOutOfPartitionDml">
			<summary>The partitions are overlapping, and data manipulation language (DML) updates made at the Subscriber cannot change the partition to which a row belongs.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.PendingCommandInfo">
			<summary>Represents information on the number of pending commands for a subscription to a transactional publication and a rough estimate of how much time it takes to process them.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PendingCommandInfo.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.PendingCommandInfo"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PendingCommandInfo.EstimatedTimeBehind">
			<summary>Gets or sets the estimated time to complete delivering the pending commands, in seconds.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that represents the number of seconds.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PendingCommandInfo.PendingCommands">
			<summary>Gets or sets the number of pending commands that are waiting to be delivered.</summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PendingCommandInfo.UserData">
			<summary>Gets or sets an object that allows users to attach their own data. </summary>
			<returns>An <see cref="T:System.Object"></see> that specifies the user data.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.PreCreationOption">
			<summary>Enumerates the commands that are executed prior to subscription initialization when a published table already exists in the subscription database. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PreCreationOption.Delete">
			<summary>A DELETE statement is executed to remove individual rows based on the WHERE clause in the subset filter.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PreCreationOption.Drop">
			<summary>A DROP TABLE statement is executed. This value is required to support Microsoft SQL Server Mobile Subscribers.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PreCreationOption.None">
			<summary>No action is taken on the existing table.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PreCreationOption.Truncate">
			<summary>A TRUNCATE TABLE statement is executed to remove all rows from the table.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.Publication">
			<summary>The <see cref="T:Microsoft.SqlServer.Replication.Publication"></see> class is a base class from which the <see cref="T:Microsoft.SqlServer.Replication.TransPublication"></see> class and the <see cref="T:Microsoft.SqlServer.Replication.MergePublication"></see> class are derived.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.Publication.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.Publication"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.Publication.Create">
			<summary>Creates the publication.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.Publication.CreateSnapshotAgent">
			<summary>Creates the SQL Server Agent job that is used to generate the initial snapshot for the publication, if this job does not already exist.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.Publication.EnumArticles">
			<summary>Returns the articles in the publication. </summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.TransArticle"></see> or <see cref="T:Microsoft.SqlServer.Replication.MergeArticle"></see> objects. </returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.Publication.EnumPublicationAccesses(System.Boolean)">
			<summary>Returns logins that have access to the Publisher. </summary>
			<returns>A <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.PublicationAccess"></see> objects. </returns>
			<param name="returnGranted">A <see cref="T:System.Boolean"></see> value that specifies whether or not to return logins that are also in the publication access list (PAL). If true, the only logins in the PAL are returned. If false, only logins that are not in the PAL are returned. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.Publication.EnumSubscriptions">
			<summary>Returns the subscriptions that subscribe to the publication. </summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.TransSubscription"></see> or <see cref="T:Microsoft.SqlServer.Replication.MergeSubscription"></see> objects. </returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.Publication.GrantPublicationAccess(System.String)">
			<summary>Adds the specified login to the publication access list (PAL).</summary>
			<param name="loginName">A <see cref="T:System.String"></see> value that specifies the login of the user to add to the PAL.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.Publication.Remove">
			<summary>Removes an existing publication.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.Publication.Remove(System.Boolean)">
			<summary>Removes an existing publication even if the Distributor cannot be accessed. </summary>
			<param name="force">A <see cref="T:System.Boolean"></see> value that indicates whether or not a publication can be removed even if the Distributor cannot be accessed. Specify a value of true to remove a publication when the Distributor is offline or when reinstalling the Distributor.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.Publication.ReplicateUserDefinedScript(System.String)">
			<summary>Replicates the execution of a user-defined script to the Subscribers of a specified publication. </summary>
			<param name="scriptFilePath">A <see cref="T:System.String"></see> value that specifies the file name and full path to the Transact-SQL script file.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.Publication.RevokePublicationAccess(System.String)">
			<summary>Removes the specified login from the publication access list (PAL).</summary>
			<param name="loginName">A <see cref="T:System.String"></see> value that specifies the login of a user in the PAL.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.Publication.Script(Microsoft.SqlServer.Replication.ScriptOptions)">
			<summary>Generates a Transact-SQL script that can be used to re-create the publication as specified by the script options.</summary>
			<returns>A <see cref="T:System.String"></see> that contains the Transact-SQL script that defines the publication. </returns>
			<param name="scriptOption">A <see cref="T:Microsoft.SqlServer.Replication.ScriptOptions"></see> enumeration value that specifies the scripting options.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.Publication.StartSnapshotGenerationAgentJob">
			<summary>Starts the job that generates the initial snapshot for the publication.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.Publication.StopSnapshotGenerationAgentJob">
			<summary>Attempts to stop a running Snapshot Agent job. </summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.AltSnapshotFolder">
			<summary>Gets or sets the alternate snapshot file location for a publication. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the alternative location used for snapshot file creation.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.Attributes">
			<summary>Gets or sets the publication attributes.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.PublicationAttributes"></see> enumeration value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.CompatibilityLevel">
			<summary>Gets or sets the earliest version of Microsoft SQL Server running on the Subscribers that the referenced publication can support.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.PublicationCompatibilityLevel"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.ConflictRetention">
			<summary>Gets or sets the number of days that conflict data rows are retained in conflict tables.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies number of days. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.CreateSnapshotAgentByDefault">
			<summary>Gets or sets if the Snapshot Agent job is added automatically when the publication is created.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the default, a Snapshot Agent job is created. If false, a Snapshot Agent job is not created, and the snapshot must be generated programmatically.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.DatabaseName">
			<summary>Gets or sets the name of the publication database. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.Description">
			<summary>Gets or sets a textual description of the publication.</summary>
			<returns>A <see cref="T:System.String"></see> value that contains a textual description of the publication.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.FtpAddress">
			<summary>Gets or sets the address of the File Transfer Protocol (FTP) server computer for publications that allow subscription initialization over FTP.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.FtpLogin">
			<summary>Gets or sets the login that is used to connect to the File Transfer Protocol (FTP) server for publications that allow subscription initialization over FTP.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.FtpPassword">
			<summary>Sets the password for the login that is used to connect to the File Transfer Protocol (FTP) server for publications that allow subscription initialization over FTP.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the password used to connect to the FTP server computer.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.FtpPort">
			<summary>Gets or sets the port of the File Transfer Protocol (FTP) server computer for publications that allow subscription initialization over FTP.</summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.FtpSubdirectory">
			<summary>Gets or sets the subdirectory on the File Transfer Protocol (FTP) server computer for publications that allow subscription initialization over FTP.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.HasSubscription">
			<summary>Gets whether the publication has one or more subscriptions.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the publication has at least one existing subscription, and if false, the publication has no subscriptions.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.Name">
			<summary>Gets or sets the name of the publication.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the publication.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.PostSnapshotScript">
			<summary>Gets or sets the name and full path of a Transact-SQL script file that is executed after the initial snapshot is applied to the Subscriber.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.PreSnapshotScript">
			<summary>Gets or sets the name and full path of a Transact-SQL script file that is executed before the initial snapshot is applied to the Subscriber.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the path and the file name of the Transact-SQL script.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.PubId">
			<summary>Gets the value that uniquely identifies the publication. </summary>
			<returns>An <see cref="T:System.Int32"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.ReplicateDdl">
			<summary>Gets or sets the data definition language (DDL) replication options that determine if DDL changes are replicated.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.DdlReplicationOptions"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.RetentionPeriod">
			<summary>Gets or sets the amount of time before a subscription expires when the subscription is not synchronized with the publication.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the number of hours before the subscription expires if the subscription is not yet synchronized with the publication. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.SecureFtpPassword">
			<summary>Sets the password (as a <see cref="T:System.Security.SecureString"></see> object) for the login used to connect to the File Transfer Protocol (FTP) server for publications that allow subscription initialization over FTP.</summary>
			<returns>A <see cref="T:System.Security.SecureString"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.SnapshotAgentExists">
			<summary>Gets if the SQL Server Agent job exists to generate the initial snapshot for this publication.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that indicates if the Snapshot Agent job exists for the publication.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.SnapshotGenerationAgentProcessSecurity">
			<summary>Gets an object that sets the Windows account under which the Snapshot Agent job runs.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Replication.IProcessSecurityContext"></see> object. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.SnapshotGenerationAgentPublisherSecurity">
			<summary>Gets the security context used by the Snapshot Agent to connect to the Publisher.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Replication.IConnectionSecurityContext"></see> object that represents the security context used by the Snapshot Agent to connect to the Publisher. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.SnapshotJobId">
			<summary>Gets the Snapshot Agent job ID for the current publication.</summary>
			<returns>A <see cref="T:System.String"></see> value that represents a unique identifier.  </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.SnapshotMethod">
			<summary>Gets or sets the data file format of the initial snapshot.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Replication.InitialSyncType"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.SnapshotSchedule">
			<summary>Gets an object that sets the schedule for the Snapshot Agent for the current publication.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ReplicationAgentSchedule"></see> object. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.Status">
			<summary>Gets or sets the status of the publication.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.State"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Publication.Type">
			<summary>Gets or sets the type of publication.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.PublicationType"></see> enumeration value that specifies the type of publication. </returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.PublicationAccess">
			<summary>Represents login information in the publication access list (PAL) for a publication. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublicationAccess.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.PublicationAccess"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationAccess.IsWindowsGroup">
			<summary>Gets if the login is a Microsoft Windows group that has access to the publication. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the publication access object represents a Windows group. If false, the publication access object does not represent a Windows group.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationAccess.IsWindowsLogin">
			<summary>Gets if the login is a Microsoft Windows login that has access to the publication. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the publication access object represents a Windows login. If false, the publication access object does not represent a Windows login.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationAccess.LoginName">
			<summary>Gets the user or group that has a login to the Publisher and is granted access to a publication.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationAccess.UserData">
			<summary>Gets or sets an object that allows users to attach their own data to this object. </summary>
			<returns>An <see cref="T:System.Object"></see> that specifies the user data. </returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.PublicationArticle">
			<summary>Represents article information for a published database object.  </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublicationArticle.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.PublicationArticle"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationArticle.AllowInteractiveResolver">
			<summary>Gets or sets whether or not to allow subscriptions to invoke the Interactive Resolver when conflicts occur during synchronization.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationArticle.ArticleName">
			<summary>Gets or sets the name of the article.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationArticle.ArticleResolver">
			<summary>Gets or sets the friendly name of the custom conflict resolver or business logic handler used when synchronizing the article.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationArticle.ArticleType">
			<summary>Gets or sets the source object type for the article. </summary>
			<returns>An <see cref="T:System.Int32"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationArticle.ColumnTracking">
			<summary>Gets or sets how conflicts are detected when synchronizing data rows.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationArticle.PublicationName">
			<summary>Gets or sets the name of the publication to which the article belongs.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationArticle.ReplicationType">
			<summary>Gets or sets the type of publication to which the article belongs.</summary>
			<returns>An <see cref="T:System.Int32"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationArticle.ResolverInfo">
			<summary>Gets or sets additional data and parameters that are to be used by a Component Object Model (COM)-based conflict resolver. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationArticle.UserData">
			<summary>Gets or sets an object that allows users to attach their own data. </summary>
			<returns>An <see cref="T:System.Object"></see> that specifies the user's own data. The data is only valid for the lifetime of the <see cref="T:Microsoft.SqlServer.Replication.PublicationArticle"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationArticle.VerifyResolverSignature">
			<summary>Gets or sets the options for verifying the digital signature on a Component Object Model (COM)-based conflict resolver to determine if it is from a trusted source.  </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.VerifyResolverSignatureOption"></see> value.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.PublicationAttributes">
			<summary>Enumerates supported publication properties. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.AllowAnonymous">
			<summary>Anonymous subscription can subscribe to the publication. In Microsoft SQL Server 2005, all subscriptions are tracked at the Publisher and this value is not used.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.AllowDtsTransformation">
			<summary>Transformable subscriptions are supported. This feature has been deprecated and required installation of SQL Server 2000 Data Transformation Services (DTS). For more information, see Transforming Published Data.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.AllowInitializationFromBackup">
			<summary>Subscribers can initialize a subscription to the publication from a backup rather than the initial snapshot. Supported only for transactional or snapshot replication.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.AllowPartitionRealignment">
			<summary>Deletes are sent to the Subscriber when modification of the row on the Publisher causes it to change its partition and when the publication uses parameterized filters. Supported only for merge publications.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.AllowPull">
			<summary>Subscriptions where the synchronization agent runs at the Subscriber (pull subscriptions) are supported. Required to support SQL Server Mobile Edition Subscribers.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.AllowPush">
			<summary>Subscriptions where the synchronization agent runs at the Distributor (push subscriptions) are supported.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.AllowQueuedTransactions">
			<summary>Queued updating subscriptions are supported for transactional publications. Supported only for transactional publications.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.AllowSubscriberInitiatedSnapshot">
			<summary>Subscribers can initiate the snapshot process to generate the filtered snapshot for their data partition when the merge publication has parameterized filters. Supported only for merge publications.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.AllowSubscriptionCopy">
			<summary>Databases that subscribe to the publication can be copied and attached to create new subscriptions. Attachable subscriptions have been deprecated. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.AllowSynchronousTransactions">
			<summary>Immediate updating subscriptions are supported for transactional publications. Supported only for transactional publications.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.AllowSyncToAlternate">
			<summary>Subscribers can synchronize subscriptions to the merge publication with servers other than the Publisher where the subscription originated. Supported only for merge publications. This feature is deprecated and will be removed in a future release. Not supported for SQL Server Mobile Edition Subscribers.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.AllowWebSynchronization">
			<summary>Subscribers can synchronize subscriptions over the Internet using the HTTPS protocol. Supported only for merge publications. Only available with SQL Server 2005. Required to support SQL Server Mobile Edition Subscribers. For more information, see Web Synchronization for Merge Replication.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.AutomaticGenerateSyncProcedures">
			<summary>The stored procedure used by updating subscriptions to synchronize with the transactional publication is automatically generated. Supported only for transactional publications.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.CentralizedConflicts">
			<summary>Conflict records are stored at the Publisher. Supported only for merge publications. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.CompressSnapshot">
			<summary>Snapshot files are compressed into the CAB format. Snapshot files that are larger than 2 gigabytes (GB) cannot be compressed. Not supported for SQL Server Mobile Edition Subscribers.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.DecentralizedConflicts">
			<summary>Conflict records are stored at the Subscriber. Supported only for merge publications. Not supported for SQL Server Mobile Edition Subscribers.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.DynamicFilters">
			<summary>Parameterized row filters are supported on a merge publication. Supported only for a merge publication.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.EnabledForHeterogeneousSubscribers">
			<summary>Non- SQL Server Subscribers are supported. Supported only for transactional and snapshot publications. Only available with SQL Server 2005 and later versions. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.EnabledForPeerToPeer">
			<summary>Peer-to-peer transactional replication is supported. Supported only for transactional publications. Only available with SQL Server 2005 and later versions. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.ImmediateSync">
			<summary>Synchronization files for the publication are recreated each time the Snapshot Agent runs. Subscribers are able to get the synchronization files immediately if the Snapshot Agent has completed before the subscription is created. New subscriptions get the newest synchronization files generated by the most recent execution of the Snapshot Agent. When setting <see cref="F:Microsoft.SqlServer.Replication.PublicationAttributes.ImmediateSync"></see>, <see cref="F:Microsoft.SqlServer.Replication.PublicationAttributes.IndependentAgent"></see> must also be set.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.IndependentAgent">
			<summary>Each subscription uses its own replication agent instance when synchronizing with the Publisher. Setting this option reduces latency and is the default for a transactional publication. Merge replication always uses independent agents.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.InternetEnabled">
			<summary>Publication can be synchronized over the Internet, and file transfer protocol (FTP) can be used to transfer the snapshot files to a Subscriber. For more information, see Implementing Replication over the Internet.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.KeepPartitionChanges">
			<summary>Partition change optimizations are used when precomputed partitions cannot be used. Do not specify <see cref="F:Microsoft.SqlServer.Replication.PublicationAttributes.KeepPartitionChanges"></see> when <see cref="P:Microsoft.SqlServer.Replication.MergePublication.PartitionGroupsOption"></see> is <see cref="F:Microsoft.SqlServer.Replication.PartitionGroupsOption.True"></see>. For more information, see Optimizing Parameterized Filter Performance with Precomputed Partitions.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.None">
			<summary>Removes all options from <see cref="P:Microsoft.SqlServer.Replication.Publication.Attributes"></see>.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationAttributes.SnapshotInDefaultFolder">
			<summary>The snapshot files for the publication are maintained in the default folder. When <see cref="F:Microsoft.SqlServer.Replication.PublicationAttributes.SnapshotInDefaultFolder"></see> is not specified, you must specify an alternate location for the snapshot files using <see cref="P:Microsoft.SqlServer.Replication.Publication.AltSnapshotFolder"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.PublicationCompatibilityLevel">
			<summary>Enumerates product version values that are used by merge replication to determine which features can be used by publications in a given database.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationCompatibilityLevel.LatestVersion">
			<summary>Publication is compatible with only the latest version of SQL Server.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationCompatibilityLevel.Version70">
			<summary>Publication is compatible back to SQL Server 7.0</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationCompatibilityLevel.Version70SP1">
			<summary>Publication is compatible back to SQL Server 7.0 Service Pack 1</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationCompatibilityLevel.Version70SP2">
			<summary>Publication is compatible back to SQL Server 7.0 Service Pack 2</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationCompatibilityLevel.Version70SP3">
			<summary>Publication is compatible back to SQL Server 7.0 Service Pack 3</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationCompatibilityLevel.Version80">
			<summary>Publication is compatible back to SQL Server 2000 </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationCompatibilityLevel.Version80SP1">
			<summary>Publication is compatible back to SQL Server 2000 Service Pack 1</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationCompatibilityLevel.Version80SP3">
			<summary>Publication is compatible back to SQL Server 2000 Service Pack 3</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationCompatibilityLevel.Version90">
			<summary>Publication is compatible back to SQL Server 2005 </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.PublicationMonitor">
			<summary>Monitors a publication.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublicationMonitor.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.PublicationMonitor"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublicationMonitor.#ctor(System.String,System.String,System.String,System.String,Microsoft.SqlServer.Management.Common.ServerConnection)">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.PublicationMonitor"></see> class with the specified name, distribution database, Publisher, publication database, and connection to the Distributor.</summary>
			<param name="publicationDBName">A <see cref="T:System.String"></see> value that specifies the name of the publication to monitor.</param>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object that specifies the connection to the Distributor.</param>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of the publication to monitor.</param>
			<param name="publisherName">A <see cref="T:System.String"></see> value that specifies the name of the publication to monitor.</param>
			<param name="distributionDBName">A <see cref="T:System.String"></see> value that specifies the name of the publication to monitor.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublicationMonitor.ChangeMonitorThreshold(System.Int32,System.Boolean,System.Int32,System.Int32)">
			<summary>Changes the monitoring threshold metric for a publication. </summary>
			<param name="shouldAlert">Specifies whether or not an alert is generated when the publication threshold metric is reached.</param>
			<param name="enable">Specifies whether the metric is enabled or disabled on the publication.</param>
			<param name="thresholdValue">New value for the publication threshold metric.</param>
			<param name="metricId">Is the ID of the publication threshold metric being changed and can be one of these values:ValueMetric Name1 Expiration. Monitors for imminent expiration of subscriptions to transactional publications.2 Latency. Monitors for the performance of subscriptions to transactional publications.4 Mergeexpiration. Monitors for imminent expiration of subscriptions to merge publications.5 Mergeslowrunduration. Monitors the duration of merge synchronizations over low-bandwidth (dial-up) connections.6 Mergefastrunduration. Monitors the duration of merge synchronizations over high-bandwidth local area network (LAN) connections.7 Mergefastrunspeed. Monitors the synchronization rate of merge synchronizations over high-bandwidth (LAN) connections.8 Mergeslowrunspeed. Monitors the synchronization rate of merge synchronizations over low-bandwidth (dial-up) connections.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublicationMonitor.CleanUpTracerTokenHistory(System.DateTime)">
			<summary>Removes all metadata for tracer tokens older than the specified date from a database published using transactional replication.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object.</returns>
			<param name="cutoffTime">A <see cref="T:System.DateTime"></see> value that specifies the date and time before which to remove the tracer token history records.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublicationMonitor.CleanUpTracerTokenHistory(System.Int32)">
			<summary>Removes metadata for a specific tracer token from a database published using transactional replication.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object.</returns>
			<param name="tracerTokenId">The ID of the tracer token to remove from the publication database and all subscription databases. Use the <see cref="M:Microsoft.SqlServer.Replication.PublicationMonitor.EnumTracerTokens"></see> method to return all existing tracer tokens for a monitored publication.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublicationMonitor.EnumErrorRecords(System.Int32)">
			<summary>Returns information about errors associated with a specified error ID that occurred during a synchronization session.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptionsource_type_id <see cref="T:System.Int32"></see>Identifies the source of the error.source_name <see cref="T:System.String"></see>The name of the error source.error_code <see cref="T:System.String"></see>The error code.error_text <see cref="T:System.String"></see>The message text for the error.(No column name)<see cref="T:System.String"></see>Date and time that the error occurred.error_type_id<see cref="T:System.Int32"></see>Type of error that occurred.has_xact_seqno<see cref="T:System.Boolean"></see>If the error has a corresponding transaction log sequence number. xact_seqno<see cref="T:System.Byte"></see>[]The starting transaction log sequence number of the failed execution batch. command_id<see cref="T:System.Int32"></see>The command ID of the first command in the failed execution batch.</returns>
			<param name="errorId">An <see cref="T:System.Int32"></see> value specifying the ID value that uniquely identifies the error. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublicationMonitor.EnumLogReaderAgent">
			<summary>Returns information for the Log Reader Agent job used by the monitored publication.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptionname<see cref="T:System.String"></see>Replication Agent job name.status <see cref="T:System.Int32"></see>The running status:1 = Start 2 = Succeed 3 = In progress 4 = Idle 5 = Retry 6 = Failpublisher<see cref="T:System.String"></see>Publisher name.publisher_db <see cref="T:System.String"></see>Name of the monitored publication database.start_time <see cref="T:System.String"></see>Date and time of last agent execution.time <see cref="T:System.String"></see>Date and time that the session was logged.duration <see cref="T:System.Int32"></see>Elapsed time of the session, in seconds.comments <see cref="T:System.String"></see>Message text logged by the agent.delivery_time<see cref="T:System.Int32"></see>The time first transaction is delivered.delivered_transactions<see cref="T:System.Int32"></see>Total number of transactions delivered in the session.delivered_commands <see cref="T:System.Int32"></see>Total number of commands delivered in the session.average_commands <see cref="T:System.Int32"></see>Average number of commands per transaction delivered in the session.delivery_rate <see cref="T:System.Single"></see>Average number of commands delivered per second.delivery_latency <see cref="T:System.Int32"></see>The time, in milliseconds, between a command being committed to the published database and being committed to the distribution database. error_id <see cref="T:System.Int32"></see>The ID of the error in the MSrepl_errors system table. Use the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumErrorRecords(System.Int32)"></see> method to return detailed information about an error.job_id<see cref="T:System.Byte"></see>[16]Identifier of the SQL Server Agent job starting the Replication Agent.local_job<see cref="T:System.Boolean"></see>When true, the agent job is available at the Distributor. profile_id <see cref="T:System.Int32"></see>Profile identifier.agent_id <see cref="T:System.Int32"></see>Agent job identifier.last_timestamp <see cref="T:System.Byte"></see>[8]Timestamp of the most recent agent run.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublicationMonitor.EnumMonitorThresholds">
			<summary>Returns the replication monitor thresholds defined for this publication. </summary>
			<returns>A <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.MonitorThreshold"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublicationMonitor.EnumQueueReaderAgent">
			<summary>Returns information for the Queue Reader Agent job used by the monitored publication.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns.ColumnData typeDescriptionname<see cref="T:System.String"></see>Replication Agent job name.status <see cref="T:System.Int32"></see>The running status:1 = Start 2 = Succeed 3 = In progress 4 = Idle 5 = Retry 6 = Failstart_time <see cref="T:System.String"></see>Date and time of last agent execution.time <see cref="T:System.String"></see>Date and time that the session was logged.duration <see cref="T:System.Int32"></see>Elapsed time of the session, in seconds.comments <see cref="T:System.String"></see>Message text logged by the agent.transactions_processed <see cref="T:System.Int32"></see>Total number of transactions processed in the session.commands_processed <see cref="T:System.Int32"></see>Total number of commands processed in the session.average_commands <see cref="T:System.Int32"></see>Average number of commands per transaction delivered in the session.delivery_rate <see cref="T:System.Single"></see>Average number of commands delivered per second.delivery_latency <see cref="T:System.Int32"></see>The time, in milliseconds, between a command being read from the queue at the Subscriber and being committed to the publication database. error_id <see cref="T:System.Int32"></see>The ID of the error in the MSrepl_errors system table. Use the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumErrorRecords(System.Int32)"></see> method to return detailed information about an error.job_id<see cref="T:System.Byte"></see>[16]Identifier of the SQL Server Agent job starting the replication agent.local_job<see cref="T:System.Boolean"></see>When true, the agent job is available at the Distributor. profile_id <see cref="T:System.Int32"></see>Profile identifier.agent_id <see cref="T:System.Int32"></see>Agent job identifier.local_timestamp <see cref="T:System.Byte"></see>[8]Timestamp of the most recent agent run.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublicationMonitor.EnumSnapshotAgent">
			<summary>Returns information for the Snapshot Agent job used by the monitored publication.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns.ColumnData typeDescriptionname<see cref="T:System.String"></see>Replication Agent job name.status <see cref="T:System.Int32"></see>The running status:1 = Start 2 = Succeed 3 = In progress 4 = Idle 5 = Retry 6 = Failpublisher <see cref="T:System.String"></see>Publisher name.publisher_db <see cref="T:System.String"></see>Name of the database published.publication <see cref="T:System.String"></see>Publication name.start_time <see cref="T:System.String"></see>Date and time of last agent execution.time <see cref="T:System.String"></see>Date and time that the session was logged.duration <see cref="T:System.Int32"></see>Elapsed time of the session, in seconds.comments <see cref="T:System.String"></see>Message text logged by the agent.delivered_transactions<see cref="T:System.Int32"></see>Total number of transactions delivered in the session.delivered_commands<see cref="T:System.Int32"></see>Total number of commands delivered in the session.delivery_rate <see cref="T:System.Single"></see>Average number of commands delivered per second.error_id <see cref="T:System.Int32"></see>The ID of the error in the MSrepl_errors system table. Use the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumErrorRecords(System.Int32)"></see> method to return detailed information about an error.job_id<see cref="T:System.Byte"></see>[16]Identifier of the SQL Server Agent job starting the Replication Agent.local_job<see cref="T:System.Boolean"></see>When true, the agent job is available at the Distributor. profile_id <see cref="T:System.Int32"></see>Profile identifier.agent_id <see cref="T:System.Int32"></see>Agent job identifier.local_timestamp <see cref="T:System.Byte"></see>[8]Timestamp of the most recent agent run.dynamic_filter_login<see cref="T:System.String"></see>The value used for evaluating the SUSER_SNAME function in parameterized filters that define a partition.dynamic_filter_hostname<see cref="T:System.String"></see>The value used for evaluating the HOST_NAME function in parameterized filters that define a partition.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublicationMonitor.EnumSubscriptions">
			<summary>Returns information on subscriptions that are subscribed to the monitored publication. </summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object. For a transactional or snapshot publication, the <see cref="T:System.Data.DataSet"></see> contains the following columns. ColumnData typeDescriptionsubscriber <see cref="T:System.String"></see>Is the name of the Subscriber.status <see cref="T:System.Int32"></see>Status of agent job for the subscription, which can be one of these values: 1 = Started2 = Succeeded3 = In progress4 = Idle5 = Retrying6 = Failedsubscriber_db <see cref="T:System.String"></see>Is the name of the subscription database.type <see cref="T:System.Int32"></see>Is the subscription type, which can be one of the following values:0 = Push1 = Pull2 = Anonymousdistribution_agent <see cref="T:System.String"></see>Is the name of the Distribution Agent job.last_action<see cref="T:System.String"></see>Message text of the last action logged by the agent.action_time<see cref="T:System.String"></see>Date and time of the last action logged by the agent.start_time <see cref="T:System.String"></see>Date and time of last agent execution.duration <see cref="T:System.Int32"></see>Elapsed time of the session, in seconds.delivery_rate <see cref="T:System.Single"></see>Average number of commands delivered per second.delivery_latency <see cref="T:System.Int32"></see>Latency, in milliseconds, between the transaction entering the distribution database and being applied to the Subscriber.delivered_transactions<see cref="T:System.Int32"></see>Total number of transactions delivered in the session.delivered_commands<see cref="T:System.Int32"></see>Total number of commands delivered in the session.delivery_time <see cref="T:System.String"></see>Date and time that the session was logged.average_commands <see cref="T:System.Int32"></see>Average number of commands per transaction delivered in the session.error_id <see cref="T:System.Int32"></see>The ID of the error in the MSrepl_errors system table. Use the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumErrorRecords(System.Int32)"></see> method to return detailed information about an error.job_id<see cref="T:System.Byte"></see>[16]Identifier of the SQL Server Agent job starting the Replication Agent.local_job<see cref="T:System.Boolean"></see>When true, the agent job is available at the Distributor. profile_id <see cref="T:System.Int32"></see>Profile identifier.agent_id <see cref="T:System.Int32"></see>Agent job identifier.local_timestamp <see cref="T:System.Byte"></see>[8]Timestamp of the most recent agent run.offload_enabled<see cref="T:System.Boolean"></see>If true, the subscription supports remote agent activation. Remote agent activation has been discontinued. For more information, see Discontinued Functionality in SQL Server 2005 Replication.offload_server<see cref="T:System.Boolean"></see>Name of the server used with remote agent activation.Remote agent activation has been discontinued. For more information, see Discontinued Functionality in SQL Server 2005 Replication.subscriber_type <see cref="T:System.Int32"></see>The data source type at the Subscriber:0 = SQL Server Subscriber.1 = Open Database Connectivity (ODBC) data source.For a merge publication, the <see cref="T:System.Data.DataSet"></see> contains the following columns. ColumnData typeDescriptionsubscriber <see cref="T:System.String"></see>Is the name of the Subscriber.status <see cref="T:System.Int32"></see>Status of agent job for the subscription, which can be one of these values: 1 = Started2 = Succeeded3 = In progress4 = Idle5 = Retrying6 = Failedsubscriber_db <see cref="T:System.String"></see>Is the name of the subscription database.type <see cref="T:System.Int32"></see>Is the subscription type, which can be one of the following values:0 = Push1 = Pull2 = Anonymousagent_name <see cref="T:System.String"></see>Is the name of the Merge Agent job.last_action<see cref="T:System.String"></see>Message text of the last action logged by the agent.action_time<see cref="T:System.String"></see>Date and time of the last action logged by the agent.start_time <see cref="T:System.String"></see>Date and time of last agent execution.duration <see cref="T:System.Int32"></see>Elapsed time of the session, in seconds.delivery_rate <see cref="T:System.Single"></see>Average number of commands delivered per second.download_inserts <see cref="T:System.Int32"></see>The number of inserts applied at the Subscriber.download_updates <see cref="T:System.Int32"></see>The number of updates applied at the Subscriber.download_deletes <see cref="T:System.Int32"></see>The number of deletes applied at the Subscriber.publisher_conflicts <see cref="T:System.Int32"></see>The number of conflicts that occurred while applying changes at the Subscriber.upload_inserts <see cref="T:System.Int32"></see>The number of inserts applied at the Publisher.upload_updates <see cref="T:System.Int32"></see>The number of updates applied at the Publisher.upload_deletes <see cref="T:System.Int32"></see>The number of deletes applied at the Publisher.subscriber_conflicts <see cref="T:System.Int32"></see>The number of conflicts that occurred while applying changes at the Publisher.error_id <see cref="T:System.Int32"></see>The ID of the error in the MSrepl_errors system table. Use the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumErrorRecords(System.Int32)"></see> method to return detailed information about an error.job_id<see cref="T:System.Byte"></see>[16]Identifier of the SQL Server Agent job starting the replication agent.local_job<see cref="T:System.Boolean"></see>When true, the agent job is available at the Distributor. profile_id <see cref="T:System.Int32"></see>Profile identifier.agent_id <see cref="T:System.Int32"></see>Agent job identifier.last_timestamp <see cref="T:System.Byte"></see>[8]Timestamp of the most recent agent run.offload_enabled<see cref="T:System.Boolean"></see>If true, the subscription supports remote agent activation. Remote agent activation has been discontinued. For more information, see Discontinued Functionality in SQL Server 2005 Replication.offload_server<see cref="T:System.Boolean"></see>Name of the server used with remote agent activation.Remote agent activation has been discontinued. For more information, see Discontinued Functionality in SQL Server 2005 Replication.subscriber_type <see cref="T:System.Int32"></see>The data source type at the Subscriber:0 = SQL Server Subscriber1 = Open Database Connectivity (ODBC) data source</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublicationMonitor.EnumSubscriptions2(Microsoft.SqlServer.Replication.SubscriptionResultOption)">
			<summary>Returns additional information on subscriptions that are subscribed to the monitored publication. </summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns.ColumnData typeDescriptionstatus <see cref="T:System.Int32"></see>Maximum status of all replication agents associated with the publication, which can be one of these values: 1 = Started2 = Succeeded3 = In progress4 = Idle5 = Retrying6 = Failedwarning <see cref="T:System.Int32"></see>Maximum threshold warning generated by a subscription belonging to the publication, which can be the logical OR result of one or more of these values.1 = Expiration. A subscription to a transactional publication has exceeded the retention period by more than the allowable threshold, as a percentage of the retention period. 2 = Latency. The time taken to replicate data from a transactional Publisher to the Subscriber exceeds the threshold, in seconds.4 = Mergeexpiration. A subscription to a merge publication has exceeded the retention period by more than the allowable threshold, as a percentage of the retention period. 8 = Mergefastrunduration. The time taken to complete synchronization of a merge subscription exceeds the threshold over a fast network connection, in seconds.16 = Mergeslowrunduration. The time taken to complete synchronization of a merge subscription exceeds the threshold over a slow or dial-up network connection, in seconds.32 = Mergefastrunspeed. The delivery rate for rows during synchronization of a merge subscription has failed to maintain the threshold rate over a fast network connection, in rows per second.64 = Mergeslowrunspeed. The delivery rate for rows during synchronization of a merge subscription has failed to maintain the threshold rate over a slow or dial-up network connection, in rows per second.subscriber <see cref="T:System.String"></see>Is the name of the Subscriber.subscriber_db <see cref="T:System.String"></see>Is the name of the database used for the subscription.publisher_db <see cref="T:System.String"></see>Is the name of the Publisher.publication <see cref="T:System.String"></see>Is the name of a publication.publication_type <see cref="T:System.Int32"></see>Is the type of publication, which can be one of these values:0 = Transactional publication1 = Snapshot publication2 = Merge publicationsubtype <see cref="T:System.Int32"></see>Is the subscription type, which can be one of the following values:0 = Push1 = Pull2 = Anonymouslatency <see cref="T:System.Int32"></see>The highest latency, in seconds, for data changes propagated by the Log Reader Agent or Distribution Agents for a transactional publication. latencythreshold <see cref="T:System.Int32"></see>Is the maximum latency for the transactional publication above which a warning is raised. agentnotrunning <see cref="T:System.Int32"></see>Is the length of time, in hours, during which the agent has not run.agentnotrunningthreshold <see cref="T:System.Int32"></see>Is the length of time, in hours, that the agent has not run before a warning is raised.timetoexpiration <see cref="T:System.Int32"></see>Is the length of time, in hours, before the subscription expires if not synchronized.expirationthreshold <see cref="T:System.Int32"></see>Is the time, in hours, before the subscription expires that a warning is raised.last_distsync <see cref="T:System.DateTime"></see>Is the date/time that the Distribution Agent last ran.distribution_agentname <see cref="T:System.String"></see>Is the name of the Distribution Agent job for the subscription to a transactional publication.mergeagentname <see cref="T:System.String"></see>Is the name of the Merge Agent job for the subscription to a merge publication.mergesubscriptionfriendlyname <see cref="T:System.String"></see>Is the friendly name of the Merge Agent job for the subscription to a merge publication.mergeagentlocation <see cref="T:System.String"></see>Is the name of the server on which the Merge Agent runs.mergeconnectiontype <see cref="T:System.Int32"></see>Connection used when synchronizing a subscription to a merge publication, which can be one of the following values: 1 = Local area network (LAN)2 = Dial-up network connectionmergePerformance <see cref="T:System.Int32"></see>Performance of the last synchronization compared to all synchronizations for the subscription, which is based on the delivery rate of the last synchronization divided by the average of all previous delivery rates. mergerunspeed <see cref="T:System.Single"></see>Is the delivery rate of the last synchronization for the subscription.mergerunduration <see cref="T:System.Int32"></see>Is the length of time to complete the last synchronization of the subscription.monitorranking <see cref="T:System.Int32"></see>Is the ranking value used to order the subscriptions in the result set.For a transactional publication, it can be one of these values:60 = Error56 = Warning: performance critical52 = Warning: expiring soon50 = Warning: subscription uninitialized40 = Retrying failed command 30 = Not running (success)20 = Running (starting, running, or idle)For a merge publication, it can be one of these values:60 = Error 56 = Warning: performance critical54 = Warning: long-running merge52 = Warning: expiring soon50 = Warning: subscription uninitialized 40 = Retrying failed command 30 = Running (starting, running, or idle)20 = Not running (success)distributionagentjobid <see cref="T:System.Byte"></see>[16]ID of the Distribution Agent job for subscriptions to a transactional publication.mergeagentjobid <see cref="T:System.Byte"></see>[16]ID of the Merge Agent job for subscriptions to a transactional publication.distributionagentid <see cref="T:System.Int32"></see>ID of the Distribution Agent job for the subscription.distributionagentprofileid <see cref="T:System.Int32"></see>ID of the agent profile used by the Distribution Agent.mergeagentid <see cref="T:System.Int32"></see>ID of the Merge Agent job for the subscription.mergeagentprofileid <see cref="T:System.Int32"></see>ID of the agent profile used by the Merge Agent.</returns>
			<param name="resultOption">A <see cref="T:Microsoft.SqlServer.Replication.SubscriptionResultOption"></see> value that specifies the type of results to return.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublicationMonitor.EnumTracerTokenHistory(System.Int32)">
			<summary>Returns Subscriber latency information for a single tracer token record inserted into a monitored transactional publication.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptiondistributor_latency<see cref="T:System.Int64"></see>Number of seconds between the tracer token record being committed at the Publisher and being committed at the Distributor.subscriber<see cref="T:System.String"></see>Name of the Subscriber that received the tracer token.subscriber_db<see cref="T:System.String"></see>Name of the subscription database into which the tracer token record was inserted.subscriber_latency<see cref="T:System.Int64"></see>Number of seconds between the tracer token record being committed at the Distributor and being committed at the Subscriber.overall_latency<see cref="T:System.Int64"></see>Number of seconds between the tracer token record being committed at the Publisher and being committed at the Subscriber.</returns>
			<param name="tracerTokenId">An <see cref="T:System.Int32"></see> value that specifies the ID value that uniquely identifies the tracer token.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublicationMonitor.EnumTracerTokens">
			<summary>Returns all tracer tokens that have been inserted into the monitored transactional publication. </summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.TracerToken"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublicationMonitor.TransPendingCommandInfo(System.String,System.String,Microsoft.SqlServer.Replication.SubscriptionOption)">
			<summary>Returns information about pending commands for a subscription. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.PendingCommandInfo"></see> object value that contains the list of pending commands and estimated time to complete delivering them.</returns>
			<param name="subscriptionType">A <see cref="T:Microsoft.SqlServer.Replication.SubscriptionOption"></see> object value that specifies the type of subscription (push or pull).</param>
			<param name="subscriptionDBName">A <see cref="T:System.String"></see> value that specifies the name of the subscription database.</param>
			<param name="subscriberName">A <see cref="T:System.String"></see> value that specifies the name of the Subscriber on which the subscription resides.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationMonitor.Description">
			<summary>Gets the textual description of the publication.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationMonitor.DistributionDBName">
			<summary>Gets the name of the distribution database used by the publication.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationMonitor.ExcludeAnonymousSubscriptions">
			<summary>Gets or sets whether anonymous subscriptions are excluded from or included in the monitor results.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, anonymous subscriptions are excluded from the results. If false, anonymous subscriptions are included in the results.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationMonitor.Name">
			<summary>Gets or sets the name of the monitored publication.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationMonitor.PublicationDBName">
			<summary>Gets or sets the name of the publication database.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationMonitor.PublisherName">
			<summary>Gets or sets the name of the Publisher.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationMonitor.Status">
			<summary>Gets the status of the publication. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ReplicationStatus"></see> object. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationMonitor.StatusAndWarning">
			<summary>Gets the status and warnings of the referenced publication on the Distributor, including all of the agents associated for the publication.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ReplicationStatusAndWarning"></see> object value that specifies the status and warnings of the publication and associated agents on the Distributor.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationMonitor.Type">
			<summary>Gets the type of replication in which the publication participates. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.PublicationType"></see> value. </returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.PublicationMonitorCollection">
			<summary>A collection of <see cref="T:Microsoft.SqlServer.Replication.PublicationMonitor"></see> objects that represents publications at the Distributor. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublicationMonitorCollection.CopyTo(Microsoft.SqlServer.Replication.PublicationMonitorCollection,System.Int32)">
			<summary>Makes a copy of the collection.</summary>
			<param name="replicationCollection">A <see cref="T:Microsoft.SqlServer.Replication.PublicationMonitorCollection"></see> object that is to receive the copy of the original collection.</param>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the index position within the original collection to start copying.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationMonitorCollection.Item(System.Int32)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.PublicationMonitor"></see> object in the collection by index number.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.PublicationMonitor"></see> object value that represents the publication monitor.</returns>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the index of the <see cref="T:Microsoft.SqlServer.Replication.PublicationMonitor"></see> object in the collection.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublicationMonitorCollection.Item(System.String,System.String)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.PublicationMonitor"></see> object in the collection by publication database and publication name.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.PublicationMonitor"></see> object. </returns>
			<param name="publicationDBName">A <see cref="T:System.String"></see> value that specifies the publication database.</param>
			<param name="publicationName">A <see cref="T:System.String"></see> value that specifies the name of the publication.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.PublicationType">
			<summary>Enumerates the supported types of replication used to publish a database.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationType.Merge">
			<summary>Publication uses merge replication.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationType.Snapshot">
			<summary>Publication uses snapshot replication</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.PublicationType.Transactional">
			<summary>Publication uses transactional replication.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.PublisherConnectionSecurityContext">
			<summary>Represents the login used when connecting to the instance of Microsoft SQL Server that is configured as a Publisher in a replication topology. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublisherConnectionSecurityContext.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.PublisherConnectionSecurityContext"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublisherConnectionSecurityContext.Update">
			<summary>Updates Publisher login information for the objected associated with this <see cref="T:Microsoft.SqlServer.Replication.PublisherConnectionSecurityContext"></see> object instance. </summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublisherConnectionSecurityContext.SecureSqlStandardPassword">
			<summary>Sets the password (as a <see cref="T:System.Security.SecureString"></see> object) for the <see cref="P:Microsoft.SqlServer.Replication.PublisherConnectionSecurityContext.SqlStandardLogin"></see> when using SQL Server Authentication.</summary>
			<returns>A <see cref="T:System.Security.SecureString"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublisherConnectionSecurityContext.SecurityMode">
			<summary>Get or sets the type of login used when connecting to the Publisher.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ReplicationSecurityMode"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublisherConnectionSecurityContext.SqlStandardLogin">
			<summary>Gets or sets the login when using SQL Server Authentication.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublisherConnectionSecurityContext.SqlStandardPassword">
			<summary>Gets or sets the password for the <see cref="P:Microsoft.SqlServer.Replication.PublisherConnectionSecurityContext.SqlStandardLogin"></see> when using SQL Server Authentication.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.PublisherMonitor">
			<summary>Monitors a replication Publisher.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublisherMonitor.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.PublisherMonitor"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublisherMonitor.#ctor(System.String,Microsoft.SqlServer.Management.Common.ServerConnection)">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.PublisherMonitor"></see> class with the specified name and a connection to the Distributor.</summary>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object that specifies the connection context used to establish a connection to the Distributor.</param>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of the publication monitor.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumDatabasePublications(System.String)">
			<summary>Returns information about publications that use a specified publication database.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that has the following columns.Column nameData typeDescriptionpublisher_dbsysnameIs the name of the Publisher.publicationsysnameIs the name of a publication.publication_typeintIs the type of publication, which can be one of these values.0 = Transactional publication1 = Snapshot publication2 = Merge publicationstatusintMaximum status of all replication agents associated with the publication, which can be one of these values. 1 = Started2 = Succeeded3 = In progress4 = Idle5 = Retrying6 = FailedwarningintMaximum threshold warning generated by a subscription belonging to the publication, which can be the logical OR result of one or more of these values.1 = expiration – a subscription to a transactional publication has not been synchronized within the retention period threshold. 2 = latency - the time taken to replicate data from a transactional Publisher to the Subscriber exceeds the threshold, in seconds.4 = mergeexpiration - a subscription to a merge publication has not been synchronized within the retention period threshold. 8 = mergefastrunduration - the time taken to complete synchronization of a merge subscription exceeds the threshold, in seconds, over a fast network connection.16 = mergeslowrunduration - the time taken to complete synchronization of a merge subscription exceeds the threshold, in seconds, over a slow or dial-up network connection.32 = mergefastrunspeed – the delivery rate for rows during synchronization of a merge subscription has failed to maintain the threshold rate, in rows per second, over a fast network connection.64 = mergeslowrunspeed – the delivery rate for rows during synchronization of a merge subscription has failed to maintain the threshold rate, in rows per second, over a slow or dial-up network connection.worst_latencyintThe highest latency, in seconds, for data changes propagated by the Log Reader or Distribution Agents for a transactional publication. best_latencyintThe lowest latency, in seconds, for data changes propagated by the Log Reader or Distribution Agents for a transactional publication. average_latencyintThe average latency, in seconds, for data changes propagated by the Log Reader or Distribution Agents for a transactional publication. last_distsyncdatetimeIs the last date and time that the Distribution Agent ran.retentionintIs the retention period for the publication.latencythresholdintIs the latency threshold set for the transactional publication.expirationthresholdintIs the expiration threshold set for the publication if it is a merge publication.agentnotrunningthresholdintIs the threshold set for the longest time for an agent not to have run.subscriptioncountintIs the number of subscriptions to a publication.runningdistagentcountintIs the number of distribution agents running for the publication.snapshot_agentnamesysnameName of the Snapshot Agent job for the publication.logreader_agentnamesysnameName of the Log Reader Agent job for the transactional publication.qreader_agentnamesysnameName of the Queue Reader Agent job for a transactional publication that supports queued updating.worst_runspeedPerfintIs the longest synchronization time for the merge publication.best_runspeedPerfintIs the shortest synchronization time for the merge publication.average_runspeedPerfintIs the average synchronization time for the merge publication.retention_period_unitintIs the unit used to express retention.</returns>
			<param name="strPublicationDatabase">The name of the publication database.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumDatabaseSubscriptions(System.String,Microsoft.SqlServer.Replication.PublicationType,Microsoft.SqlServer.Replication.SubscriptionResultOption)">
			<summary>Returns information on subscriptions that belong to publications that use a specified publication database.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that has the following columns.Column nameData typeDescriptionstatusintMaximum status of all replication agents associated with the publication, which can be one of these values: 1 = Started2 = Succeeded3 = In progress4 = Idle5 = Retrying6 = FailedwarningintMaximum threshold warning generated by a subscription belonging to the publication, which can be the logical OR result of one or more of these values.1 = expiration – a subscription to a transactional publication has not been synchronized within the retention period threshold. 2 = latency - the time taken to replicate data from a transactional Publisher to the Subscriber exceeds the threshold, in seconds.4 = mergeexpiration - a subscription to a merge publication has not been synchronized within the retention period threshold. 8 = mergefastrunduration - the time taken to complete synchronization of a merge subscription exceeds the threshold, in seconds, over a fast network connection.16 = mergeslowrunduration - the time taken to complete synchronization of a merge subscription exceeds the threshold, in seconds, over a slow or dial-up network connection.32 = mergefastrunspeed – the delivery rate for rows during synchronization of a merge subscription has failed to maintain the threshold rate, in rows per second, over a fast network connection.64 = mergeslowrunspeed – the delivery rate for rows during synchronization of a merge subscription has failed to maintain the threshold rate, in rows per second, over a slow or dial-up network connection.subscribersysnameIs the name of the Subscriber.subscriber_dbsysnameIs the name of the database used for the subscription.publisher_dbsysnameIs the name of the publication database.publicationsysnameIs the name of a publication.publication_typeintIs the type of publication, which can be one of these values:0 = Transactional publication1 = Snapshot publication2 = Merge publicationsubtypeintIs the subscription type, which can be one of the following values:0 = Push1 = Pull2 = AnonymouslatencyintThe highest latency, in seconds, for data changes propagated by the Log Reader or Distribution Agents for a transactional publication. latencythresholdintIs the maximum latency for the transactional publication above which a warning is raised. agentnotrunningintIs the length of time, in hours, during which the agent has not run.agentnotrunningthresholdintIs the length of time, in hours, that the agent has not run before a warning is raised.timetoexpiration intIs the length of time, in hours, before the subscription expires if not synchronized.expirationthresholdintIs the time, in hours, before the subscription expires that a warning is raised.last_distsyncdatetimeIs the date and time that the Distribution Agent last ran.distribution_agentnamesysnameIs the name of the Distribution Agent job for the subscription to a transactional publication.mergeagentnamesysnameIs the name of the Merge Agent job for the subscription to a merge publication.mergesubscriptionfriendlynamesysnameIs the friendly name given to the subscription.mergeagentlocationsysnameIs the name of the server on which the Merge Agent runs.mergeconnectiontypeintConnection used when synchronizing a subscription to a merge publication, which can be one of the following values: 1 = local area network (LAN)2 = dial-up network connection3 = Web synchronization.mergePerformanceintPerformance of the last synchronization compared to all synchronizations for the subscription. This is based on the delivery rate of the last synchronization divided by the average of all previous delivery rates. mergerunspeedfloatIs the delivery rate of the last synchronization for the subscription.mergerundurationintIs the length of time to complete the last synchronization of the subscription.monitorrankingintIs the ranking value used to order the subscriptions in the result set, and can be one of these values.For a transactional publication:60 = Error56 = Warning: performance critical52 = Warning: expiring soon50 = Warning: subscription uninitialized40 = Retrying failed command 30 = Not running (success)20 = Running (starting, running, or idle)For a merge publication:60 = Error 56 = Warning: performance critical54 = Warning: long-running merge52 = Warning: expiring soon50 = Warning: subscription uninitialized 40 = Retrying failed command 30 = Running (starting, running, or idle)20 = Not running (success)distributionagentjobidbinary(16)ID of the Distribution Agent job for subscriptions to a transactional publication.mergeagentjobidbinary(16)ID of the Merge Agent job for subscriptions to a merge publication.distributionagentidintID of the Distribution Agent job for the subscription.distributionagentprofileidintID of the agent profile used by the Distribution Agent.mergeagentidintID of the Merge Agent job for the subscription.mergeagentprofileidintID of the agent profile used by the Merge Agent.</returns>
			<param name="strPublicationDatabase">Name of the publication database.</param>
			<param name="publicationType">Type of publication.</param>
			<param name="resultOption">A <see cref="T:Microsoft.SqlServer.Replication.SubscriptionResultOption"></see> value that specifies the result options.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumDistributionAgentSessionDetails(System.String,System.String)">
			<summary>Returns detailed information about a Distribution Agent session.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptionrunstatus <see cref="T:System.Int32"></see>The running status:1 = Start 2 = Succeed 3 = In progress 4 = Idle 5 = Retry 6 = Failtime <see cref="T:System.DateTime"></see>Time of logging for session detail.comments <see cref="T:System.String"></see>Descriptive text.duration <see cref="T:System.Int32"></see>Elapsed time of the logged session activity, in seconds.delivery_rate <see cref="T:System.Single"></see>Average number of commands delivered per second.delivery_latency <see cref="T:System.Int32"></see>Latency, in milliseconds, between the transaction entering the distribution database and being applied to the Subscriber.(No column name)Not applicableInternal use only.delivered_transactions<see cref="T:System.Int32"></see>Total number of transactions delivered in the session.delivered_commands<see cref="T:System.Int32"></see>Total number of commands delivered in the session.average_commands <see cref="T:System.Int32"></see>Average number of commands per transaction delivered in the session.error_id <see cref="T:System.Int32"></see>The ID of the error in the MSrepl_errors system table. Use the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumErrorRecords(System.Int32)"></see> method to return detailed information about an error.</returns>
			<param name="sessionId">A <see cref="T:System.String"></see> value that represents the data and time of the session for which details are returned. This value can be obtained from the time column returned by the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumDistributionAgentSessions(System.String,System.Int32,System.Boolean)"></see> method.</param>
			<param name="agentName">A <see cref="T:System.String"></see> value that specifies the name of the Distribution Agent.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumDistributionAgentSessions(System.String,System.Int32,System.Boolean)">
			<summary>Returns information about Distribution Agent sessions. </summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptionrunstatus <see cref="T:System.Int32"></see>The running status:1 = Start 2 = Succeed 3 = In progress 4 = Idle 5 = Retry 6 = Failstart_time <see cref="T:System.String"></see>Date and time of last agent execution.time <see cref="T:System.String"></see>Date and time that the session was logged.comments <see cref="T:System.String"></see>Message text logged by the agent.duration <see cref="T:System.Int32"></see>Elapsed time of the session, in seconds.delivery_rate <see cref="T:System.Single"></see>Average number of commands delivered per second.delivery_latency <see cref="T:System.Int32"></see>Latency, in milliseconds, between the transaction entering the distribution database and being applied to the Subscriber.(No column name)Not applicableInternal use only.delivered_transactions<see cref="T:System.Int32"></see>Total number of transactions delivered in the session.delivered_commands <see cref="T:System.Int32"></see>Total number of commands delivered in the session.average_commands <see cref="T:System.Int32"></see>Average number of commands per transaction delivered in the session.action_count <see cref="T:System.Int32"></see>Number of agent log messages recorded in the session.error_id <see cref="T:System.Int32"></see>The ID of the error in the MSrepl_errors system table. Use the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumErrorRecords(System.Int32)"></see> method to return detailed information about an error.</returns>
			<param name="agentName">A <see cref="T:System.String"></see> value that specifies the name of the Distribution Agent job. You can use the <see cref="P:Microsoft.SqlServer.Replication.Subscription.SynchronizationAgentName"></see> property of the <see cref="T:Microsoft.SqlServer.Replication.TransSubscription"></see> object to obtain this value. </param>
			<param name="sessionDuration">An <see cref="T:System.Int32"></see> value that specifies the number of hours before the current time to which to limit the results. For example, a value of 24 will return information about Distribution Agent sessions over the last 24 hours. A value of -1 returns information on the last 100 sessions, and a value of 0 returns information on all sessions.</param>
			<param name="returnOnlyErrorSessions">A <see cref="T:System.Boolean"></see> value that specifies whether to return information only on sessions that resulted in an error or on all sessions. If true, only error sessions are returned. If false, all sessions are returned.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumErrorRecords(System.Int32)">
			<summary>Returns information on errors associated with a specified error ID that occurred during a synchronization session.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptionsource_type_id <see cref="T:System.Int32"></see>Identifies the source of the error.source_name <see cref="T:System.String"></see>The name of the error source.error_code <see cref="T:System.String"></see>The error code.error_text <see cref="T:System.String"></see>The message text for the error.(No column name)<see cref="T:System.String"></see>Date and time that the error occurred.error_type_id<see cref="T:System.Int32"></see>Type of error that occurred.has_xact_seqno<see cref="T:System.Boolean"></see>If the error has a corresponding transaction log sequence number. xact_seqno<see cref="T:System.Byte"></see>[]The starting transaction log sequence number of the failed execution batch. command_id<see cref="T:System.Int32"></see>The command ID of the first command in the failed execution batch.</returns>
			<param name="errorId">An <see cref="T:System.Int32"></see> value that specifies the ID value that uniquely identifies the error. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumLogReaderAgentSessionDetails(System.String,System.String)">
			<summary>Returns detailed information about a Log Reader Agent session. </summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptionrunstatus <see cref="T:System.Int32"></see>The running status:1 = Start 2 = Succeed 3 = In progress 4 = Idle 5 = Retry 6 = Failtime <see cref="T:System.String"></see>Time of logging for session detail.comments <see cref="T:System.String"></see>Descriptive text.duration <see cref="T:System.Int32"></see>Elapsed time of the logged session activity, in seconds.delivery_rate <see cref="T:System.Single"></see>Average number of commands delivered per second.delivery_latency <see cref="T:System.Int32"></see>The time, in milliseconds, between a command being committed to the published database and being committed to the distribution database. delivery_time<see cref="T:System.Int32"></see>Time the first transaction is delivered.delivered_transactions<see cref="T:System.Int32"></see>Total number of transactions delivered in the session.delivered_commands<see cref="T:System.Int32"></see>Total number of commands delivered in the session.average_commands <see cref="T:System.Int32"></see>Average number of commands per transaction delivered in the session.error_id <see cref="T:System.Int32"></see>The ID of the error in the MSrepl_errors system table. Use the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumErrorRecords(System.Int32)"></see> method to return detailed information about an error.</returns>
			<param name="sessionId">A <see cref="T:System.String"></see> value that represents the data and time of the session for which details are returned. This value can be obtained from the time column returned by the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumLogReaderAgentSessions(System.String,System.Int32,System.Boolean)"></see> method.</param>
			<param name="agentName">A <see cref="T:System.String"></see> value that specifies the name of the Log Reader Agent. You can obtain this value from the <see cref="P:Microsoft.SqlServer.Replication.ReplicationDatabase.LogReaderAgentName"></see> property of the published database.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumLogReaderAgentSessions(System.String,System.Int32,System.Boolean)">
			<summary>Returns information about Log Reader Agent sessions. </summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptionrunstatus <see cref="T:System.Int32"></see>The running status:1 = Start 2 = Succeed 3 = In progress 4 = Idle 5 = Retry 6 = Failstart_time <see cref="T:System.String"></see>Date and time of last agent execution.time <see cref="T:System.String"></see>Date and time that the session was logged.comments <see cref="T:System.String"></see>Message text logged by the agent.duration <see cref="T:System.Int32"></see>Elapsed time of the session, in seconds.delivery_rate <see cref="T:System.Single"></see>Average number of commands delivered per second.delivery_latency <see cref="T:System.Int32"></see>The time, in milliseconds, between a command being committed to the published database and being committed to the distribution database. delivery_time<see cref="T:System.Int32"></see>The time first transaction is delivered.delivered_transactions<see cref="T:System.Int32"></see>Total number of transactions delivered in the session.delivered_commands <see cref="T:System.Int32"></see>Total number of commands delivered in the session.average_commands <see cref="T:System.Int32"></see>Average number of commands per transaction delivered in the session.action_count <see cref="T:System.Int32"></see>Number of agent log messages recorded in the session.error_id <see cref="T:System.Int32"></see>The ID of the error in the MSrepl_errors system table. Use the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumErrorRecords(System.Int32)"></see> method to return detailed information about an error.</returns>
			<param name="agentName">A <see cref="T:System.String"></see> value that specifies the name of the Log Reader Agent. You can obtain this value from the <see cref="P:Microsoft.SqlServer.Replication.ReplicationDatabase.LogReaderAgentName"></see> property of the published database.</param>
			<param name="sessionDuration">An <see cref="T:System.Int32"></see> value that specifies the number of hours before the current time to which to limit the results. For example, a value of 24 will return information about agent sessions over the last 24 hours. A value of -1 returns information on the last 100 sessions, and a value of 0 returns information on all sessions.</param>
			<param name="returnOnlyErrorSessions">A <see cref="T:System.Boolean"></see> value that specifies whether to returns information only on sessions that resulted in an error or on all sessions. If true, only error sessions are returned. If false, all sessions are returned.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumMergeAgentSessionDetails(System.String,System.String)">
			<summary>Returns detailed information about a Merge Agent session.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptionrunstatus <see cref="T:System.Int32"></see>The running status:1 = Start 2 = Succeed 3 = In progress 4 = Idle 5 = Retry 6 = Failtime <see cref="T:System.DateTime"></see>Time that the session completed.comments <see cref="T:System.String"></see>Descriptive text.duration <see cref="T:System.Int32"></see>Elapsed time of the logged session activity, in seconds.delivery_rate <see cref="T:System.Single"></see>Average number of rows delivered per second.download_inserts <see cref="T:System.Int32"></see>The number of inserts applied at the Subscriber.download_updates <see cref="T:System.Int32"></see>The number of updates applied at the Subscriber.download_deletes <see cref="T:System.Int32"></see>The number of deletes applied at the Subscriber.download_conflicts <see cref="T:System.Int32"></see>The number of conflicts that occurred while applying changes at the Subscriber.upload_inserts <see cref="T:System.Int32"></see>The number of inserts applied at the Publisher.upload_updates <see cref="T:System.Int32"></see>The number of updates applied at the Publisher.upload_deletes <see cref="T:System.Int32"></see>The number of deletes applied at the Publisher.upload_conflicts <see cref="T:System.Int32"></see>The number of conflicts that occurred while applying changes at the Publisher.error_id <see cref="T:System.Int32"></see>The ID of the error in the MSrepl_errors system table. Use the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumErrorRecords(System.Int32)"></see> method to return detailed information about an error.</returns>
			<param name="sessionId">A <see cref="T:System.String"></see> value that represents the data and time of the session for which details are returned. This value can be obtained from the time column returned by the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumMergeAgentSessions(System.String,System.Int32,System.Boolean)"></see> method.</param>
			<param name="agentName">A <see cref="T:System.String"></see> value that specifies the name of the Merge Agent. You can obtain this value from the <see cref="P:Microsoft.SqlServer.Replication.Subscription.SynchronizationAgentName"></see> property of the merge subscription. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumMergeAgentSessionDetails2(System.Int32)">
			<summary>Returns additional detailed information about a Merge Agent session. </summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptionPhaseID <see cref="T:System.Int32"></see>Is the phase of the synchronization session, which can be one of the following:0 = Initialization or summary row1 = Upload2 = DownloadArticleName <see cref="T:System.String"></see>Is the name of the article being synchronized. ArticleName also contains summary information for rows in the result set that do not represent article details. PercentComplete <see cref="T:System.Decimal"></see>Indicates the percentage of the total changes applied in a given article detail row for currently running or failed sessions. RelativeCost <see cref="T:System.Decimal"></see>Indicates the percentage of the total changes applied in a given article detail row for currently running or failed sessions.Duration <see cref="T:System.Int32"></see>Length of the agent session. Inserts <see cref="T:System.Int32"></see>Number of inserts in a session.Updates <see cref="T:System.Int32"></see>Number of updates in a session.Deletes <see cref="T:System.Int32"></see>Number of deletes in a session.Conflicts <see cref="T:System.Int32"></see>Number of conflicts that occurred in a session.ErrorID <see cref="T:System.Int32"></see>ID of a session error.SeqNo <see cref="T:System.Int32"></see>Order of sessions in the result set.RowType <see cref="T:System.Int32"></see>Indicates what type of information each row in the result set represents.0 = Initialization1 = Upload summary2 = Article upload detail3 = Download summary4 = Article download detailSchemaChanges <see cref="T:System.Int32"></see>Number of schema changes in a session.</returns>
			<param name="sessionId">An <see cref="T:System.Int32"></see> value that represents ID of the session for which details are returned. This value can be obtained from the Session_id column returned by the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumMergeAgentSessions2(System.String,System.Int32,System.Boolean)"></see> method.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumMergeAgentSessions(System.String,System.Int32,System.Boolean)">
			<summary>Returns information about Merge Agent sessions. </summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptionrunstatus <see cref="T:System.Int32"></see>The running status:1 = Start 2 = Succeed 3 = In progress 4 = Idle 5 = Retry 6 = Failstart_time <see cref="T:System.String"></see>Date and time of the last agent execution.time <see cref="T:System.String"></see>Date and time that the session was completed.comments <see cref="T:System.String"></see>Message text logged by the agent.duration <see cref="T:System.Int32"></see>Elapsed time of the session, in seconds.delivery_rate <see cref="T:System.Single"></see>Average number of commands delivered per second.download_inserts <see cref="T:System.Int32"></see>The number of inserts applied at the Subscriber.download_updates <see cref="T:System.Int32"></see>The number of updates applied at the Subscriber.download_deletes <see cref="T:System.Int32"></see>The number of deletes applied at the Subscriber.download_conflicts <see cref="T:System.Int32"></see>The number of conflicts that occurred while applying changes at the Subscriber.upload_inserts <see cref="T:System.Int32"></see>The number of inserts applied at the Publisher.upload_updates <see cref="T:System.Int32"></see>The number of updates applied at the Publisher.upload_deletes <see cref="T:System.Int32"></see>The number of deletes applied at the Publisher.upload_conflicts <see cref="T:System.Int32"></see>The number of conflicts that occurred while applying changes at the Publisher.action_count <see cref="T:System.Int32"></see>Number of agent log messages recorded in the session.error_id <see cref="T:System.Int32"></see>The ID of the error in the MSrepl_errors system table. Use the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumErrorRecords(System.Int32)"></see> method to return detailed information about an error.</returns>
			<param name="agentName">A <see cref="T:System.String"></see> value that specifies the name of the Merge Agent job. You can use the <see cref="P:Microsoft.SqlServer.Replication.Subscription.SynchronizationAgentName"></see> property of the <see cref="T:Microsoft.SqlServer.Replication.MergeSubscription"></see> object to obtain this value. </param>
			<param name="sessionDuration">An <see cref="T:System.Int32"></see> value that specifies the number of hours before the current time to which to limit the results. For example, a value of 24 will return information about agent sessions over the last 24 hours. A value of -1 returns information on the last 100 sessions, and a value of 0 returns information on all sessions.</param>
			<param name="returnOnlyErrorSessions">A <see cref="T:System.Boolean"></see> value that specifies whether to returns information only on sessions that resulted in an error or on all sessions. If true, only error sessions are returned. If false, all sessions are returned.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumMergeAgentSessions2(System.String,System.Int32,System.Boolean)">
			<summary>Returns additional information about Merge Agent sessions. </summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptionSession_id <see cref="T:System.Int32"></see>ID of the agent job session.Status <see cref="T:System.Int32"></see>Agent run status:1 = Start2 = Succeed3 = In progress4 = Idle5 = Retry6 = FailStartTime <see cref="T:System.DateTime"></see>Time the agent job session began.EndTime <see cref="T:System.DateTime"></see>Time the agent job session was completed.Duration <see cref="T:System.Int32"></see>Cumulative duration, in seconds, of the agent job session.UploadedCommands <see cref="T:System.Int32"></see>Number of commands uploaded during the agent job session.DownloadedCommands <see cref="T:System.Int32"></see>Number of commands downloaded during the agent job session.ErrorMessages <see cref="T:System.Int32"></see>Number of error messages that were generated during the agent job session.ErrorID <see cref="T:System.Int32"></see>ID of the error that occurredPercentageDone <see cref="T:System.Decimal"></see>Estimated percentage of the total changes that have already been delivered in an active session.TimeRemaining <see cref="T:System.Int32"></see>Estimated number of seconds left in an active session.CurrentPhase <see cref="T:System.Int32"></see>Is the current phase of an active session, which can be one of the following:1 = Upload2 = DownloadLastMessage <see cref="T:System.String"></see>Is the last message logged by Merge Agent during the session.</returns>
			<param name="agentName">A <see cref="T:System.String"></see> value that specifies the name of the Merge Agent job. You can use the <see cref="P:Microsoft.SqlServer.Replication.Subscription.SynchronizationAgentName"></see> property of the <see cref="T:Microsoft.SqlServer.Replication.MergeSubscription"></see> object to obtain this value. </param>
			<param name="sessionDuration">An <see cref="T:System.Int32"></see> value that specifies the number of hours before the current time to which to limit the results. For example, a value of 24 will return information about agent sessions over the last 24 hours. A value of -1 returns information on the last 100 sessions, and a value of 0 returns information on all sessions.</param>
			<param name="returnOnlyErrorSessions">A <see cref="T:System.Boolean"></see> value that specifies whether to returns information only on sessions that resulted in an error or on all sessions. If true, only error sessions are returned. If false, all sessions are returned.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumPublications">
			<summary>Returns information on publications at a monitored Publisher.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptionpublisher_db <see cref="T:System.String"></see>Database name.publication <see cref="T:System.String"></see>Publication name.publication_id <see cref="T:System.Int32"></see>ID of the publication. publication_type <see cref="T:System.Int32"></see>Type of publication:0 = Transactional.1 = Snapshot.2 = Merge.independent_agent <see cref="T:System.Boolean"></see>Indicates if each subscription to this publication uses its own synchronization agent instance. immediate_sync <see cref="T:System.Boolean"></see>Indicates whether synchronization files are created or re-created each time the Snapshot Agent runs.allow_push <see cref="T:System.Boolean"></see>Indicates whether or not push subscriptions can be created for the given publication.allow_pull <see cref="T:System.Boolean"></see>Indicates whether or not pull subscriptions can be created for the given publication.allow_anonymous <see cref="T:System.Boolean"></see>Indicates whether or not anonymous subscriptions can be created for the given publication.snapshot_agent<see cref="T:System.String"></see>The name of the Snapshot Agent job for the publication.logreader_agent<see cref="T:System.String"></see>The name of the Log Reader Agent job for the published database.description <see cref="T:System.String"></see>Description of the publication. vendor_name <see cref="T:System.String"></see>The name of the vendor if Publisher is not an instance of SQL Server.queuereader agent<see cref="T:System.String"></see>The name of the Queue Reader Agent job for the published database.thirdparty_options<see cref="T:System.Int32"></see>Specifies if the display of a publication in the Replication folder in SQL Server Management Studio is suppressed:0 = Display a heterogeneous publication in the Replication folder in SQL Server Management Studio.1 = Suppress the display a heterogeneous publication in the Replication folder in SQL Server Management Studio.snapshot_jobid<see cref="T:System.String"></see>Unique identifier of the Snapshot Agent job. num_subscriptions<see cref="T:System.Int32"></see>Number of subscriptions that currently belong to the publication.num_now_syncing<see cref="T:System.Int32"></see>Number of subscriptions currently being synchronized with the publication.num_errors<see cref="T:System.Int32"></see>Number of errors that have occurred when synchronizing with the publication.num_warning<see cref="T:System.Int32"></see>Number of publication monitor threshold warnings that have been generated by this publication.merge_RunFastDurationThreshold<see cref="T:System.Int32"></see>Threshold for monitoring the duration of merge synchronizations over high-bandwidth local area network (LAN) connections.WorstWarningDuration<see cref="T:System.Int32"></see>The highest duration of a synchronization run that has generated a warning. merge_SyncExpireTimeThreshold<see cref="T:System.Int32"></see>Threshold for monitoring for imminent expiration of subscriptions to merge publications.retention<see cref="T:System.Int32"></see>The retention period of the publication, in hours.WorstWarningExpiration<see cref="T:System.Int32"></see>The longest expiration of a merge subscription that has generated a warning. </returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumPublications2">
			<summary>Returns additional information on publications at a monitored Publisher.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptionpublisher_db <see cref="T:System.String"></see>Is the name of the Publisher.publication <see cref="T:System.String"></see>Is the name of a publication.publication_type <see cref="T:System.Int32"></see>Is the type of publication, which can be one of the following values:0 = Transactional publication1 = Snapshot publication2 = Merge publicationstatus <see cref="T:System.Int32"></see>Maximum status of all Replication Agents associated with the publication, which can be one of the following values: 1 = Started2 = Succeeded3 = In progress4 = Idle5 = Retrying6 = Failedwarning <see cref="T:System.Int32"></see>Maximum threshold warning generated by a subscription belonging to the publication, which can be the logical OR result of one or more of the following values:1 = Expiration. A subscription to a transactional publication has exceeded the retention period by more than the allowable threshold, as a percentage of the retention period. 2 = Latency. The time taken to replicate data from a transactional Publisher to the Subscriber exceeds the threshold, in seconds.4 = Mergeexpiration. A subscription to a merge publication has exceeded the retention period by more than the allowable threshold, as a percentage of the retention period. 8 = Mergefastrunduration. The time taken to complete synchronization of a merge subscription exceeds the threshold over a fast network connection, in seconds.16 = Mergeslowrunduration. The time taken to complete synchronization of a merge subscription exceeds the threshold over a slow or dial-up network connection, in seconds.32 = Mergefastrunspeed. The delivery rate for rows during synchronization of a merge subscription has failed to maintain the threshold rate over a fast network connection, in rows per second.64 = Mergeslowrunspeed. The delivery rate for rows during synchronization of a merge subscription has failed to maintain the threshold rate over a slow or dial-up network connection, in rows per second.worst_latency <see cref="T:System.Int32"></see>The highest latency, in seconds, for data changes propagated by the Log Reader or Distribution Agents for a transactional publication. best_latency <see cref="T:System.Int32"></see>The lowest latency, in seconds, for data changes propagated by the Log Reader or Distribution Agents for a transactional publication. average_latency <see cref="T:System.Int32"></see>The average latency, in seconds, for data changes propagated by the Log Reader or Distribution Agents for a transactional publication. last_distsync <see cref="T:System.DateTime"></see>Is the last date/time that the Distribution Agent ran.retention <see cref="T:System.Int32"></see>Is the retention period for the publication.latencythreshold <see cref="T:System.Int32"></see>Is the latency threshold set for the transactional publication.expirationthreshold <see cref="T:System.Int32"></see>Is the expiration threshold set for the publication if it is a merge publication.agentnotrunningthreshold <see cref="T:System.Int32"></see>Is the threshold set for the longest time for an agent not to have run.subscriptioncount <see cref="T:System.Int32"></see>Is the number of subscriptions to a publication.runningdistagentcount <see cref="T:System.Int32"></see>Is the number of Distribution Agents running for the publicationsnapshot_agentname <see cref="T:System.String"></see>Name of the Snapshot Agent job for the publication.logreader_agentname <see cref="T:System.String"></see>Name of the Log Reader Agent job for the transactional publication.qreader_agentname <see cref="T:System.String"></see>Name of the Queue Reader Agent job for an immediate updating transactional publication.worst_runspeedPerf <see cref="T:System.Int32"></see>Is the longest synchronization time for the merge publication.best_runspeedPerf <see cref="T:System.Int32"></see>Is the shortest synchronization time for the merge publication.average_runspeedPerf <see cref="T:System.Int32"></see>Is the average synchronization time for the merge publication.retention_period_unit <see cref="T:System.Int32"></see>Is the unit used to express retention.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumSnapshotAgentSessionDetails(System.String,System.String)">
			<summary>Returns detailed information about a Snapshot Agent session. </summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptionrunstatus <see cref="T:System.Int32"></see>The running status:1 = Start 2 = Succeed 3 = In progress 4 = Idle 5 = Retry 6 = Failtime <see cref="T:System.String"></see>Time of logging for session detail.comments <see cref="T:System.String"></see>Descriptive text.duration <see cref="T:System.Int32"></see>Elapsed time of the logged session activity, in seconds.delivery_rate <see cref="T:System.Single"></see>Average number of commands delivered per second.delivered_commands<see cref="T:System.Int32"></see>Total number of commands delivered in the session.name <see cref="T:System.String"></see>Name of the Snapshot Agent job.error_id <see cref="T:System.Int32"></see>The ID of the error in the MSrepl_errors system table. Use the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumErrorRecords(System.Int32)"></see> method to return detailed information about an error.</returns>
			<param name="sessionId">A <see cref="T:System.String"></see> value that represents the data and time of the session for which details are returned. This value can be obtained from the time column returned by the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumLogReaderAgentSessions(System.String,System.Int32,System.Boolean)"></see> method.</param>
			<param name="agentName">A <see cref="T:System.String"></see> value that specifies the name of the Log Reader Agent. You can obtain this value from the <see cref="P:Microsoft.SqlServer.Replication.ReplicationDatabase.LogReaderAgentName"></see> property of the published database.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumSnapshotAgentSessions(System.String,System.Int32,System.Boolean)">
			<summary>Returns information about Snapshot Agent sessions. </summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptionrunstatus <see cref="T:System.Int32"></see>The running status:1 = Start 2 = Succeed 3 = In progress 4 = Idle 5 = Retry 6 = Failstart_time <see cref="T:System.String"></see>Date and time of the last agent execution.time <see cref="T:System.String"></see>Date and time that the session was logged.comments <see cref="T:System.String"></see>Message text logged by the agent.duration <see cref="T:System.Int32"></see>Elapsed time of the session, in seconds.delivery_rate <see cref="T:System.Single"></see>Average number of commands delivered per second.delivered_commands <see cref="T:System.Int32"></see>Total number of commands delivered in the session.action_count <see cref="T:System.Int32"></see>Number of agent log messages recorded in the session.error_id <see cref="T:System.Int32"></see>The ID of the error in the MSrepl_errors system table. Use the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumErrorRecords(System.Int32)"></see> method to return detailed information about an error.</returns>
			<param name="agentName">A <see cref="T:System.String"></see> value that specifies the name of the Log Reader Agent. You can obtain this value from the <see cref="P:Microsoft.SqlServer.Replication.ReplicationDatabase.LogReaderAgentName"></see> property of the published database.</param>
			<param name="sessionDuration">An <see cref="T:System.Int32"></see> value that specifies the number of hours before the current time to which to limit the results. For example, a value of 24 will return information about agent sessions over the last 24 hours. A value of -1 returns information on the last 100 sessions, and a value of 0 returns information on all sessions.</param>
			<param name="returnOnlyErrorSessions">A <see cref="T:System.Boolean"></see> value that specifies whether to return information only on sessions that resulted in an error or on all sessions. If true, only error sessions are returned. If false, all sessions are returned.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumSubscriptions(Microsoft.SqlServer.Replication.PublicationType,Microsoft.SqlServer.Replication.SubscriptionResultOption)">
			<summary>Returns information about subscriptions that belong to a publication at the monitored Publisher.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptionstatus <see cref="T:System.Int32"></see>Maximum status of all replication agents associated with the publication, which can be one of the following values: 1 = Started2 = Succeeded3 = In progress4 = Idle5 = Retrying6 = Failedwarning <see cref="T:System.Int32"></see>Maximum threshold warning generated by a subscription belonging to the publication, which can be the logical OR result of one or more of the following values.1 = Expiration. A subscription to a transactional publication has exceeded the retention period by more than the allowable threshold, as a percentage of the retention period. 2 = Latency. The time taken to replicate data from a transactional Publisher to the Subscriber exceeds the threshold, in seconds.4 = Mergeexpiration. A subscription to a merge publication has exceeded the retention period by more than the allowable threshold, as a percentage of the retention period. 8 = Mergefastrunduration. The time taken to complete synchronization of a merge subscription exceeds the threshold over a fast network connection, in seconds.16 = Mergeslowrunduration The time taken to complete synchronization of a merge subscription exceeds the threshold over a slow or dial-up network connection, in seconds.32 = Mergefastrunspeed. The delivery rate for rows during synchronization of a merge subscription has failed to maintain the threshold rate over a fast network connection, in rows per second.64 = Mergeslowrunspeed. The delivery rate for rows during synchronization of a merge subscription has failed to maintain the threshold rate over a slow or dial-up network connection, in rows per second.subscriber <see cref="T:System.String"></see>Is the name of the Subscriber.subscriber_db <see cref="T:System.String"></see>Is the name of the database used for the subscription.publisher_db <see cref="T:System.String"></see>Is the name of the Publisher.publication <see cref="T:System.String"></see>Is the name of a publication.publication_type <see cref="T:System.Int32"></see>Is the type of publication, which can be one of the following  values:0 = Transactional publication1 = Snapshot publication2 = Merge publicationsubtype <see cref="T:System.Int32"></see>Is the subscription type, which can be one of the following values:0 = Push1 = Pull2 = Anonymouslatency <see cref="T:System.Int32"></see>The highest latency, in seconds, for data changes propagated by the Log Reader or Distribution Agents for a transactional publication. latencythreshold <see cref="T:System.Int32"></see>Is the maximum latency for the transactional publication above which a warning is raised. agentnotrunning <see cref="T:System.Int32"></see>Is the length of time, in hours, during which the agent has not run.agentnotrunningthreshold <see cref="T:System.Int32"></see>Is the length of time, in hours, that the agent has not run before a warning is raised.timetoexpiration <see cref="T:System.Int32"></see>Is the length of time, in hours, before the subscription expires if not synchronized.expirationthreshold <see cref="T:System.Int32"></see>Is the time, in hours, before the subscription expires that a warning is raised.last_distsync <see cref="T:System.DateTime"></see>Is the date/time that the Distribution Agent last ran.distribution_agentname <see cref="T:System.String"></see>Is the name of the Distribution Agent job for the subscription to a transactional publication.mergeagentname <see cref="T:System.String"></see>Is the name of the Merge Agent job for the subscription to a merge publication.mergesubscriptionfriendlyname <see cref="T:System.String"></see>Is the friendly name of the Merge Agent job for the subscription to a merge publication.mergeagentlocation <see cref="T:System.String"></see>Is the name of the server on which the Merge Agent runs.mergeconnectiontype <see cref="T:System.Int32"></see>Connection used when synchronizing a subscription to a merge publication, which can be one of the following values: 1 = Local area network (LAN)2 = Dial-up network connectionmergePerformance <see cref="T:System.Int32"></see>Performance of the last synchronization compared to all synchronizations for the subscription, which is based on the delivery rate of the last synchronization divided by the average of all previous delivery rates. mergerunspeed <see cref="T:System.Single"></see>Is the delivery rate of the last synchronization for the subscription.mergerunduration <see cref="T:System.Int32"></see>Is the length of time to complete the last synchronization of the subscription.monitorranking <see cref="T:System.Int32"></see>Is the ranking value used to order the subscriptions in the result set, and can be one of the following values:For a transactional publication:60 = Error56 = Warning: performance critical52 = Warning: expiring soon50 = Warning: subscription uninitialized40 = Retrying failed command 30 = Not running (success)20 = Running (starting, running, or idle)For a merge publication:60 = Error 56 = Warning: performance critical54 = Warning: long-running merge52 = Warning: expiring soon50 = Warning: subscription uninitialized 40 = Retrying failed command 30 = Running (starting, running, or idle)20 = Not running (success)distributionagentjobid <see cref="T:System.Byte"></see>[16]ID of the Distribution Agent job for subscriptions to a transactional publication.mergeagentjobid <see cref="T:System.Byte"></see>[16]ID of the Merge Agent job for subscriptions to a transactional publication.distributionagentid <see cref="T:System.Int32"></see>ID of the Distribution Agent job for the subscription.distributionagentprofileid <see cref="T:System.Int32"></see>ID of the agent profile used by the Distribution Agent.mergeagentid <see cref="T:System.Int32"></see>ID of the Merge Agent job for the subscription.mergeagentprofileid <see cref="T:System.Int32"></see>ID of the agent profile used by the Merge Agent.</returns>
			<param name="publicationType">A <see cref="T:Microsoft.SqlServer.Replication.PublicationType"></see> value that specifies the type of publication to which the subscription is subscribed.</param>
			<param name="resultOption">A <see cref="T:Microsoft.SqlServer.Replication.SubscriptionResultOption"></see> value that specifies the result options.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublisherMonitor.DistributionDatabase">
			<summary>Gets the name of the distribution database used by the Publisher.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the distribution database used by the Publisher.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublisherMonitor.ExcludeAnonymousSubscriptions">
			<summary>Gets whether or not information on anonymous subscriptions is returned. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, information on anonymous subscriptions is returned. If false, information on anonymous subscriptions is not returned.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublisherMonitor.Name">
			<summary>Gets the name of the Publisher.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublisherMonitor.PublicationMonitors">
			<summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Replication.PublicationMonitor"></see> objects, each of which represents a publication defined at the Publisher being monitored.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.PublicationMonitorCollection"></see> object. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublisherMonitor.PublisherType">
			<summary>Gets the type of the database server that is the Publisher.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublisherMonitor.StatusAndWarning">
			<summary>Gets status information and warnings for the monitored threshold metrics on the Publisher. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ReplicationStatusAndWarning"></see> object.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.PublisherMonitorCollection">
			<summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Replication.PublisherMonitor"></see> objects. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PublisherMonitorCollection.CopyTo(Microsoft.SqlServer.Replication.PublisherMonitorCollection,System.Int32)">
			<summary>Makes a copy of the collection.</summary>
			<param name="replicationCollection">A <see cref="T:Microsoft.SqlServer.Replication.PublisherMonitorCollection"></see> object that is to receive the copy of the original collection.</param>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the index position within the original collection to start copying.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublisherMonitorCollection.Item(System.Int32)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.PublisherMonitor"></see> object in the collection by index number.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.PublisherMonitor"></see> object. </returns>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the index of the <see cref="T:Microsoft.SqlServer.Replication.PublisherMonitor"></see> object in the collection.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PublisherMonitorCollection.Item(System.String)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.PublisherMonitor"></see> object in the collection by Publisher name.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.PublisherMonitor"></see> object.</returns>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of the Publisher.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.PullSubscription">
			<summary>Represents information at the Publisher for a subscription to a merge or a transactional publication when the Synchronization Agent runs at the Subscriber. <see cref="T:Microsoft.SqlServer.Replication.PullSubscription"></see> is a base class from which the <see cref="T:Microsoft.SqlServer.Replication.TransPullSubscription"></see> class and the <see cref="T:Microsoft.SqlServer.Replication.MergePullSubscription"></see> class are derived.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PullSubscription.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.PullSubscription"></see> class. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PullSubscription.Create">
			<summary>Creates the pull subscription on the Subscriber.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PullSubscription.LastAgentJobHistoryInfo">
			<summary>Returns information on the last Synchronization Agent job that was run.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Replication.AgentJobHistoryInfo"></see> object.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PullSubscription.Remove">
			<summary>Removes the pull subscription.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PullSubscription.Script(Microsoft.SqlServer.Replication.ScriptOptions)">
			<summary>Returns a Transact-SQL script to create or delete the pull subscription based on the current property setting of the <see cref="T:Microsoft.SqlServer.Replication.PullSubscription"></see> object. </summary>
			<returns>A <see cref="T:System.String"></see> value that contains the Transact-SQL script.</returns>
			<param name="scriptOption">A <see cref="T:Microsoft.SqlServer.Replication.ScriptOptions"></see> object value that specifies the scripting options.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PullSubscription.StopSynchronizationJob">
			<summary>Attempts to stop a running job that is synchronizing the subscription.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.PullSubscription.SynchronizeWithJob">
			<summary>Starts the agent job to synchronize the subscription. </summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.AgentJobId">
			<summary>Gets the ID of the agent job used to synchronize the subscription.</summary>
			<returns>A <see cref="T:System.String"></see> value that represents a SQL Server Agent job ID value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.AgentOffload">
			<summary>Gets or sets whether or not the Synchronization Agent runs on a computer other than the one where the agent job was created. This property is no longer supported for Distributors running Microsoft SQL Server 2005 and later.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the agent runs on another computer and is launched using a Distributed Component Object Model (DCOM) process. If false, the agent runs on the computer where the agent job was created.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.AgentOffloadServer">
			<summary>Gets or sets the name of the remote computer where the agent runs when using remote agent activation. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.AgentSchedule">
			<summary>Gets the schedule for the agent job used to synchronize the subscription. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ReplicationAgentSchedule"></see> object that represents the schedule for the subscription.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.AltSnapshotFolder">
			<summary>Gets or sets the location where the publication snapshot files are obtained when the default snapshot location at the Distributor is not used. </summary>
			<returns>A <see cref="T:System.String"></see> value that represents the full path to the alternate snapshot location.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.CreateSyncAgentByDefault">
			<summary>Gets or sets whether or not the agent job used to start the Replication Agent to synchronize the subscription is created when the subscription is created.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.DatabaseName">
			<summary>Gets or sets the name of the subscription database.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.Description">
			<summary>Gets or sets a textual description of the pull subscription. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.DistributorName">
			<summary>Gets or sets the instance of Microsoft SQL Server that is the Distributor and is distributing the publication to which the subscription subscribes. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.DistributorSecurity">
			<summary>Gets the security context used to connect to the Distributor.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ConnectionSecurityContext"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.EnabledForSynchronizationManager">
			<summary>Specifies whether or not the subscription can be synchronized using Windows Synchronization Manager.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the subscription can be synchronized using Windows Synchronization Manager. If false, the subscription can not be synchronized using Windows Synchronization Manager.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.LastAgentDateTime">
			<summary>Gets the date and time when the subscription was last synchronized. </summary>
			<returns>A <see cref="T:System.String"></see> value that represents a date and time.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.LastAgentStatus">
			<summary>Gets the status of the most recent synchronization of the subscription.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ReplicationStatus"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.LastAgentSummary">
			<summary>Gets a summary of the result of the most recent synchronization of the subscription. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.Name">
			<summary>Gets the name generated for the pull subscription.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the pull subscription.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.PublicationDBName">
			<summary>Gets or sets the name of the publication database.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the database where the publication is defined.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.PublicationName">
			<summary>Gets or sets the name of the publication to which the subscription subscribes. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.PublisherName">
			<summary>Gets or sets the name of the Publisher.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.PublisherSecurity">
			<summary>Gets or sets the security context used by the Synchronization Agent when connecting to the Publisher. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.PublisherConnectionSecurityContext"></see> object. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.SubscriberSecurity">
			<summary>Gets the security context that is used by the Synchronization Agent when connecting to the Subscriber. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ConnectionSecurityContext"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.SubscriptionId">
			<summary>Gets the subscription ID value.</summary>
			<returns>A <see cref="T:System.String"></see> value that represents a unique identifier.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.SubscriptionType">
			<summary>Gets whether the subscription registration is for a push, pull, or anonymous subscription. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.SubscriptionOption"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.SynchronizationAgentProcessSecurity">
			<summary>Gets the security context that is used to specify the Microsoft Windows account under which the Synchronization Agent job runs to synchronize the subscription.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Replication.IProcessSecurityContext"></see> object that represents a Windows account. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.UseFtp">
			<summary>Gets or sets whether or not the snapshot files needed to initialize the pull subscription are accessed by the Synchronization Agent using File Transfer Protocol (FTP). </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, snapshot files are downloaded using FTP protocol. If false, snapshot files are not downloaded using FTP protocol.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.PullSubscription.WorkingDirectory">
			<summary>Gets or sets the path of the directory at the Subscriber that is used to temporarily store and decompress downloaded snapshot files.</summary>
			<returns>A <see cref="T:System.String"></see> value that represents a file path on the local computer.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.QueueOption">
			<summary>Enumerates the type of queuing available to a transactional publication with updating Subscribers. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.QueueOption.Msmq">
			<summary>Uses Message Queuing (also known as MSMQ) to implement queuing. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.QueueOption.Sql">
			<summary>Uses Microsoft SQL Server to implement queuing.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.RegisteredSubscriber">
			<summary>Represents a Subscriber that has been registered at a Publisher or a Distributor.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.RegisteredSubscriber.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.RegisteredSubscriber"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.RegisteredSubscriber.#ctor(System.String,Microsoft.SqlServer.Management.Common.ServerConnection)">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.RegisteredSubscriber"></see> class with the specified name and specified connection to the Publisher.</summary>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object value that specifies the connection context used to establish a connection to the Publisher.</param>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of the registered Subscriber.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.RegisteredSubscriber.#ctor(System.String,Microsoft.SqlServer.Management.Common.ServerConnection,System.String,System.String)">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.RegisteredSubscriber"></see> class with the specified name, the specified connection to the distribution Publisher, the specified distribution Publisher, and the distribution database.</summary>
			<param name="distributionDB">A <see cref="T:System.String"></see> value that specifies the name of the distribution database.</param>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object value that specifies the connection context used to establish a connection to the Publisher.</param>
			<param name="distPublisher">A <see cref="T:System.String"></see> value that specifies the name of the Publisher.</param>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of the registered Subscriber.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.RegisteredSubscriber.Create">
			<summary>Registers the Subscriber at the specified Publisher or Distributor. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.RegisteredSubscriber.Remove">
			<summary>Removes the Subscriber registration represented by the object. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.RegisteredSubscriber.Script(Microsoft.SqlServer.Replication.ScriptOptions)">
			<summary>Returns a string containing a Transact-SQL creation or deletion script for the Microsoft SQL Server registered Subscriber on the server computer that the object represents. </summary>
			<returns>A <see cref="T:System.String"></see> value that contains the Transact-SQL script.</returns>
			<param name="scriptOption">A <see cref="T:Microsoft.SqlServer.Replication.ScriptOptions"></see> object value that specifies the scripting options.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.RegisteredSubscriber.DefaultDistributionSchedule">
			<summary>Gets the default schedule to be assigned to the Distribution Agent if it is not specified. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ReplicationAgentSchedule"></see> object value that specifies the schedule.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.RegisteredSubscriber.DefaultMergeSchedule">
			<summary>Gets the default schedule to be assigned to the Merge Agent if it is not specified. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ReplicationAgentSchedule"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.RegisteredSubscriber.Description">
			<summary>Gets or sets a textual description of the object.</summary>
			<returns>A <see cref="T:System.String"></see> value that contains the textual description of the registered Subscriber.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.RegisteredSubscriber.DistributionDatabase">
			<summary>Gets or sets the name of the distribution database that the distribution Publisher uses. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the distribution database that the distribution Publisher uses.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.RegisteredSubscriber.DistributionPublisher">
			<summary>Gets or sets the name of the distribution Publisher to which the Subscriber is registered. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the distribution Publisher to which the Subscriber is registered.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.RegisteredSubscriber.Name">
			<summary>Gets or sets the name of the registered Subscriber.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the registered Subscriber.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.RegisteredSubscriber.SubscriberSecurity">
			<summary>Gets a security context that is used by the Distribution Agent or the Merge Agent to connect to this registered Subscriber. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ConnectionSecurityContext"></see> value that specifies the security context used by the Distribution Agent or the Merge Agent to connect to the registered Subscriber.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.RegisteredSubscriber.Type">
			<summary>Gets or sets the type of Subscriber.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.SubscriberType"></see> value that specifies the type of Subscriber.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.RegisteredSubscriberCollection">
			<summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Replication.RegisteredSubscriber"></see> objects.  </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.RegisteredSubscriberCollection.CopyTo(Microsoft.SqlServer.Replication.RegisteredSubscriberCollection,System.Int32)">
			<summary>Makes a copy of the collection.</summary>
			<param name="replicationCollection">A <see cref="T:Microsoft.SqlServer.Replication.RegisteredSubscriberCollection"></see> object that is to receive the copy of the original collection.</param>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the index position within the original collection to start copying.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.RegisteredSubscriberCollection.Item(System.Int32)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.RegisteredSubscriber"></see> object in the collection by index number.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.RegisteredSubscriber"></see> object value that represents the registered Subscriber.</returns>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the position of the <see cref="T:Microsoft.SqlServer.Replication.RegisteredSubscriber"></see> object in the collection.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.RegisteredSubscriberCollection.Item(System.String)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.RegisteredSubscriber"></see> object in the collection by name.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.RegisteredSubscriber"></see> object value that represents the registered Subscriber.</returns>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of the registered Subscriber.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ReplicationAgentSchedule">
			<summary>Represents the schedule for a replication agent job.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationAgentSchedule.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.ReplicationAgentSchedule"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationAgentSchedule.Update">
			<summary>Updates an existing schedule on the server. </summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationAgentSchedule.ActiveEndDate">
			<summary>Gets or sets the date the scheduled activity is to stop running. </summary>
			<returns>An <see cref="T:System.Int32"></see> value that represents a date. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationAgentSchedule.ActiveEndTime">
			<summary>Gets or sets the time the scheduled activity is to stop running. </summary>
			<returns>An <see cref="T:System.Int32"></see> value that represents a time.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationAgentSchedule.ActiveStartDate">
			<summary>Gets or sets the date of the first occurrence of the scheduled activity. </summary>
			<returns>An <see cref="T:System.Int32"></see> value that represents a date.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationAgentSchedule.ActiveStartTime">
			<summary>Gets or sets the time of the first occurrence of the scheduled activity. </summary>
			<returns>An <see cref="T:System.Int32"></see> value that represents a time.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationAgentSchedule.FrequencyInterval">
			<summary>Gets or sets the interval between occurrences of a scheduled activity. </summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationAgentSchedule.FrequencyRecurrenceFactor">
			<summary>Gets or sets the frequency recurrence factor. </summary>
			<returns>An <see cref="T:System.Int32"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationAgentSchedule.FrequencyRelativeInterval">
			<summary>Gets or sets a time of occurrence that is relative to the first day of the month.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ScheduleRelativeIntervals"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationAgentSchedule.FrequencySubDay">
			<summary>Gets or sets the frequency in minutes for scheduled activities that occur several times a day.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ScheduleFrequencySubDay"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationAgentSchedule.FrequencySubDayInterval">
			<summary>Gets or sets the interval between scheduled activities that occur several times in one day. </summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationAgentSchedule.FrequencyType">
			<summary>Gets or sets the frequency for a scheduled activity.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ScheduleFrequencyType"></see> value. </returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ReplicationBaseCollection">
			<summary>The base class that is used in the construction of replication object collections. It contains functionality that is common to the replication object collections.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationBaseCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the collection to an array.</summary>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the index position within the original collection to start copying.</param>
			<param name="array">An <see cref="T:System.Array"></see> object that is to receive the copy of the original collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationBaseCollection.GetEnumerator">
			<summary>Gets an enumerator that is used to iterate through the objects in a collection.</summary>
			<returns>An instance <see cref="T:System.Collections.IEnumerator"></see>. </returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationBaseCollection.Refresh">
			<summary>Refreshes the collection. </summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationBaseCollection.Count">
			<summary>Gets the number of objects in the referenced collection.</summary>
			<returns>An <see cref="T:System.Int32"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationBaseCollection.IsSynchronized">
			<summary>Gets whether or not access to the collection is synchronized and is therefore thread-safe.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, access to the collection is synchronized. If false, access to the collection is not synchronized.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationBaseCollection.SyncRoot">
			<summary>Gets an object that can be used to synchronize access to the collection.</summary>
			<returns>An <see cref="T:System.Object"></see>.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ReplicationColumn">
			<summary>Represents a column object in a table that contains information needed by replication. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationColumn.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.ReplicationColumn"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationColumn.AllowNulls">
			<summary>Gets or sets whether the column can accept null as a value or not. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the column referenced can accept null as a value. If false, null is not allowed. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationColumn.ColumnId">
			<summary>Gets or sets the ID value that uniquely identifies the column object. </summary>
			<returns>An <see cref="T:System.Int32"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationColumn.Datatype">
			<summary>Gets or sets the data type name for this column. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationColumn.DriDefaultName">
			<summary>Gets or sets the name of the default constraint used by this column. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationColumn.InPrimaryKey">
			<summary>Gets or sets whether the column is participating in a primary key or not. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the referenced column is part of a primary key or unique key constraint defined on the table. If false, the referenced column is not part of a primary key or unique key constraint defined on the table. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationColumn.IsIdentity">
			<summary>Gets or sets whether this column is an identity column or not. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the referenced column is an identity column. If false, the referenced column is not an identity column. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationColumn.IsRowGuidColumn">
			<summary>Gets or sets whether the column is used as the globally unique identifier (GUID) for rows in a table or not. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the referenced column is used as a GUID identifier. If false, the referenced column is not used as a GUID identifier. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationColumn.Name">
			<summary>Gets or sets the name of the column.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationColumn.PhysicalDatatype">
			<summary>Gets or sets the name of the base data type for this column. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationColumn.UserData">
			<summary>Gets or sets an object property that allows users to attach their own data to this object. </summary>
			<returns>An <see cref="T:System.Object"></see> that contains user data. The data is only valid for the lifetime of the object.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ReplicationDatabase">
			<summary>Represents a publication or subscription database in a replication topology. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationDatabase.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Replication.ReplicationDatabase"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationDatabase.#ctor(System.String,Microsoft.SqlServer.Management.Common.ServerConnection)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Replication.ReplicationDatabase"></see> class with the specified database name, providing a connection to the server on which the database exists.</summary>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object value that specifies the connection context that is used to establish a connection to the instance of SQL Server.</param>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of the replication database.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationDatabase.CreateLogReaderAgent">
			<summary>Creates a Log Reader Agent job for a database published with transactional replication.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationDatabase.CreateQueueReaderAgent">
			<summary>Creates a Queue Reader Agent job for the distribution database.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationDatabase.EnumConflictTables(System.String)">
			<summary>Returns conflict information for all merge publications and subscriptions that use the replication database.</summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.ArticleConflict"></see> objects.</returns>
			<param name="publication">A <see cref="T:System.String"></see> value that specifies the name of the publication. If publication is null, then conflict information for all publications using the database is returned.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationDatabase.EnumMergeConflictCounts(System.String,System.String,System.String)">
			<summary>Returns information on conflicts stored in a merge publication or subscription database.</summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.MergeConflictCount"></see> objects.</returns>
			<param name="publicationName">The name of the publication. publicationName is a required parameter.</param>
			<param name="publisherName">The name of the Publisher server. publisherName is only supported on Microsoft SQL Server 2000 and later versions.</param>
			<param name="publicationDB">The name of the published database. publicationDB is only supported on SQL Server 2000 and later versions.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationDatabase.EnumMergePublications">
			<summary>Returns a list of merge publications that use the replication database. </summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.MergePublication"></see> objects. </returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationDatabase.EnumMergePullSubscriptions">
			<summary>Returns all merge pull subscriptions that use this replication database. </summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.MergePullSubscription"></see> objects. </returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationDatabase.EnumPublicationArticles(System.String)">
			<summary>Returns replication information for published objects in the replication database. </summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.PublicationArticle"></see> objects. </returns>
			<param name="objName">A <see cref="T:System.String"></see> value specifying the database object that is published, such as the table name or stored procedure.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationDatabase.EnumReplicationSchemaBoundViews">
			<summary>Returns all user-defined schema-bound view objects in the database. </summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.ReplicationSchemaBoundView"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationDatabase.EnumReplicationStoredProcedures">
			<summary>Returns all user-defined stored procedure objects in the database. </summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.ReplicationStoredProcedure"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationDatabase.EnumReplicationTables">
			<summary>Returns all user-defined table objects in the database. </summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.ReplicationTable"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationDatabase.EnumReplicationUserDefinedAggregates">
			<summary>Returns a list of user-defined aggregates in the database. </summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.ReplicationUserDefinedAggregate"></see> objects. </returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationDatabase.EnumReplicationUserDefinedFunctions">
			<summary>Returns a list of user-defined functions in the database. </summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.ReplicationUserDefinedFunction"></see> objects. </returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationDatabase.EnumReplicationViews">
			<summary>Returns a list of the user-defined views objects in the database. </summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="M:Microsoft.SqlServer.Replication.ReplicationDatabase.EnumReplicationViews"></see> objects. </returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationDatabase.EnumTransConflictCounts(System.String,System.String,System.String)">
			<summary>Returns information on conflicts stored in an updating transactional publication or subscription database.</summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.TransConflictCount"></see> objects.</returns>
			<param name="publicationName">The name of the publication. publicationName is a required parameter.</param>
			<param name="publisherName">The name of the Publisher server. publisherName is only supported on Microsoft SQL Server 2005 and later versions.</param>
			<param name="publicationDB">The name of the published database. publicationDB is only supported on SQL Server 2005 and later versions.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationDatabase.EnumTransPublications">
			<summary>Returns a list of transactional and snapshot publications that use the database. </summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.TransPublication"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationDatabase.EnumTransPullSubscriptions">
			<summary>Returns a list of transactional and snapshot pull subscriptions that use the database. </summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.TransPullSubscription"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationDatabase.LinkPublicationForUpdateableSubscription(System.String,System.String,System.String,System.String,Microsoft.SqlServer.Replication.PublisherConnectionSecurityContext)">
			<summary>Sets the configuration and security information used by synchronization triggers of updatable subscriptions when connecting to the Publisher.</summary>
			<param name="publisher">The name of the Publisher to which the updating Subscriber connects.</param>
			<param name="distributor">The name of the Distributor used by this updating Subscriber.</param>
			<param name="publication">The name of the publication.</param>
			<param name="publisherDB">The name of the publication database.</param>
			<param name="publisherSecurity">A <see cref="T:Microsoft.SqlServer.Replication.PublisherConnectionSecurityContext"></see> value that defines how the updating Subscriber connects to the Publisher.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationDatabase.ReadSubscriptionFailoverMode(System.String,System.String,System.String)">
			<summary>Returns the failover mode for an updating subscription to a transactional or snapshot publication.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.FailoverMode"></see> value.</returns>
			<param name="publisher">A <see cref="T:System.String"></see> value that specifies the Publisher.</param>
			<param name="publication">A <see cref="T:System.String"></see> value that specifies the publication.</param>
			<param name="publicationDB">A <see cref="T:System.String"></see> value that specifies the publication database.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationDatabase.Script(Microsoft.SqlServer.Replication.ScriptOptions)">
			<summary>Returns a Transact-SQL script to enable or disable replication publishing and subscriptions on the database based on the properties of <see cref="T:Microsoft.SqlServer.Replication.ReplicationDatabase"></see>.</summary>
			<returns>A <see cref="T:System.String"></see> value that contains the Transact-SQL script.</returns>
			<param name="scriptOption">A <see cref="T:Microsoft.SqlServer.Replication.ScriptOptions"></see> object value that specifies the replication options to script.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationDatabase.ScriptReplicationDBOption(Microsoft.SqlServer.Replication.ScriptOptions)">
			<summary>Returns a Transact-SQL script to enable or disable replication options on the database based on the properties of <see cref="T:Microsoft.SqlServer.Replication.ReplicationDatabase"></see>.</summary>
			<returns>A <see cref="T:System.String"></see> value that contains the Transact-SQL script.</returns>
			<param name="scriptOption">A <see cref="T:Microsoft.SqlServer.Replication.ScriptOptions"></see> object value that specifies the replication options to script.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationDatabase.WriteSubscriptionFailoverMode(System.String,System.String,System.String,Microsoft.SqlServer.Replication.FailoverMode)">
			<summary>Sets the failover mode for an updating subscription to a transactional or snapshot publication.</summary>
			<param name="failoverMode">A <see cref="T:Microsoft.SqlServer.Replication.FailoverMode"></see> object value that specifies the failover mode.</param>
			<param name="publisher">A <see cref="T:System.String"></see> value that specifies the Publisher.</param>
			<param name="publication">A <see cref="T:System.String"></see> value that specifies the publication.</param>
			<param name="publicationDB">A <see cref="T:System.String"></see> value that specifies the publication database.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationDatabase.AllowMergePublication">
			<summary>Specifies whether or not the database can be published using merge replication.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether or not the database supports merge publications. If true, the database allows merge publications. If false, the database does not allow merge publications.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationDatabase.CompatibilityLevel">
			<summary>Gets the minimum version of SQL Server with which the database has compatible behavior.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.DatabaseCompatibilityLevel"></see> value that specifies the version of SQL Server with which the database has compatible behavior.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationDatabase.DBOwner">
			<summary>Gets if the login used by the current connection has ownership rights to the database.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that indicates if the current login is a member of the db_owner fixed database role.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationDatabase.DBReadOnly">
			<summary>Gets whether the database is read-only or not. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether the database is read-only or not. If true, the database is read-only. If false, the database is read/write.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationDatabase.EnabledMergePublishing">
			<summary>Gets or sets whether the database is enabled for merge publishing or not.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether the database is enabled for merge publishing or not. If true, the database is enabled for merge publishing. If false, the database is not enabled for merge publishing.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationDatabase.EnabledTransPublishing">
			<summary>Gets or sets whether the database is enabled for transactional or snapshot publishing or not.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether the database is enabled for transaction or snapshot publishing or not. If true, the database is enabled for transactional or snapshot publishing. If false, the database is not enabled for transactional or snapshot publishing.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationDatabase.HasPublications">
			<summary>Gets whether or not the database has existing publications.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the database has at least one existing publication. If false, the database has no existing publications. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationDatabase.HasPullSubscriptions">
			<summary>Gets whether or not the database has existing pull subscriptions.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the database has at least one existing pull subscription. If false, the database has no existing pull subscriptions. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationDatabase.LogReaderAgentExists">
			<summary>Gets whether or not the Log Reader Agent has been created for the publication database.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether or not the Log Reader Agent for the publication database has been created. If true, the Log Reader Agent exists. If false, the Log Reader Agent has not yet been created.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationDatabase.LogReaderAgentName">
			<summary>Gets the name of an existing Log Reader Agent or sets the name when creating a new Log Reader Agent for a published database.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the Log Reader Agent.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationDatabase.LogReaderAgentProcessSecurity">
			<summary>Gets the Microsoft Windows account under which the Log Reader Agent job runs at the Distributor.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Replication.IProcessSecurityContext"></see> object that specifies the Windows account used by SQL Server Agent when running the Log Reader Agent.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationDatabase.LogReaderAgentPublisherSecurity">
			<summary>Gets the login used by the Log Reader Agent to connect to the Publisher. </summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Replication.IProcessSecurityContext"></see> value that specifies the type of authentication and login used by the Log Reader Agent to connect to the Publisher.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationDatabase.MergePublications">
			<summary>Returns the merge publications defined on the replication database.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.MergePublicationCollection"></see> of <see cref="T:Microsoft.SqlServer.Replication.MergePublication"></see> objects. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationDatabase.MergePullSubscriptions">
			<summary>Returns the merge pull subscriptions defined on the replication database.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.MergePullSubscriptionCollection"></see> of <see cref="T:Microsoft.SqlServer.Replication.MergePullSubscription"></see> objects. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationDatabase.Name">
			<summary>Gets or sets the name of the replication database.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the replication database.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationDatabase.QueueReaderAgentExists">
			<summary>Gets whether or not a Queue Reader Agent job exists for the database.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that indicates whether a Queue Reader Agent job has been created for the distribution database or not.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationDatabase.QueueReaderAgentProcessSecurity">
			<summary>Gets the Microsoft Windows account under which the Queue Reader Agent job runs at the Distributor.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Replication.IProcessSecurityContext"></see> object that specifies the Windows account used by SQL Server Agent when running the Queue Reader Agent.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationDatabase.TransPublications">
			<summary>Returns the transactional or snapshot publications defined on the replication database.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.TransPublicationCollection"></see> of <see cref="T:Microsoft.SqlServer.Replication.TransPublication"></see> objects. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationDatabase.TransPullSubscriptions">
			<summary>Represents the pull subscriptions to a transactional or snapshot publication defined on the replication database.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.TransPullSubscriptionCollection"></see> of <see cref="T:Microsoft.SqlServer.Replication.TransPullSubscription"></see> objects. </returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ReplicationDatabaseCollection">
			<summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Replication.ReplicationDatabase"></see> objects. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationDatabaseCollection.CopyTo(Microsoft.SqlServer.Replication.ReplicationDatabaseCollection,System.Int32)">
			<summary>Makes a copy of the collection.</summary>
			<param name="replicationCollection">A <see cref="T:Microsoft.SqlServer.Replication.ReplicationDatabaseCollection"></see> object that is to receive the copy of the original collection.</param>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the index position within the original collection to start copying.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationDatabaseCollection.Item(System.Int32)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.ReplicationDatabase"></see> object in the collection by index number.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ReplicationDatabase"></see> object. </returns>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the position of the <see cref="T:Microsoft.SqlServer.Replication.ReplicationDatabase"></see> object in the collection.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationDatabaseCollection.Item(System.String)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.ReplicationDatabase"></see> object in the collection by database name. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ReplicationDatabase"></see> object. </returns>
			<param name="name">A <see cref="T:Sytem.String"></see> value that specifies the name of the replication database.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ReplicationMonitor">
			<summary>Monitors a replication server. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationMonitor.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.ReplicationMonitor"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationMonitor.#ctor(Microsoft.SqlServer.Management.Common.ServerConnection)">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.ReplicationMonitor"></see> class with the specified connection to the instance of Microsoft SQL Server.</summary>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object value that specifies the connection context used to establish a connection with the instance of SQL Server.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationMonitor.EnumDistributionAgents">
			<summary>Returns information on Distribution Agent jobs at the monitored Distributor. </summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptiondb_name<see cref="T:System.String"></see>Name of the distribution database.name<see cref="T:System.String"></see>Name of the replication agent job.status <see cref="T:System.Int32"></see>The running status:1 = Start 2 = Succeed 3 = In progress 4 = Idle 5 = Retry 6 = Failpublisher<see cref="T:System.String"></see>Publisher name.publisher_db <see cref="T:System.String"></see>Name of the publication database.publication<see cref="T:System.String"></see>Publication name.subscriber<see cref="T:System.String"></see>Subscriber name.subscriber_db <see cref="T:System.String"></see>Name of the subscription database.subscription_type<see cref="T:System.Int32"></see>The type of subscription:0 = Push 1 = Pull 2 = Anonymousstart_time <see cref="T:System.String"></see>Date and time of the last agent execution.time <see cref="T:System.String"></see>Date and time that the session was logged.duration <see cref="T:System.Int32"></see>Elapsed time of the session, in seconds.comments <see cref="T:System.String"></see>Message text logged by the agent.delivery_time<see cref="T:System.Int32"></see>The time the first transaction is delivered.delivered_transactions<see cref="T:System.Int32"></see>Total number of transactions delivered in the session.delivered_commands <see cref="T:System.Int32"></see>Total number of commands delivered in the session.average_commands <see cref="T:System.Int32"></see>Average number of commands per transaction delivered in the session.delivery_rate <see cref="T:System.Single"></see>Average number of commands delivered per second.delivery_latency <see cref="T:System.Int32"></see>Latency, in milliseconds, between the transaction entering the distribution database and being applied to the Subscriber.error_id <see cref="T:System.Int32"></see>The ID of the error in the MSrepl_errors system table. Use the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumErrorRecords(System.Int32)"></see> method to return detailed information about an error.job_id<see cref="T:System.Byte"></see>[16]Identifier of the SQL Server Agent job starting the replication agent.local_job<see cref="T:System.Boolean"></see>When true, the agent job is available at the Distributor. profile_id <see cref="T:System.Int32"></see>Profile identifier.agent_id <see cref="T:System.Int32"></see>Agent job identifier.local_timestamp <see cref="T:System.Byte"></see>[8]Timestamp of the most recent agent run.offload_enabled<see cref="T:System.Boolean"></see>If true, the subscription supports remote agent activation. Remote agent activation has been discontinued. For more information, see Discontinued Functionality in SQL Server 2005 Replication.offload_server<see cref="T:System.Boolean"></see>Name of the server used with remote agent activation.Remote agent activation has been discontinued. For more information, see Discontinued Functionality in SQL Server 2005 Replication.subscriber_type <see cref="T:System.Byte"></see>The data source type at the Subscriber:0 = SQL Server Subscriber.1 = Open Database Connectivity (ODBC) data source.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationMonitor.EnumErrorRecords(System.String,System.Int32)">
			<summary>Returns information on errors associated with a specified error ID that occurred during a synchronization session.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptionsource_type_id <see cref="T:System.Int32"></see>Identifies the source of the error.source_name <see cref="T:System.String"></see>The name of the error source.error_code <see cref="T:System.String"></see>The error code.error_text <see cref="T:System.String"></see>The message text for the error.(No column name)<see cref="T:System.String"></see>Date and time that the error occurred.error_type_id<see cref="T:System.Int32"></see>Type of error that occurred.has_xact_seqno<see cref="T:System.Boolean"></see>If the error has a corresponding transaction log sequence number. xact_seqno<see cref="T:System.Byte"></see>[]The starting transaction log sequence number of the failed execution batch. command_id<see cref="T:System.Int32"></see>The command ID of the first command in the failed execution batch.</returns>
			<param name="errorID">An <see cref="T:System.Int32"></see> value that specifies the ID value that uniquely identifies the error. </param>
			<param name="distributionDatabase">A <see cref="T:System.String"></see> value that specifies the distribution database. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationMonitor.EnumLogReaderAgents">
			<summary>Returns information on Log Reader Agent jobs at the monitored Distributor.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptiondb_name<see cref="T:System.String"></see>Name of the distribution database.name<see cref="T:System.String"></see>Replication agent job name.status <see cref="T:System.Int32"></see>The running status:1 = Start 2 = Succeed 3 = In progress 4 = Idle 5 = Retry 6 = Failpublisher<see cref="T:System.String"></see>Publisher name.publisher_db <see cref="T:System.String"></see>Name of the publication database.start_time <see cref="T:System.String"></see>Date and time of the last agent execution.time <see cref="T:System.String"></see>Date and time that the session was logged.duration <see cref="T:System.Int32"></see>Elapsed time of the session, in seconds.comments <see cref="T:System.String"></see>Message text logged by the agent.delivery_time<see cref="T:System.Int32"></see>The time the first transaction is delivered.delivered_transactions<see cref="T:System.Int32"></see>Total number of transactions delivered in the session.delivered_commands <see cref="T:System.Int32"></see>Total number of commands delivered in the session.average_commands <see cref="T:System.Int32"></see>Average number of commands per transaction delivered in the session.delivery_rate <see cref="T:System.Single"></see>Average number of commands delivered per second.delivery_latency <see cref="T:System.Int32"></see>The time, in milliseconds, between a command being committed to the published database and being committed to the distribution database. error_id <see cref="T:System.Int32"></see>The ID of the error in the MSrepl_errors system table. Use the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumErrorRecords(System.Int32)"></see> method to return detailed information about an error.job_id<see cref="T:System.Byte"></see>[16]Identifier of the SQL Server Agent job starting the replication agent.local_job<see cref="T:System.Boolean"></see>When true, the agent job is available at the Distributor. profile_id <see cref="T:System.Int32"></see>Profile identifier.agent_id <see cref="T:System.Int32"></see>Agent job identifier.local_timestamp <see cref="T:System.Byte"></see>[8]Timestamp of the most recent agent run.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationMonitor.EnumMergeAgents">
			<summary>Returns information on Merge Agent jobs at the monitored Distributor.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptiondb_name<see cref="T:System.String"></see>Name of the distribution database.name<see cref="T:System.String"></see>Name of the replication agent job.status <see cref="T:System.Int32"></see>The running status:1 = Start 2 = Succeed 3 = In progress 4 = Idle 5 = Retry 6 = Failpublisher<see cref="T:System.String"></see>Publisher name.publisher_db <see cref="T:System.String"></see>Name of the publication database.publication<see cref="T:System.String"></see>Publication name.subscriber<see cref="T:System.String"></see>Subscriber name.subscriber_db <see cref="T:System.String"></see>Name of the subscription database.subscription_type<see cref="T:System.Int32"></see>The type of subscription:0 = Push 1 = Pull 2 = Anonymousstart_time <see cref="T:System.String"></see>Date and time of the last agent execution.time <see cref="T:System.String"></see>Date and time that the session was logged.duration <see cref="T:System.Int32"></see>Elapsed time of the session, in seconds.comments <see cref="T:System.String"></see>Message text logged by the agent.delivery_rate <see cref="T:System.Single"></see>Average number of rows delivered per second.download_inserts <see cref="T:System.Int32"></see>The number of inserts applied at the Subscriber.download_updates <see cref="T:System.Int32"></see>The number of updates applied at the Subscriber.download_deletes <see cref="T:System.Int32"></see>The number of deletes applied at the Subscriber.publisher_conflicts <see cref="T:System.Int32"></see>The number of conflicts that occurred while applying changes at the Subscriber.upload_inserts <see cref="T:System.Int32"></see>The number of inserts applied at the Publisher.upload_updates <see cref="T:System.Int32"></see>The number of updates applied at the Publisher.upload_deletes <see cref="T:System.Int32"></see>The number of deletes applied at the Publisher.subscriber_conflicts <see cref="T:System.Int32"></see>The number of conflicts that occurred while applying changes at the Publisher.error_id <see cref="T:System.Int32"></see>The ID of the error in the MSrepl_errors system table. Use the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumErrorRecords(System.Int32)"></see> method to return detailed information about an error.job_id<see cref="T:System.Byte"></see>[16]Identifier of the SQL Server Agent job starting the replication agent.local_job<see cref="T:System.Boolean"></see>When true, the agent job is available at the Distributor. profile_id <see cref="T:System.Int32"></see>Profile identifier.agent_id <see cref="T:System.Int32"></see>Agent job identifier.local_timestamp <see cref="T:System.Byte"></see>[8]Timestamp of the most recent agent run.offload_enabled<see cref="T:System.Boolean"></see>If true, the subscription supports remote agent activation. Remote agent activation has been discontinued. For more information, see Discontinued Functionality in SQL Server 2005 Replication.offload_server<see cref="T:System.Boolean"></see>Name of the server used with remote agent activation.Remote agent activation has been discontinued. For more information, see Discontinued Functionality in SQL Server 2005 Replication.subscriber_type <see cref="T:System.Byte"></see>The data source type at the Subscriber:0 = SQL Server Subscriber.1 = Open Database Connectivity (ODBC) data source.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationMonitor.EnumMiscellaneousAgents">
			<summary>Returns information on jobs for miscellaneous replication agents at the monitored Distributor.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptionname<see cref="T:System.String"></see>Replication agent job name.agent_type<see cref="T:System.String"></see>Type of miscellaneous replication agent.status <see cref="T:System.Int32"></see>The running status:1 = Start 2 = Succeed 3 = In progress 4 = Idle 5 = Retry 6 = Failmessage <see cref="T:System.String"></see>Message text logged by the agent.start_time <see cref="T:System.String"></see>Date and time of the last agent execution.run_duration <see cref="T:System.Int32"></see>Elapsed time of the session, in seconds.job_id<see cref="T:System.Byte"></see>[16]Identifier of the SQL Server Agent job starting the replication agent.local_timestamp <see cref="T:System.Byte"></see>[8]Timestamp of the most recent agent run.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationMonitor.EnumPublishers">
			<summary>Returns information on the Publishers that use the monitored Distributor. </summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptionname <see cref="T:System.String"></see>Name of Publisher.distribution_db <see cref="T:System.String"></see>Distribution database for the specified Publisher.security_mode <see cref="T:System.Int32"></see>Security mode used by the replication agent in a push subscription to connect to the Publisher.login <see cref="T:System.String"></see>Login name used by the replication agent in a push subscription to connect to the Publisher.password <see cref="T:System.String"></see>Password returned (in simple encrypted form). Password is null for users other than sysadmin.active <see cref="T:System.Boolean"></see>Whether a remote Publisher is using the local server as a Distributor:working_directory <see cref="T:System.String"></see>Name of the working directory.trusted <see cref="T:System.Boolean"></see>If the password is required when the Publisher connects to the Distributor. For Microsoft SQL Server 2005, this should always return 0, which means that the password is required.thirdparty_flag <see cref="T:System.Boolean"></see>Whether the publication is enabled by SQL Server or by a third-party application:false = Oracle, or Oracle Gateway Publisher. true = Publisher has been integrated with SQL Server using a third-party application.publisher_type <see cref="T:System.String"></see>Type of Publisher, which can be one of the following:MSSQLSERVER ORACLE ORACLE GATEWAY publisher_data_source <see cref="T:System.String"></see>Name of the OLE DB data source on the Publisher.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationMonitor.EnumPublishers2">
			<summary>Returns a list of Publishers that use the currently connected server as the Distributor. </summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptionpublisher <see cref="T:System.String"></see>Is the name of a Publisher.distribution_db <see cref="T:System.String"></see>Is the name of the distribution database used by a given Publisher.status <see cref="T:System.Int32"></see>Maximum status of all replication agents associated with publications at this Publisher, which can be one of these values.1 = Started2 = Succeeded3 = In progress4 = Idle5 = Retrying6 = Failedwarning <see cref="T:System.Int32"></see>Maximum threshold warning generated by a subscription belonging to a publication at this Publisher, which can be the logical OR result of one or more of these values.1 = Expiration. A subscription to a transactional publication has exceeded the retention period by more than the allowable threshold, as a percentage of the retention period. 2 = Latency. The time taken to replicate data from a transactional Publisher to the Subscriber exceeds the threshold, in seconds.4 = Mergeexpiration. A subscription to a merge publication has exceeded the retention period by more than the allowable threshold, as a percentage of the retention period. 8 = Mergefastrunduration. The time taken to complete synchronization of a merge subscription exceeds the threshold over a fast network connection, in seconds.16 = Mergeslowrunduration. The time taken to complete synchronization of a merge subscription exceeds the threshold over a slow or dial-up network connection, in seconds.32 = Mergefastrunspeed. The delivery rate for rows during synchronization of a merge subscription has failed to maintain the threshold rate over a fast network connection, in rows per second.64 = Mergeslowrunspeed. The delivery rate for rows during synchronization of a merge subscription has failed to maintain the threshold rate over a slow or dial-up network connection, in rows per second.publicationcount <see cref="T:System.Int32"></see>Is the number of publications belonging to the Publisher.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationMonitor.EnumQueueReaderAgents">
			<summary>Returns information on Queue Reader Agent jobs at the monitored Distributor.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptiondb_name<see cref="T:System.String"></see>Name of the distribution database.name<see cref="T:System.String"></see>Replication agent job name.status <see cref="T:System.Int32"></see>The running status:1 = Start 2 = Succeed 3 = In progress 4 = Idle 5 = Retry 6 = Failstart_time <see cref="T:System.String"></see>Date and time of the last agent execution.time <see cref="T:System.String"></see>Date and time that the session was logged.duration <see cref="T:System.Int32"></see>Elapsed time of the session, in seconds.comments <see cref="T:System.String"></see>Message text logged by the agent.transactions_processed <see cref="T:System.Int32"></see>Total number of transactions delivered in the session.commands_processed<see cref="T:System.Int32"></see>Total number of commands delivered in the session.average_commands <see cref="T:System.Int32"></see>Average number of commands per transaction delivered in the session.delivery_rate <see cref="T:System.Single"></see>Average number of commands delivered per second.delivery_latency <see cref="T:System.Int32"></see>The time, in milliseconds, between a command being added to the queue and being committed to the publication database. error_id <see cref="T:System.Int32"></see>The ID of the error in the MSrepl_errors system table. Use the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumErrorRecords(System.Int32)"></see> method to return detailed information about an error.job_id<see cref="T:System.Byte"></see>[16]Identifier of the SQL Server Agent job starting the replication agent.profile_id <see cref="T:System.Int32"></see>Profile identifier.agent_id <see cref="T:System.Int32"></see>Agent job identifier.local_timestamp <see cref="T:System.Byte"></see>[8]Timestamp of the most recent agent run.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationMonitor.EnumQueueReaderAgentSessionDetails(System.String,System.Int32,System.String)">
			<summary>Returns detailed information about a Queue Reader Agent session. </summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptionrunstatus <see cref="T:System.Int32"></see>The running status:1 = Start 2 = Succeed 3 = In progress 4 = Idle 5 = Retry 6 = Failtime <see cref="T:System.String"></see>Time of logging for session detail.comments <see cref="T:System.String"></see>Descriptive text.transaction_id <see cref="T:System.String"></see>The transaction ID stored with the message, if applicable.transaction_status <see cref="T:System.Int32"></see>The status of the transaction.commands_processed <see cref="T:System.Int32"></see>The total number of commands processed in the session.subscriber<see cref="T:System.String"></see>The name of the Subscriber.subscriberdb<see cref="T:System.String"></see>The name of the subscription database.error_id <see cref="T:System.Int32"></see>The ID of the error in the MSrepl_errors system table. Use the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumErrorRecords(System.Int32)"></see> method to return detailed information about an error.</returns>
			<param name="publicationID">An <see cref="T:System.Int32"></see> value specifying the ID value that uniquely identifies the publication.</param>
			<param name="distributionDatabase">A <see cref="T:System.String"></see> value that specifies the distribution database.</param>
			<param name="sessionID">A <see cref="T:System.String"></see> value specifying the ID value that uniquely identifies the session. The sessionID contains the date and time, converted from a <see cref="T:System.DataTime"></see> system object value, when the session actually occurred. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationMonitor.EnumQueueReaderAgentSessions(System.String,System.Int32,System.Int32,System.Boolean)">
			<summary>Returns a list of information about the Queue Reader Agent sessions, including status and statistical information. </summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptionrunstatus <see cref="T:System.Int32"></see>The running status:1 = Start 2 = Succeed 3 = In progress 4 = Idle 5 = Retry 6 = Failstart_time <see cref="T:System.String"></see>Date and time of the last agent execution.time <see cref="T:System.String"></see>Date and time that the session was logged.comments <see cref="T:System.String"></see>Message text logged by the agent.duration <see cref="T:System.Int32"></see>Elapsed time of the session, in seconds.delivery_rate <see cref="T:System.Single"></see>Average number of commands delivered per second.delivery_latency <see cref="T:System.Int32"></see>The time, in milliseconds, between a command being committed to the published database and being committed to the distribution database. publication_id<see cref="T:System.Int32"></see>ID of the publication.transactions_processed<see cref="T:System.Int32"></see>Total number of transactions delivered in the session.commands_processed <see cref="T:System.Int32"></see>Total number of commands delivered in the session.average_commands <see cref="T:System.Int32"></see>Average number of commands per transaction delivered in the session.action_count <see cref="T:System.Int32"></see>Number of agent log messages recorded in the session.error_id <see cref="T:System.Int32"></see>The ID of the error in the MSrepl_errors system table. Use the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumErrorRecords(System.Int32)"></see> method to return detailed information about an error.</returns>
			<param name="publicationID">An <see cref="T:System.Int32"></see> value that specifies the ID value that uniquely identifies the publication.</param>
			<param name="sessionDuration">An <see cref="T:System.Int32"></see> value that specifies the number of hours before the current time to which to limit the results. For example, a value of 24 will return information about agent sessions over the last 24 hours. A value of -1 returns information on the last 100 sessions, and a value of 0 returns information on all sessions.</param>
			<param name="distributionDatabase">A <see cref="T:System.String"></see> value that specifies the distribution database.</param>
			<param name="returnOnlyErrorSessions">A <see cref="T:System.Boolean"></see> value that specifies whether to return information only on sessions that resulted in an error or on all sessions. If true, only error sessions are returned. If false, all sessions are returned.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationMonitor.EnumSnapshotAgents">
			<summary>Returns information on Snapshot Agent jobs at the monitored Distributor.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns. ColumnData typeDescriptiondb_name<see cref="T:System.String"></see>Name of the distribution database.name<see cref="T:System.String"></see>Replication agent job name.status <see cref="T:System.Int32"></see>The running status:1 = Start 2 = Succeed 3 = In progress 4 = Idle 5 = Retry 6 = Failpublisher<see cref="T:System.String"></see>Publisher name.publisher_db <see cref="T:System.String"></see>Name of the publication database.publication <see cref="T:System.String"></see>Name of the publication.start_time <see cref="T:System.String"></see>Date and time of the last agent execution.time <see cref="T:System.String"></see>Date and time that the session was logged.duration <see cref="T:System.Int32"></see>Elapsed time of the session, in seconds.comments <see cref="T:System.String"></see>Message text logged by the agent.delivered_transactions<see cref="T:System.Int32"></see>Total number of transactions delivered in the session.delivered_commands <see cref="T:System.Int32"></see>Total number of commands delivered in the session.delivery_rate <see cref="T:System.Single"></see>Average number of commands delivered per second.error_id <see cref="T:System.Int32"></see>The ID of the error in the MSrepl_errors system table. Use the <see cref="M:Microsoft.SqlServer.Replication.PublisherMonitor.EnumErrorRecords(System.Int32)"></see> method to return detailed information about an error.job_id<see cref="T:System.Byte"></see>[16]Identifier of the SQL Server Agent job starting the replication agent.local_job<see cref="T:System.Boolean"></see>When true, the agent job is available at the Distributor. profile_id <see cref="T:System.Int32"></see>Profile identifier.agent_id <see cref="T:System.Int32"></see>Agent job identifier.local_timestamp <see cref="T:System.Byte"></see>[8]Timestamp of the most recent agent run.dynamic_filter_login<see cref="T:System.String"></see>The value used for evaluating the SUSER_SNAME function in parameterized filters that defines a partition.dynamic_filter_hostname<see cref="T:System.String"></see>The value used for evaluating the HOST_NAME function in parameterized filters that defines a partition.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationMonitor.StatusOf(Microsoft.SqlServer.Replication.AgentType)">
			<summary>Returns the overall status for replication agents at the monitored Distributor by agent type. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ReplicationStatus"></see> object. </returns>
			<param name="agentType">An <see cref="T:Microsoft.SqlServer.Replication.AgentType"></see> value that specifies the type of agent.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationMonitor.ExcludeAnonymousSubscriptions">
			<summary>Gets whether or not information on anonymous subscriptions is returned. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, information on anonymous subscriptions is returned. If false, information on anonymous subscriptions is not returned.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationMonitor.Name">
			<summary>Gets the name of the instance of Microsoft SQL Server that is currently connected.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the instance of SQL Server.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationMonitor.PublisherMonitors">
			<summary>Gets a collection of <see cref="T:Microsoft.SqlServer.Replication.PublisherMonitor"></see> objects that are used to monitor Publishers that use a monitored Distributor. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.PublisherMonitorCollection"></see> object. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationMonitor.Status">
			<summary>Gets the overall status of replication on the Distributor, including all Publishers that use the Distributor. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ReplicationStatus"></see> object. </returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ReplicationObject">
			<summary>Abstract class that is the base class for all classes in the Replication Management Objects (RMO) programming interface.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationObject.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.ReplicationObject"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationObject.CommitPropertyChanges">
			<summary>Sends all the cached property change statements to the instance of Microsoft SQL Server.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationObject.Decouple">
			<summary>Decouples the referenced replication object from the server. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationObject.Load">
			<summary>Loads the properties of an existing object from the server. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationObject.LoadProperties">
			<summary>Loads the properties of an existing object from the server. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the object exists on the instance of Microsoft SQL Server. If false, the object does not exist on the instance of SQL Server.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationObject.Refresh">
			<summary>Reloads the properties of the object. </summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationObject.CachePropertyChanges">
			<summary>Gets or sets whether to cache changes made to the replication properties or to apply them immediately. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the property changes are cached. If false, the property changes are applied immediately.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationObject.ConnectionContext">
			<summary>Gets or sets the connection to an instance of Microsoft SQL Server. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationObject.IsExistingObject">
			<summary>Gets whether the object exists on the server or not. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the object represents an existing object. If false, the object represents an object that does not yet exist.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationObject.SqlServerName">
			<summary>Gets the name of the Microsoft SQL Server instance to which this object is connected. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationObject.UserData">
			<summary>Gets or sets an object property that allows users to attach their own data to the object. </summary>
			<returns>An <see cref="T:System.Object"></see> that contains user data. The data is only valid for the lifetime of the object.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ReplicationSchemaBoundView">
			<summary>Represents a schema-bound view and contains information needed by replication. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationSchemaBoundView.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.ReplicationSchemaBoundView"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationSchemaBoundView.Encrypted">
			<summary>Gets or sets whether the referenced schema-bound view was created with encryption or not. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the schema-bound view was created with encryption. If false, the schema-bound view was not created with encryption.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationSchemaBoundView.IsIndexed">
			<summary>Gets or sets whether an index was created on the referenced schema-bound view or not. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, an index was created on the schema-bound view. If false, an index was not created on the schema-bound view.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationSchemaBoundView.Name">
			<summary>Gets or sets the name of the schema-bound view. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationSchemaBoundView.OwnerName">
			<summary>Gets or sets the name of the owner of the schema-bound view. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationSchemaBoundView.UserData">
			<summary>Gets or sets an object that allows users to attach their own data to this object. </summary>
			<returns>An <see cref="T:System.Object"></see> that contains user data. The data is only valid for the lifetime of the object.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ReplicationSecurityMode">
			<summary>Specifies the supported security modes used by updating Subscribers when connecting to the Publisher. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ReplicationSecurityMode.Integrated">
			<summary>Uses the security context (SQL Server Authentication or Windows Authentication) of the user making the change at the Subscriber. This account must also exist at the Publisher with sufficient privileges. When using Windows Authentication, security account delegation must be supported. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ReplicationSecurityMode.PredefinedServer">
			<summary>Subscriber uses an existing, user-defined, linked server login created using <see cref="M:Microsoft.SqlServer.Replication.ReplicationDatabase.LinkPublicationForUpdateableSubscription(System.String,System.String,System.String,System.String,Microsoft.SqlServer.Replication.PublisherConnectionSecurityContext)"></see>. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ReplicationSecurityMode.SqlStandard">
			<summary>Subscriber uses SQL Server Authentication with the login specified by the <see cref="P:Microsoft.SqlServer.Replication.PublisherConnectionSecurityContext.SqlStandardLogin"></see> property of the <see cref="T:Microsoft.SqlServer.Replication.PublisherConnectionSecurityContext"></see> object.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ReplicationServer">
			<summary>Represents an instance of Microsoft SQL Server that is involved in replication. It can take the role of Distributor, Publisher, Subscriber, or any combination of them.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Replication.ReplicationServer"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.#ctor(Microsoft.SqlServer.Management.Common.ServerConnection)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Replication.ReplicationServer"></see> class with the specified connection context that is used to establish a connection with the instance of Microsoft SQL Server.</summary>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object that specifies the connection context that is used to establish a connection with the instance of SQL Server.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.AttachSubscriptionDatabase(System.String,System.String,Microsoft.SqlServer.Replication.ConnectionSecurityContext)">
			<summary>Attaches a copied subscription database at the Subscriber.</summary>
			<param name="subscriberSecurity">A <see cref="T:Microsoft.SqlServer.Replication.ConnectionSecurityContext"></see> that specifies the connection context that is used to establish a connection with the Subscriber.</param>
			<param name="databaseName">A string value that specifies the name of the database being attached.</param>
			<param name="fileName">A string value that specifies the complete path to, and the file name of, the data (.mdf) file being attached.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.ChangeDistributorPassword(System.Security.SecureString)">
			<summary>Changes the Distributor password, where the new password is supplied as a <see cref="T:System.Security.SecureString"></see> object.</summary>
			<param name="password">The new Distributor password is a <see cref="T:System.Security.SecureString"></see> value.When possible, prompt users to enter security credentials at run time. If you must store credentials, use the cryptographic serviceshttp://go.microsoft.com/fwlink/?LinkId=34733 provided by the Windows .NET Framework. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.ChangeDistributorPassword(System.String)">
			<summary>Changes the Distributor password. </summary>
			<param name="password">The new password string for the distributor_admin login.When possible, prompt users to enter security credentials at run time. If you must store credentials, use the cryptographic serviceshttp://go.microsoft.com/fwlink/?LinkId=34733 provided by the Windows .NET Framework. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.ChangeReplicationServerPasswords(Microsoft.SqlServer.Replication.ReplicationSecurityMode,System.String,System.Security.SecureString)">
			<summary>Changes all stored instances of the password for a login maintained on the replication server using a <see cref="T:System.Security.SecureString"></see> object.</summary>
			<param name="securityMode">Is the <see cref="T:Microsoft.SqlServer.Replication.ReplicationSecurityMode"></see> value that specifies whether the login is used for Windows Authentication or SQL Server Authentication.</param>
			<param name="login">Is the login for the stored password being changed.</param>
			<param name="password">Is the password being changed, supplied as a <see cref="T:System.Security.SecureString"></see> value.When possible, prompt users to enter security credentials at run time. If you must store credentials, use the cryptographic serviceshttp://go.microsoft.com/fwlink/?LinkId=34733 provided by the Windows .NET Framework. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.ChangeReplicationServerPasswords(Microsoft.SqlServer.Replication.ReplicationSecurityMode,System.String,System.String)">
			<summary>Changes all stored instances of the password for a login maintained on the replication server.</summary>
			<param name="securityMode">Is the <see cref="T:Microsoft.SqlServer.Replication.ReplicationSecurityMode"></see> value that specifies whether the login is used for Windows Authentication or SQL Server Authentication.</param>
			<param name="login">Is the login for the stored password being changed.</param>
			<param name="password">Is the password being changed.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.CopySubscriptionDatabase(System.String,System.String,System.Boolean)">
			<summary>Copies an existing pull subscription database. </summary>
			<param name="overwriteExistingFile">A Boolean value that specifies whether or not to overwrite an existing file of the same name specified in the fileName parameter, if there is one.</param>
			<param name="databaseName">A string value that specifies the name of a pull subscription database to copy.</param>
			<param name="fileName">A string value that specifies the complete path, including file name, to which a copy of the data portion (.mdf) file is saved.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.EnumAgentProfiles(Microsoft.SqlServer.Replication.AgentType)">
			<summary>Returns the replication agent performance profiles supported on the server.</summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.AgentProfile"></see> objects.</returns>
			<param name="agentType">An <see cref="T:Microsoft.SqlServer.Replication.AgentType"></see> enumeration value that indicates the type of agent profile to be returned.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.EnumBusinessLogicHandlers">
			<summary>Returns the business logic handlers registered at the server.</summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.BusinessLogicHandler"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.EnumCurrentPrincipals">
			<summary>Returns information for all published databases that are participating in database mirroring.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> object that contains the following columns.ColumnData typeDescriptiondb_namesysnameDatabase name.current_principalsysnameThe current principal for the mirrored database.mirroring_roletinyintCurrent role of the local database plays in the database mirroring session.1 = Principal2 = MirrorNULL = Database is not online. mirroring_statetinyintState of the mirror database and of the database mirroring session.0 = Suspended1 = Disconnected2 = Synchronizing 3 = Pending Failover4 = SynchronizedNULL = Database is not online. </returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.EnumCustomResolvers">
			<summary>Returns all custom conflict resolvers registered on the connected instance of SQL Server.</summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> object that contains an array of <see cref="T:Microsoft.SqlServer.Replication.CustomResolver"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.EnumDistributionDatabases">
			<summary>Returns the distribution databases installed when the currently connected instance of Microsoft SQL Server is a Distributor. </summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> object containing an array of <see cref="T:Microsoft.SqlServer.Replication.DistributionDatabase"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.EnumDistributionPublishers">
			<summary>Returns the Publishers using the currently connected instance of Microsoft SQL Server as their Distributor. </summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.DistributionPublisher"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.EnumHeterogeneousColumns(System.String,System.String,System.String)">
			<summary>Returns the columns in a table on a non-SQL Server Publisher.</summary>
			<returns>A <see cref="T:System.Collections.ArrayList"></see> containing an array of <see cref="T:Microsoft.SqlServer.Replication.HeterogeneousColumn"></see> objects.</returns>
			<param name="tableName">A string value that specifies the table to which the columns belong.</param>
			<param name="ownerName">A string value that specifies the owner of the table.</param>
			<param name="publisherName">A string value that specifies the non-SQL Server Publisher.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.EnumHeterogeneousTables(System.String)">
			<summary>Returns the available tables on a non-SQL Server Publisher.</summary>
			<returns>A <see cref="T:System.Collections.ArrayList"></see> containing a collection of <see cref="T:Microsoft.SqlServer.Replication.HeterogeneousTable"></see> objects.</returns>
			<param name="publisherName">A string value that specifies the Publisher.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.EnumRegisteredSubscribers">
			<summary>Returns the Subscribers that are registered at a Publisher.</summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.RegisteredSubscriber"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.EnumReplicationDatabases">
			<summary>Returns the databases enabled for replication. </summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.ReplicationDatabase"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.EnumSubscriberSubscriptions(System.String,System.Int32)">
			<summary>Returns the subscriptions on a Subscriber server. </summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.SubscriberSubscription"></see> objects. </returns>
			<param name="subscriptionType">An integer value that specifies the subscription type for the returned subscription:Push Pull and anonymous Both</param>
			<param name="databaseName">A <see cref="T:System.String"></see> value that specifies the database name from which the subscriptions are enumerated. Use a null value to enumerate subscriptions in all databases on the Subscriber.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.GetCurrentPrincipal(System.String)">
			<summary>Returns the current database mirroring principal for the specified publication database. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
			<param name="dbName">Name of a published database that participates in database mirroring.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.GetOriginalPublisher(System.String)">
			<summary>Returns the name of the originating Publisher for a published database participating in a database mirroring session. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
			<param name="dbName">Name of a published database that participates in database mirroring.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.InstallDistributor(System.Security.SecureString,Microsoft.SqlServer.Replication.DistributionDatabase)">
			<summary>Installs a Distributor on the currently connected instance of Microsoft SQL Server, where the password is specified using a <see cref="T:System.Security.SecureString"></see> object.</summary>
			<param name="distributionDB">A <see cref="T:Microsoft.SqlServer.Replication.DistributionDatabase"></see> object representing the distribution database used by the Distributor.</param>
			<param name="password">Is a <see cref="T:System.Security.SecureString"></see> value representing the password of the distributor_admin login used to access the Distributor. When possible, prompt users to enter security credentials at run time. If you must store credentials, use the cryptographic serviceshttp://go.microsoft.com/fwlink/?LinkId=34733 provided by the Windows .NET Framework. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.InstallDistributor(System.String,Microsoft.SqlServer.Replication.DistributionDatabase)">
			<summary>Installs a Distributor on the currently connected instance of Microsoft SQL Server.</summary>
			<param name="distributionDB">A <see cref="T:Microsoft.SqlServer.Replication.DistributionDatabase"></see> object representing the distribution database used by the Distributor.</param>
			<param name="password">Is the password of the distributor_admin login used to access the Distributor. When possible, prompt users to enter security credentials at run time. If you must store credentials, use the cryptographic serviceshttp://go.microsoft.com/fwlink/?LinkId=34733 provided by the Windows .NET Framework. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.InstallDistributor(System.String,System.Security.SecureString)">
			<summary>Registers a remote Distributor, where the password is specified using a <see cref="T:System.Security.SecureString"></see> object. </summary>
			<param name="distributionServerName">A <see cref="T:System.String"></see> value that specifies the name of the remote server to be used as the Distributor for the current Publisher server. The distribution server name cannot be the same as the current server.</param>
			<param name="password">A <see cref="T:System.Security.SecureString"></see> value that specifies the password. This is the same value used when calling <see cref="M:Microsoft.SqlServer.Replication.ReplicationServer.InstallDistributor(System.String,Microsoft.SqlServer.Replication.DistributionDatabase)"></see> at the Distributor.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.InstallDistributor(System.String,System.String)">
			<summary>Registers a remote Distributor. </summary>
			<param name="distributionServerName">A <see cref="T:System.String"></see> value that specifies the name of the remote server to be used as the Distributor for the current Publisher server. The distribution server name cannot be the same as the current server.</param>
			<param name="password">A <see cref="T:System.String"></see> value that specifies the password. This is the same value used when calling <see cref="M:Microsoft.SqlServer.Replication.ReplicationServer.InstallDistributor(System.String,Microsoft.SqlServer.Replication.DistributionDatabase)"></see> at the Distributor.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.RegisterBusinessLogicHandler(Microsoft.SqlServer.Replication.BusinessLogicHandler)">
			<summary>Registers a business logic handler assembly at the replication server.</summary>
			<param name="businessLogicHandler">A <see cref="T:Microsoft.SqlServer.Replication.BusinessLogicHandler"></see> object that represents the business logic handler being registered.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.Script(Microsoft.SqlServer.Replication.ScriptOptions)">
			<summary>Returns a Transact-SQL script to install or uninstall replication on the server. </summary>
			<returns>A <see cref="T:System.String"></see> value that contains the Transact-SQL script.</returns>
			<param name="scriptOption">A <see cref="T:Microsoft.SqlServer.Replication.ScriptOptions"></see> object value that specifies the scripting options.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.ScriptInstallDistributor(System.String,Microsoft.SqlServer.Replication.ScriptOptions)">
			<summary>Returns a Transact-SQL script that installs the Distributor.</summary>
			<returns>A <see cref="T:System.String"></see> value that contains the Transact-SQL script.</returns>
			<param name="scriptOption">A <see cref="T:Microsoft.SqlServer.Replication.ScriptOptions"></see> enumeration value that specifies the scripting options.</param>
			<param name="distributionServerName">The name of the Distributor.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.ScriptUninstallDistributor(Microsoft.SqlServer.Replication.ScriptOptions)">
			<summary>Returns a Transact-SQL script that can be used to uninstall the Distributor.</summary>
			<returns>A <see cref="T:System.String"></see> value that contains the Transact-SQL script.</returns>
			<param name="scriptOption">A <see cref="T:Microsoft.SqlServer.Replication.ScriptOptions"></see> object value that specifies the scripting options.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.UninstallDistributor(System.Boolean)">
			<summary>Uninstalls replication publishing and distribution on the currently connected instance of SQL Server. </summary>
			<param name="force">A <see cref="T:System.Boolean"></see> value that specifies whether or not replication objects are removed from the server, even if a remote Distributor cannot be reached. If true, the publishing and Distributor configuration at the current server is uninstalled regardless of whether or not dependent publishing and distribution objects are uninstalled. If false, all dependent publishing and distribution objects are dropped before the Distributor is uninstalled.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationServer.UnregisterBusinessLogicHandler(Microsoft.SqlServer.Replication.BusinessLogicHandler)">
			<summary>Removes the registration for a business logic handler from a replication server.</summary>
			<param name="businessLogicHandler">A <see cref="T:Microsoft.SqlServer.Replication.BusinessLogicHandler"></see> object that represents the business logic handler registration being removed.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationServer.AgentCheckupInterval">
			<summary>Gets or sets the interval for the Distribution Agent to perform a checkup.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the interval for the distribution to perform a checkup.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationServer.DistributionDatabase">
			<summary>Gets the name of the distribution database for the currently connected instance of SQL Server. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the distribution database.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationServer.DistributionDatabases">
			<summary>Gets the distribution databases defined on the replication server.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.DistributionDatabaseCollection"></see> object that represents all the distribution databases that exist on the replication server. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationServer.DistributionPublishers">
			<summary>Gets the Publishers that use the currently connected instance of Microsoft SQL Server as a Distributor.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.DistributionPublisherCollection"></see> object that represents all the Publishers using the replication server as a Distributor. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationServer.DistributionServer">
			<summary>Gets or sets the name of the Distributor for the currently connected instance of SQL Server.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the instance of SQL Server that is the Distributor.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationServer.DistributorAvailable">
			<summary>Gets whether the Distributor for the currently connected instance of Microsoft SQL Server is currently connected and available or not.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether or not the Distributor is currently connected and available.If true, the Distributor is connected and available.If false, the Distributor is not available.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationServer.DistributorInstalled">
			<summary>Gets whether the currently connected instance of SQL Server has a local or remote Distributor. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether the Publisher uses a local or remote Distributor.If true, the Distributor is local.If false, the Distributor for this Publisher is on a remote server.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationServer.HasRemotePublisher">
			<summary>Gets whether or not the currently connected instance of Microsoft SQL Server is a Distributor with a remote Publisher. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether or not the Distributor has a remote Publisher.If true, the server is a Distributor with a remote Publisher.If false, the Publisher is not installed remotely, or the server is not a Distributor.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationServer.IsDistributor">
			<summary>Gets whether the currently connected instance of SQL Server is a Distributor or not.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether the currently connected instance of SQL Server is a Distributor or not.If true, the instance of SQL Server is a Distributor.If false, the instance of SQL Server is not a Distributor.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationServer.IsPublisher">
			<summary>Gets whether or not the currently connected instance of Microsoft SQL Server is a Publisher.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether or not the currently connected instance of SQL Server is a Publisher.If true, the instance of SQL Server is a Publisher.If false, the instance of SQL Server is not a Publisher.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationServer.Name">
			<summary>Gets the name of the instance of Microsoft SQL Server.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the currently connected instance of SQL Server.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationServer.RegisteredSubscribers">
			<summary>Gets the Subscribers registered with the Publisher. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.RegisteredSubscriberCollection"></see> object that represents all the registered Subscribers when the currently connected instance of SQL Server is a Publisher. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationServer.ReplicationDatabases">
			<summary>Gets the databases enabled for replication in the connected instance of Microsoft SQL Server. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ReplicationDatabaseCollection"></see> object that represents all the databases enabled for replication on the server. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationServer.WorkingDirectory">
			<summary>Gets the working directory used by a Publisher.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the working directory.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ReplicationStatus">
			<summary>Specifies the status of a replication agent job.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ReplicationStatus.Failed">
			<summary>The agent has failed to accomplish one of its tasks.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ReplicationStatus.Idle">
			<summary>The agent is idle.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ReplicationStatus.NotStarted">
			<summary>The agent has not started.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ReplicationStatus.Retry">
			<summary>The agent is retrying.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ReplicationStatus.Running">
			<summary>The agent is running.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ReplicationStatus.Starting">
			<summary>The agent is starting.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ReplicationStatus.Succeeded">
			<summary>The agent has succeeded. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ReplicationStatusAndWarning">
			<summary>Represents replication agent status information and threshold monitor warnings. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationStatusAndWarning.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.ReplicationStatusAndWarning"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationStatusAndWarning.ReturnTimestamp">
			<summary>Gets or sets a timestamp that indicates when the data was returned.</summary>
			<returns>A <see cref="T:System.String"></see> value that represents a date and time value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationStatusAndWarning.Status">
			<summary>Gets or sets the agent status.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ReplicationStatus"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationStatusAndWarning.UserData">
			<summary>Gets or sets an object that allows users to attach their own data. </summary>
			<returns>An <see cref="T:System.Object"></see> that contains user data. The data is only valid for the lifetime of the object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationStatusAndWarning.Warning">
			<summary>Gets or sets the threshold monitor warning.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ReplicationWarnings"></see> value. </returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ReplicationStoredProcedure">
			<summary>Represents information on a stored procedure object that is required by replication. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationStoredProcedure.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.ReplicationStoredProcedure"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationStoredProcedure.Encrypted">
			<summary>Gets or sets whether the referenced stored procedure was created with encryption or not. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the stored procedure was created with encryption. If false, the stored procedure was not created with encryption.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationStoredProcedure.Name">
			<summary>Gets or sets the name of the stored procedure. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationStoredProcedure.OwnerName">
			<summary>Gets or sets the owner of the stored procedure. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationStoredProcedure.UserData">
			<summary>Gets or sets an object that allows users to attach their own data to the object. </summary>
			<returns>An <see cref="T:System.Object"></see> that contains user data. The data is only valid for the lifetime of the object.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ReplicationTable">
			<summary>Represents information on a table object that is required by replication. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationTable.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.ReplicationTable"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationTable.#ctor(System.String,System.String,System.String,Microsoft.SqlServer.Management.Common.ServerConnection)">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.ReplicationTable"></see> class with the specified name and owner, on the specified database, and with the specified connection to an instance of Microsoft SQL Server.</summary>
			<param name="databaseName">A <see cref="T:System.String"></see> value that specifies the database to which the replication table belongs.</param>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object that specifies the connection context that is used to establish a connection with the instance of SQL Server.</param>
			<param name="ownerName">A <see cref="T:System.String"></see> value that specifies the owner of the database. If no value is specified, then the db_owner user is assumed.</param>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of the database.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationTable.EnumIdentityRangeInfo">
			<summary>Returns identity range information about articles based on the table. </summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.IdentityRangeInfo"></see> objects. </returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationTable.EnumReplicationColumns">
			<summary>Returns the columns from the table that can be replicated. </summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.ReplicationColumn"></see> objects. </returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationTable.ReplicationAddColumn(System.String,System.String,Microsoft.SqlServer.Replication.AddColumnOption,System.String[],System.String)">
			<summary>Adds a column to a table that is already published in one or more publications. </summary>
			<param name="columnName">A <see cref="T:System.String"></see> value that specifies the name of the column to be added.</param>
			<param name="publicationNames">A <see cref="T:System.String"></see> array that contains the names of publications to which the column is to be included. This parameter is used only when addType is Some.</param>
			<param name="addType">An <see cref="T:Microsoft.SqlServer.Replication.AddColumnOption"></see> object value that specifies whether to include the column in some, all, or no publications. If <see cref="F:Microsoft.SqlServer.Replication.AddColumnOption.Some"></see> is specified, the publicationNames parameter cannot be empty.</param>
			<param name="schemaChangeScript">An optional <see cref="T:System.String"></see> value that specifies a schema change script to propagate to the Subscriber. This is only valid for transactional and snapshot publications. Use null or empty string if you do not want to specify this parameter.</param>
			<param name="typeText">A <see cref="T:System.String"></see> value that contains the syntax that follows the column_name parameter in the ALTER TABLE statement in Transact-SQL.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationTable.ReplicationDropColumn(System.String,System.String)">
			<summary>Removes a column from a table that is published in one or more publications. </summary>
			<param name="columnName">A <see cref="T:System.String"></see> value that specifies the name of the column to be removed.</param>
			<param name="schemaChangeScript">An optional <see cref="T:System.String"></see> value that specifies a schema change script to propagate to the Subscriber. This is only valid for transactional and snapshot publications. Use null or empty string if you do not want to specify this parameter.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationTable.DatabaseName">
			<summary>Gets or sets the name of the database that contains the replication table.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationTable.HasBigIntColumn">
			<summary>Gets whether or not the table has at least one column of the bigint data type. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the table has a bigint column. If false, the table has no bigint columns.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationTable.HasBigIntIdentityColumn">
			<summary>Gets whether or not the table has at least one identity column of the bigint data type. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the table has a bigint identity column. If false, the table has no bigint identity columns.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationTable.HasGuidColumn">
			<summary>Gets whether or not the table has at least one globally unique identifier column. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the table has a globally unique identifier column. If false, the table has no globally unique identifier columns.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationTable.HasIdentityColumn">
			<summary>Gets whether or not the table has at least one identity column. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the table has an identity column. If false, the table has no identity columns.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationTable.HasIdentityNotForReplicationColumn">
			<summary>Gets whether or not the table has an identity column with the NOT FOR REPLICATION option set.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the table has an identity column with the NOT FOR REPLICATION option set. If false, the table has no identity columns with the NOT FOR REPLICATION option set.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationTable.HasImprecisePKColumn">
			<summary>Gets whether or not an imprecise computed column is used as part of the primary key.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the table has an imprecise computed column that is part of the primary key. If false, the table has no imprecise computed columns that are part of the primary key.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationTable.HasPrimaryKey">
			<summary>Gets whether or not the table has a primary key.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the table has primary key. If false, the table has no primary key.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationTable.HasRowVersionColumn">
			<summary>Gets whether or not a column exists in the table with the name msrepl_tran_version.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the table has a column named msrepl_tran_version. If false, the table does not have a column named msrepl_tran_version.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationTable.HasSqlVariantColumn">
			<summary>Gets whether or not the table has a sql_variant type column.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the table has at least one sql_variant column. If false, the table does not have a sql_variant column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationTable.HasTimestampColumn">
			<summary>Gets whether or not the table has a timestamp type column. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the table has at least one timestamp column. If false, the table does not have a timestamp column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationTable.Name">
			<summary>Gets or sets the name of the table.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationTable.OwnerName">
			<summary>Gets or sets the name of table owner. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationTable.PublishedInMerge">
			<summary>Gets whether or not the table is published in a merge publication.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the table is published in a merge publication. If false, the table is not published in a merge publication. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationTable.PublishedInPeerToPeerPublication">
			<summary>Gets whether or not the table is published in a peer-to-peer transactional replication topology.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the table is published using peer-to-peer transactional replication. If false, the table is not published using peer-to-peer transactional replication. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationTable.PublishedInQueuedTransactions">
			<summary>Gets whether or not the table is published by a publication that supports queued updating subscriptions.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the table is published by a publication that supports queued updating subscriptions. If false, the table is not published by a publication that supports queued updating subscriptions. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationTable.TableId">
			<summary>Gets the object ID of the table.</summary>
			<returns>An <see cref="T:System.Int32"></see> value. </returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ReplicationUserDefinedAggregate">
			<summary>Represents a user-defined aggregate function and contains information needed by replication. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationUserDefinedAggregate.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.ReplicationUserDefinedAggregate"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationUserDefinedAggregate.Name">
			<summary>Gets or sets the name of the user-defined aggregate function.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationUserDefinedAggregate.OwnerName">
			<summary>Gets or sets the owner of the user-defined aggregate function. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationUserDefinedAggregate.UserData">
			<summary>Gets or sets an object that allows users to attach their own data to this object. </summary>
			<returns>An <see cref="T:System.Object"></see> that contains user data. The data is only valid for the lifetime of the object.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ReplicationUserDefinedFunction">
			<summary>Represents a user-defined function and contains information needed by replication. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationUserDefinedFunction.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.ReplicationUserDefinedFunction"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationUserDefinedFunction.Encrypted">
			<summary>Gets or sets whether the referenced user-defined function was created with encryption or not. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the user-defined function was created with encryption. If false, the user-defined function was not created with encryption.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationUserDefinedFunction.Name">
			<summary>Gets or sets the name of the user-defined function object.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationUserDefinedFunction.OwnerName">
			<summary>Gets or sets the owner of the user-defined function. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationUserDefinedFunction.UserData">
			<summary>Gets or sets an object that allows users to attach their own data to the object. </summary>
			<returns>An <see cref="T:System.Object"></see> that contains user data. The data is only valid for the lifetime of the object.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ReplicationView">
			<summary>Represents information on a view object that is required by replication. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.ReplicationView.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.ReplicationView"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationView.Encrypted">
			<summary>Gets or sets whether the referenced view was created with encryption or not. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the view was created with encryption. If false, the view was not created with encryption.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationView.Name">
			<summary>Gets or sets the name of the view object. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationView.OwnerName">
			<summary>Gets or sets the owner of the view. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.ReplicationView.UserData">
			<summary>Gets or sets an object that allows users to attach their own data to the object. </summary>
			<returns>An <see cref="T:System.Object"></see> that contains user data. The data is only valid for the lifetime of the object.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ReplicationWarnings">
			<summary>Enumerates the supported replication threshold monitor warning values. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ReplicationWarnings.Expiration">
			<summary>The expiration of a subscription to a transactional or snapshot publication. The time since the last synchronization exceeds the expiration threshold (the percentage of retention in hours).</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ReplicationWarnings.FastLinkMergeRunDuration">
			<summary>The time taken for the Merge Agent to finish one merge run in a slow connection, such as a dial-up network, exceeds the slow link merge run threshold.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ReplicationWarnings.FastLinkMergeRunSpeed">
			<summary>The merge delivery rate in a fast connection, such as a local area network, exceeds the fast link merge run speed threshold.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ReplicationWarnings.Latency">
			<summary>The time taken to replicate data from the transactional Publisher (committed) to the Subscriber (committed) exceeds the latency threshold.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ReplicationWarnings.MergeExpiration">
			<summary>The expiration of a subscription to a transactional or snapshot publication. The time since the last synchronization exceeds the expiration threshold (the percentage of retention in hours).</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ReplicationWarnings.None">
			<summary>Nothing exceeds the thresholds, or the thresholds are not defined.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ReplicationWarnings.SlowLinkMergeRunDuration">
			<summary>The time taken for the Merge Agent to finish one merge run in a slow connection, such as a dial-up network, exceeds the slow link merge run threshold.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ReplicationWarnings.SlowLinkMergeRunSpeed">
			<summary>The merge delivery rate in a slow connection, such as a dial-up network, exceeds the slow link merge run speed threshold. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ResynchronizeType">
			<summary>Enumerates values that specify the changes to apply when a merge subscription is resynchronized. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ResynchronizeType.SinceGivenDateTime">
			<summary>Resynchronizes the subscription with all of the changes since a given date and time.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ResynchronizeType.SinceLastSnapshotApplied">
			<summary>Resynchronizes the subscription with all of the changes since the last snapshot was applied. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ResynchronizeType.SinceLastSuccessfulValidation">
			<summary>Resynchronizes the subscription with all of the changes since the last successful validation.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.RetentionPeriodUnits">
			<summary>Enumerates values that specify the units for the retention period.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.RetentionPeriodUnits.Days">
			<summary>Retention period is specified in days.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.RetentionPeriodUnits.Months">
			<summary>Retention period is specified in months.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.RetentionPeriodUnits.Weeks">
			<summary>Retention period is specified in weeks.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.RetentionPeriodUnits.Years">
			<summary>Retention period is specified in years. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ScheduleConstant">
			<summary>Enumerates constant values used to set replication schedules.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScheduleConstant.NoEndDate">
			<summary>There is no end date.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScheduleConstant.NoEndTime">
			<summary>There is no end time.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ScheduleFrequencySubDay">
			<summary>Enumerates values that specify a smaller scheduling unit for specific schedule frequencies. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScheduleFrequencySubDay.Hour">
			<summary>Schedules reflect an activity scheduled using an hour as the unit. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScheduleFrequencySubDay.Minute">
			<summary>Schedules reflect an activity scheduled using a minute as the unit. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScheduleFrequencySubDay.Once">
			<summary>Schedules reflect an activity that occurs once on a scheduled unit. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScheduleFrequencySubDay.Unknown">
			<summary>Sub-units are not valid for the scheduled activity.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScheduleFrequencySubDay.Valid">
			<summary>Masks to test schedule validity.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ScheduleFrequencyType">
			<summary>Enumerates the types of frequencies used when scheduling a replication agent job.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScheduleFrequencyType.Continuously">
			<summary>The replication agent job is started when the Microsoft SQL Server Agent Service starts.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScheduleFrequencyType.Daily">
			<summary>The replication agent job is run daily. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScheduleFrequencyType.Monthly">
			<summary>The replication agent job is run monthly. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScheduleFrequencyType.MonthlyRelative">
			<summary>The replication agent job is run relative to a part of a month, such as the second week. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScheduleFrequencyType.OnDemand">
			<summary>The Microsoft SQL Server Agent Service schedules the replication agent job when it is specifically requested. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScheduleFrequencyType.OnIdle">
			<summary>The Microsoft SQL Server Agent Service runs the replication agent job any time when the processor is idle. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScheduleFrequencyType.Unknown">
			<summary>No schedule frequency, or frequency not applicable. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScheduleFrequencyType.Weekly">
			<summary>The replication agent job is run weekly. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ScheduleRelativeIntervals">
			<summary>Enumerates values that represent the frequency of a replication agent schedule relative to the <see cref="T:Microsoft.SqlServer.Replication.ScheduleFrequencyType"></see>. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScheduleRelativeIntervals.First">
			<summary>The event occurs on the first sub-unit. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScheduleRelativeIntervals.Fourth">
			<summary>The event occurs on the fourth sub-unit. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScheduleRelativeIntervals.Last">
			<summary>The event occurs on the last sub-unit. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScheduleRelativeIntervals.Second">
			<summary>The event occurs on the second sub-unit. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScheduleRelativeIntervals.Third">
			<summary>The event occurs on the third sub-unit. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScheduleRelativeIntervals.Unknown">
			<summary>Does not schedule relatively, or relative scheduling is not applicable. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScheduleRelativeIntervals.Valid">
			<summary>Masks of all valid relative scheduling unit values. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ScriptOptions">
			<summary>Enumerates options for generating scripts that are used to create or remove replication objects. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.Creation">
			<summary>Specifies that the generated script is for creating replication objects. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.Deletion">
			<summary>Specifies that the script is for deleting a replication object. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.DisableReplicationDB">
			<summary>Specifies that the script is a deletion script that disables publishing on a database and removes any agent jobs needed for publishing. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.EnableReplicationDB">
			<summary>Specifies that the script is a creation script that enables publishing on a database and creates any agent jobs needed for publishing. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludeAgentProfiles">
			<summary>Specifies that the script includes all user-defined replication agent profiles defined on the Distributor.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludeAll">
			<summary>Specifies that the script includes all possible replication objects that can exist, which is equivalent to setting all values of <see cref="T:Microsoft.SqlServer.Replication.ScriptOptions"></see>.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludeArticles">
			<summary>Specifies that the script includes articles.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludeChangeDestinationDataTypes">
			<summary>Specifies that the script includes any user-defined data type mappings. This option is only supported for non-SQL Server Publishers when the <see cref="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludeArticles"></see> option is enabled. This option is only supported on SQL Server 2005 and later versions.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludeCreateDistributionAgent">
			<summary>Specifies that the script includes Distribution Agent jobs.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludeCreateLogreaderAgent">
			<summary>Specifies that the script includes Log Reader Agent jobs.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludeCreateMergeAgent">
			<summary>Specifies that the script includes Merge Agent jobs.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludeCreateQueuereaderAgent">
			<summary>Specifies that the script includes Queue Reader Agent jobs.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludeCreateSnapshotAgent">
			<summary>Specifies that the script includes Snapshot Agent jobs.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludeDisableReplicationDB">
			<summary>Specifies that the script disables publishing on a database and removes any agent jobs needed for publishing. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludeDistributionPublishers">
			<summary>Specifies that the script includes Publishers.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludeEnableReplicationDB">
			<summary>Specifies that the script enables publishing on a database and creates any agent jobs needed for publishing. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludeGo">
			<summary>Specifies that the script includes the GO command at the end of a batch.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludeInstallDistributor">
			<summary>Specifies that the script installs publishing objects at the Distributor.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludeMergeDynamicSnapshotJobs">
			<summary>Specifies that the script includes the definition of any existing partitioned snapshot jobs for merge publications with parameterized row filters. This option is only supported for Microsoft SQL Server 2000 and later versions.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludeMergeJoinFilters">
			<summary>Specifies that the script includes the definition of all join filters defined for a merge publication.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludeMergePartitions">
			<summary>Specifies that the script includes the definition of any existing partitions for merge publications with parameterized row filters. This option is supported for Microsoft SQL Server 2005 and later versions.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludeMergePublicationActivation">
			<summary>Specifies that the script includes setting the status of a merge publication to active. This option is supported for SQL Server 2005 and later versions.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludePartialSubscriptions">
			<summary>Specifies that the script includes subscriptions to transactional publications that do not subscribe to all articles in the publication.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludePublicationAccesses">
			<summary>Specifies that the script includes all logins added to the publication access list (PAL). This option is only supported for publication creation scripts. Deleting a publication automatically removes the PAL.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludePublications">
			<summary>Specifies that the script includes publications.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludePublisherSideSubscriptions">
			<summary>Specifies that the script includes the registration of all subscriptions at the Publisher.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludePullSubscriptions">
			<summary>Specifies that the script includes all pull subscriptions.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludeRegisteredSubscribers">
			<summary>Specifies that the script includes the registration of all Subscribers at the Publisher.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludeReplicationJobs">
			<summary>Specifies that the script includes the definition of all SQL Server Agent jobs created by replication. This option is supported for SQL Server 2005 and later versions.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.IncludeUninstallDistributor">
			<summary>Specifies that the script uninstalls publishing objects at the Distributor.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.InstallDistributor">
			<summary>Specifies a creation script that installs publishing objects at the Distributor.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.None">
			<summary>Clears all scripting options.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ScriptOptions.UninstallDistributor">
			<summary>Specifies a deletion script that uninstalls publishing objects at the Distributor.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.State">
			<summary>Enumerates the values that represent the status of a publication.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.State.Active">
			<summary>The publication is active. Publication data is available for Subscribers. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.State.Inactive">
			<summary>The publication is inactive. Publication data is not available for Subscribers.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.SubscriberSubscription">
			<summary>Returns information about a subscription. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.SubscriberSubscription.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.SubscriberSubscription"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SubscriberSubscription.LastAgentStatus">
			<summary>Gets or sets status information from last run of the synchronization agent.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ReplicationStatus"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SubscriberSubscription.LastAgentSummary">
			<summary>Gets or sets the last agent summary message during synchronization. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SubscriberSubscription.LastAgentSyncDateTime">
			<summary>Gets or sets the date and time of the last run of the synchronization agent. </summary>
			<returns>A <see cref="T:System.String"></see> value that represents and date and time value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SubscriberSubscription.PublicationDBName">
			<summary>Gets or sets the name of the publication database. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SubscriberSubscription.PublicationName">
			<summary>Gets or sets the name of the publication to which the subscription is subscribed. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SubscriberSubscription.PublisherName">
			<summary>Gets or sets the name of the Publisher. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SubscriberSubscription.SubscriptionDBName">
			<summary>Gets or sets the name of the subscription database. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SubscriberSubscription.SubscriptionType">
			<summary>Gets or sets the subscription type.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.SubscriptionOption"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SubscriberSubscription.Type">
			<summary>Gets or sets the type of publication to which the subscription is subscribed. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.PublicationType"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SubscriberSubscription.UpdateMode">
			<summary>Gets or sets the update mode for an updating subscription to a transactional publication.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.TransSubscriberType"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SubscriberSubscription.UserData">
			<summary>Gets or sets an object property that allows users to attach their own data to this object. </summary>
			<returns>An <see cref="T:System.Object"></see> that contains the user data. The data is only valid for the lifetime of the object.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.SubscriberType">
			<summary>Enumerates the types of data sources that can be a Subscriber to a publication. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriberType.JetDatabase">
			<summary>Microsoft Jet version 3.5 database using ODBC without a data source name. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriberType.OdbcDataSource">
			<summary>ODBC data source.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriberType.OleDBDataSource">
			<summary>OLE DB provider or a Jet version 4.0 database persisted as a Microsoft SQL Server linked server. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriberType.SqlServer">
			<summary>SQL Server instance.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.SubscriberUploadOptions">
			<summary>Enumerates merge article options for updates made at a Subscriber with a client subscription.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriberUploadOptions.AllowUpload">
			<summary>No restrictions. Changes made at the Subscriber are uploaded to the Publisher.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriberUploadOptions.DisableUploadAllowSubscriberChanges">
			<summary>Changes are allowed at the Subscriber, but they are not uploaded to the Publisher.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriberUploadOptions.DisableUploadDisallowSubscriberChanges">
			<summary>Changes are not allowed at the Subscriber.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.Subscription">
			<summary>Represents information at the Publisher for a subscription to either a merge or a transactional publication. <see cref="T:Microsoft.SqlServer.Replication.Subscription"></see> is a base class from which the <see cref="T:Microsoft.SqlServer.Replication.TransSubscription"></see> class and the <see cref="T:Microsoft.SqlServer.Replication.MergeSubscription"></see> class are derived.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.Subscription.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.Subscription"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.Subscription.Create">
			<summary>Creates the subscription registration at the Publisher.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.Subscription.Remove">
			<summary>Deletes the subscription registration at the Publisher and removes replication objects at the Subscriber for a push subscription.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.Subscription.Script(Microsoft.SqlServer.Replication.ScriptOptions)">
			<summary>Returns a Transact-SQL script that can be used to create or delete the subscription. </summary>
			<returns>A <see cref="T:System.String"></see> value that contains the Transact-SQL script.</returns>
			<param name="scriptOption">A <see cref="T:Microsoft.SqlServer.Replication.ScriptOptions"></see> value that specifies the scripting options.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Subscription.AgentJobId">
			<summary>Gets the ID of the agent job used to synchronize the subscription.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Subscription.AgentOffload">
			<summary>Gets or sets whether the synchronization agent runs on a computer other than the one where the agent job was created. This property is no longer supported for Distributors running Microsoft SQL Server 2005 and later.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the agent runs on another computer and is launched using a DCOM process. If false, the agent runs on the computer where the agent job was created.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Subscription.AgentOffloadServer">
			<summary>Gets or sets the name of the remote computer where the agent runs when using remote agent activation. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Subscription.AgentSchedule">
			<summary>Gets the schedule for the agent job used to synchronize the subscription. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ReplicationAgentSchedule"></see> object that represents the schedule for the subscription.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Subscription.CreateSyncAgentByDefault">
			<summary>Gets or sets whether the agent job used to synchronize the subscription is created by default.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the agent job is created. If false, the agent job is not created.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Subscription.DatabaseName">
			<summary>Gets or sets the name of the publication database.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Subscription.EnabledForSynchronizationManager">
			<summary>Specifies whether the subscription can be synchronized using Microsoft Windows Synchronization Manager.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that is always false, even when an existing subscription is enabled to use Windows Synchronization Manager.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Subscription.Name">
			<summary>Gets the name assigned to an existing subscription.</summary>
			<returns>A <see cref="T:System.String"></see> value in the format &lt;<see cref="P:Microsoft.SqlServer.Replication.Subscription.SubscriberName"></see>&gt;:&lt;<see cref="P:Microsoft.SqlServer.Replication.Subscription.SubscriptionDBName"></see>&gt;. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Subscription.PublicationName">
			<summary>Gets or sets the name of the publication to which the subscription subscribes.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Subscription.Status">
			<summary>Gets the status of the subscription.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.SubscriptionState"></see> object specifies the status of the subscription. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Subscription.SubscriberName">
			<summary>Gets or sets the name of the instance of Microsoft SQL Server that is the Subscriber. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Subscription.SubscriberSecurity">
			<summary>Gets the security context used to connect to the Subscriber.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ConnectionSecurityContext"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Subscription.SubscriptionDBName">
			<summary>Gets or sets the name of the database on the Subscriber that receives the replicated data.</summary>
			<returns>A string value that specifies the name of subscription database. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Subscription.SubscriptionType">
			<summary>Gets whether the subscription registration is for a push or pull subscription. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.SubscriptionOption"></see> value. If <see cref="F:Microsoft.SqlServer.Replication.SubscriptionOption.Push"></see>, the subscription is a push subscription.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Subscription.SynchronizationAgentName">
			<summary>Gets or sets the name of the agent job created to synchronize the subscription. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Subscription.SynchronizationAgentProcessSecurity">
			<summary>Gets the security context that is used to specify the Microsoft Windows account under which the synchronization agent job runs to synchronize the subscription.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Replication.IProcessSecurityContext"></see> object that represents a Windows account. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.Subscription.SyncType">
			<summary>Gets or sets the manner in which the subscription is initialized. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.SubscriptionSyncType"></see> value. </returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.SubscriptionBackupDeviceType">
			<summary>Enumerates backup devices that can be used to initialize a subscription.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriptionBackupDeviceType.Disk">
			<summary>Disk drive backup device.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriptionBackupDeviceType.Logical">
			<summary>Logical drive backup device.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriptionBackupDeviceType.Tape">
			<summary>Tape drive backup device.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.SubscriptionBackupInformation">
			<summary>Represents information required to initialize a subscription from a backup.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.SubscriptionBackupInformation.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.SubscriptionBackupInformation"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SubscriptionBackupInformation.BackupDeviceName">
			<summary>Gets or sets the name of the backup device used to initialize the subscription.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SubscriptionBackupInformation.BackupDeviceType">
			<summary>Gets or sets the type of backup device used to initialize the subscription.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.SubscriptionBackupDeviceType"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SubscriptionBackupInformation.FileNumberHint">
			<summary>Gets or sets the file number hint on the backup device.</summary>
			<returns>An <see cref="T:System.Int32"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SubscriptionBackupInformation.MediaPassword">
			<summary>Gets or sets the password required to access the media set on the backup device.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SubscriptionBackupInformation.Password">
			<summary>Gets or sets the password required to access the backup device.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SubscriptionBackupInformation.SecureMediaPassword">
			<summary>Gets or sets the password (as a <see cref="T:System.Security.SecureString"></see> object) required to access the media set on the backup device.</summary>
			<returns>A <see cref="T:System.Security.SecureString"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SubscriptionBackupInformation.SecurePassword">
			<summary>Gets or sets the password (as a <see cref="T:System.Security.SecureString"></see> object) required to access the backup device.</summary>
			<returns>A <see cref="T:System.Security.SecureString"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SubscriptionBackupInformation.Unload">
			<summary>Gets or sets whether to unload the backup media set after the subscription has been initialized.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the backup media is unloaded after initialization. If false, the backup media is not unloaded after initialization.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.SubscriptionResultOption">
			<summary>Enumerates options for returning monitored subscriptions. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriptionResultOption.AllSubscriptions">
			<summary>Returns all subscriptions.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriptionResultOption.InErrorAndWarningOnly">
			<summary>Returns subscriptions with an error or warning status.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriptionResultOption.InErrorOnly">
			<summary>Returns subscriptions with an error status. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriptionResultOption.InWarningOnly">
			<summary>Returns subscriptions with a warning status. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriptionResultOption.NotSynchronizing">
			<summary>Returns subscriptions that are not currently synchronizing.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriptionResultOption.Synchronizing">
			<summary>Returns subscriptions that are currently synchronizing.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriptionResultOption.Top25WorstPerforming">
			<summary>Returns the top 25 worst performing subscriptions.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriptionResultOption.Top50WorstPerforming">
			<summary>Returns the top 50 worst performing subscriptions.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.SubscriptionState">
			<summary>Enumerates options for the status of a subscription. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriptionState.Active">
			<summary>The subscription is active.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriptionState.Inactive">
			<summary>The subscription is inactive.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriptionState.Subscribed">
			<summary>The subscription exists, but the initial snapshot has not yet been applied. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.SubscriptionSyncType">
			<summary>Enumerates options for how the initial synchronization is performed for a subscription. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriptionSyncType.Automatic">
			<summary>Schema and initial data for published tables are transferred to the Subscriber when the initial snapshot is applied.  </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriptionSyncType.InitializeWithBackup">
			<summary>Schema and initial data for published tables are obtained from a backup of the publication database. This option assumes that the Subscriber has access to a backup of the publication database. This option is only supported for transactional publications. The location of the backup and media type for the backup are specified by <see cref="P:Microsoft.SqlServer.Replication.SubscriptionBackupInformation.BackupDeviceName"></see> and <see cref="P:Microsoft.SqlServer.Replication.SubscriptionBackupInformation.BackupDeviceType"></see>. When using this option, a peer-to-peer transactional replication topology need not be quiesced during configuration. This option is not supported for subscriptions to non-SQL Server publications. This option is only available for SQL Server 2005 and later.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriptionSyncType.None">
			<summary>Subscriber already has the schema and initial data for published tables. This option is supported for merge publications. This option has been deprecated for transactional publications. Use <see cref="F:Microsoft.SqlServer.Replication.SubscriptionSyncType.ReplicationSupportOnly"></see> instead.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.SubscriptionSyncType.ReplicationSupportOnly">
			<summary>Provides automatic generation at the Subscriber of article custom stored procedures and triggers that support updating subscriptions. This option is supported only for transactional publications. This option assumes that Subscriber already has the schema and initial data for published tables. When configuring a peer-to-peer transactional replication topology, ensure that the data at all nodes in the topology is identical. Quiesce the replication topology before configuring peer-to-peer transactional replication using this option. This option is only available for SQL Server 2005 and later. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.SynchronizationPartner">
			<summary>Represents an alternate Publisher used to synchronize a subscription to a merge publication. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.SynchronizationPartner.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.SynchronizationPartner"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SynchronizationPartner.Description">
			<summary>Gets or sets a description for the alternate Publisher. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SynchronizationPartner.Distributor">
			<summary>Gets or sets the name of the Distributor. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SynchronizationPartner.Enabled">
			<summary>Gets or sets whether or not this Publisher is enabled as an alternate synchronization partner. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the synchronization partner is enabled. If false, the synchronization partner is not enabled.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SynchronizationPartner.Publication">
			<summary>Gets or sets the name of the publication. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SynchronizationPartner.PublicationDB">
			<summary>Gets or sets the name of the publication database. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SynchronizationPartner.Publisher">
			<summary>Gets or sets the name of the alternate Publisher. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.SynchronizationPartner.UserData">
			<summary>Gets or sets an object property that allows users to attach their own data to this object.</summary>
			<returns>An <see cref="T:System.Object"></see> that contains user data. The data is only valid for the lifetime of the object.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.TracerToken">
			<summary>Represents tracer token information.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TracerToken.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.TracerToken"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TracerToken.PublisherCommitTime">
			<summary>Gets or sets the time at which the tracer record was committed at the Publisher.</summary>
			<returns>A <see cref="T:System.DateTime"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TracerToken.TracerTokenId">
			<summary>Gets or sets the ID of the tracer token.</summary>
			<returns>An <see cref="T:System.Int32"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TracerToken.UserData">
			<summary>Gets or sets an object property that allows users to attach their own data to this object.</summary>
			<returns>An <see cref="T:System.Object"></see> that specifies user data. The data is only valid for the lifetime of the object. </returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.TransArticle">
			<summary>Represents an article in a transactional publication.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransArticle.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.TransArticle"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransArticle.#ctor(System.String,System.String,System.String,Microsoft.SqlServer.Management.Common.ServerConnection)">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.TransArticle"></see> class, with the required properties and with the specified connection to the instance of Microsoft SQL Server.</summary>
			<param name="databaseName">A <see cref="T:System.String"></see> value that specifies the name of the publication database. </param>
			<param name="publicationName">A <see cref="T:System.String"></see> value that specifies the name of the transactional or snapshot publication.</param>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object value that specifies the connection to the Publisher.</param>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of the article.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransArticle.AddReplicatedColumns(System.Array)">
			<summary>Includes columns in a vertically partitioned table article.</summary>
			<param name="columns">An array of <see cref="T:System.String"></see> values that represent the columns to be included in the article.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransArticle.EnumHeterogeneousColumns">
			<summary>Returns column information for a table article published by a non-SQL Server Publisher. </summary>
			<returns>An <see cref="T:System.Collections.ArrayList"></see> of <see cref="T:Microsoft.SqlServer.Replication.HeterogeneousColumn"></see> objects. </returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransArticle.ListReplicatedColumns">
			<summary>Returns the published columns in a table article.</summary>
			<returns>An array of <see cref="T:System.String"></see> values. </returns>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransArticle.RemoveReplicatedColumns(System.Array)">
			<summary>Excludes columns from a vertically partitioned table article.</summary>
			<param name="columns">An array of <see cref="T:System.String"></see> values that represent the columns to be excluded from the article.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransArticle.ScriptChangeColumnDestinationDataType(System.String,System.String,System.Int64,System.Int32,System.Int64,Microsoft.SqlServer.Replication.ScriptOptions)">
			<summary>Returns a Transact-SQL script used to change the column data type mapping for a non-SQL Server Publisher. </summary>
			<returns>A <see cref="T:System.String"></see> value that contains a Transact-SQL script.</returns>
			<param name="columnName">A <see cref="T:System.String"></see> value that specifies the name of the column for which the destination data type is changed.</param>
			<param name="precision">An <see cref="T:System.Int32"></see> value that specifies the precision of the data type. Set this parameter to -1 if it does not apply to the specified data type.</param>
			<param name="scriptOption">A <see cref="T:Microsoft.SqlServer.Replication.ScriptOptions"></see> object value that specifies the scripting options.</param>
			<param name="scale">An <see cref="T:System.Int32"></see> value that specifies the scale of the data type. Set this parameter to -1 if it does not apply to the specified data type.</param>
			<param name="dataType">A <see cref="T:System.String"></see> value that specifies the data type to which the column is changed.</param>
			<param name="length">An <see cref="T:System.Int32"></see> value that specifies the length of the data type. Set this parameter to -1 if it does not apply to the specified data type.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransArticle.SetColumnDestinationDataType(System.String,System.String,System.Int64,System.Int32,System.Int64)">
			<summary>Sets the column data type mapping for a non-SQL Server Publisher.</summary>
			<param name="columnName">A <see cref="T:System.String"></see> value that specifies the name of the column for which the destination data type is changed.</param>
			<param name="precision">An <see cref="T:System.Int32"></see> value that specifies the precision of the data type. Set this parameter to -1 if it does not apply to the specified data type.</param>
			<param name="scale">An <see cref="T:System.Int32"></see> value that specifies the scale of the data type. Set this parameter to -1 if it does not apply to the specified data type.</param>
			<param name="dataType">A <see cref="T:System.String"></see> value that specifies the data type to which the column is changed.</param>
			<param name="length">An <see cref="T:System.Int32"></see> value that specifies the length of the data type. Set this parameter to -1 if it does not apply to the specified data type.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransArticle.ArticleLogTablespace">
			<summary>Gets or sets the name of the Oracle tablespace used to store replication log information.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransArticle.CommandFormat">
			<summary>Gets or sets how changes are propagated for the article.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.CommandOptions"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransArticle.DatatypeMappingOptions">
			<summary>Returns whether the default article data type mapping is used for a non-SQL Server Publisher.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ArticleDatatypeMappingOptions"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransArticle.DeleteCommand">
			<summary>Gets or sets the command used to replicate deletes. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the delete command.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransArticle.FilterClause">
			<summary>Gets or sets the WHERE clause used to filter the article horizontally.</summary>
			<returns>A <see cref="T:System.String"></see> that is a WHERE clause. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransArticle.FilterProcName">
			<summary>Gets or sets the stored procedure (created with FOR REPLICATION) used to filter the table horizontally.</summary>
			<returns>A <see cref="T:System.String"></see> that is a stored procedure name. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransArticle.FilterProcOwner">
			<summary>Gets or sets the database user who owns the stored procedure that is used to horizontally partition a table-based article.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransArticle.InsertCommand">
			<summary>Gets or sets the command used to replicate inserts. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the insert command.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransArticle.PublisherName">
			<summary>Gets or sets the name of the non-SQL Server Publisher that publishes the article.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransArticle.SnapshotObjectName">
			<summary>Gets or sets the database object that provides the initial data snapshot for the article.</summary>
			<returns>A <see cref="T:System.String"></see> object that specifies the database object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransArticle.SnapshotObjectOwner">
			<summary>Gets or sets the owner of the database object that provides the initial data snapshot for the article.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the owner. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransArticle.UpdateCommand">
			<summary>Gets or sets the command used to replicate updates. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the insert command.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.TransArticleCollection">
			<summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Replication.TransArticle"></see> objects. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransArticleCollection.CopyTo(Microsoft.SqlServer.Replication.TransArticleCollection,System.Int32)">
			<summary>Makes a copy of the collection.</summary>
			<param name="replicationCollection">A <see cref="T:Microsoft.SqlServer.Replication.TransArticleCollection"></see> object that is to receive the copy of the original collection.</param>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the index position within the original collection to start copying.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransArticleCollection.Item(System.Int32)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.TransArticle"></see> object in the collection by index number.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.TransArticle"></see> object. </returns>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the position of the <see cref="T:Microsoft.SqlServer.Replication.TransArticle"></see> object in the <see cref="T:Microsoft.SqlServer.Replication.TransArticleCollection"></see>.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransArticleCollection.Item(System.String)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.TransArticle"></see> object in the collection by name.</summary>
			<returns><see cref="T:Microsoft.SqlServer.Replication.TransArticle"></see> object. </returns>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of the article.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.TransConflictCount">
			<summary>Represents returned conflict information for a table article in a publication that supports queued updating subscriptions.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransConflictCount.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.TransConflictCount"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransConflictCount.ArticleName">
			<summary>Gets the name of the article.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransConflictCount.CentralizedConflicts">
			<summary>Gets whether conflict data for the article is stored at the Publisher or at each Subscriber. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the conflict data is stored at the Publisher in the publication database. If false, the conflict data is stored at the Subscriber in the subscription database.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransConflictCount.ConflictCount">
			<summary>Gets the number of conflict rows being stored in the conflict table for this article. </summary>
			<returns>An <see cref="T:System.Int32"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransConflictCount.ConflictTableName">
			<summary>Gets the name of the conflict table for the article.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransConflictCount.QueuedSourceProcedureName">
			<summary>Gets the name of the stored procedure used to retrieve the source data row causing the conflict. </summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.TransPublication">
			<summary>Represents a transactional publication.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransPublication.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.TransPublication"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransPublication.#ctor(System.String,System.String,Microsoft.SqlServer.Management.Common.ServerConnection)">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.TransPublication"></see> class with the required properties.</summary>
			<param name="databaseName">A <see cref="T:System.String"></see> value that specifies the name of the publication database. </param>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object that represents a connection to the Publisher or to the Distributor for a non-SQL Server Publisher.</param>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of publication.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransPublication.#ctor(System.String,System.String,Microsoft.SqlServer.Management.Common.ServerConnection,System.Boolean)">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.TransPublication"></see> class with the required properties, and indicates whether the Snapshot Agent job for the publication is created.</summary>
			<param name="databaseName">A <see cref="T:System.String"></see> value that specifies the name of the publication database. </param>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object that represents a connection to the Publisher or to the Distributor for a non-SQL Server Publisher.</param>
			<param name="createSnapshotAgentByDefault">A <see cref="T:System.Boolean"></see> value that indicates whether the Snapshot Agent job is added automatically when the publication is created.</param>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of publication.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransPublication.BrowseSnapshotFolder(System.String,System.String)">
			<summary>Returns the complete path of the location where snapshot files were generated for a specific subscription. </summary>
			<returns>A <see cref="T:System.String"></see> value that represents a file path.</returns>
			<param name="subscriber">A <see cref="T:System.String"></see> value that represents the Subscriber name.</param>
			<param name="subscriptionDB">A <see cref="T:System.String"></see> value that represents the subscription database name. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransPublication.CopySnapshot(System.String,System.String,System.String)">
			<summary>Copies the latest snapshot files for a specific subscription to a destination folder.</summary>
			<param name="subscriptionDB">A <see cref="T:System.String"></see> value that represents the subscription database name. </param>
			<param name="subscriber">A <see cref="T:System.String"></see> value that represents the name of the Subscriber to which subscription belongs. </param>
			<param name="destinationFolder">A <see cref="T:System.String"></see> that specifies the destination directory path.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransPublication.MakePullSubscriptionWellKnown(System.String,System.String,Microsoft.SqlServer.Replication.SubscriptionSyncType,Microsoft.SqlServer.Replication.TransSubscriberType)">
			<summary>Registers a pull subscription at the Publisher.</summary>
			<param name="subscriber">A <see cref="T:System.String"></see> value that specifies the name of the Subscriber where the pull subscription was created.</param>
			<param name="subscriberType">A <see cref="T:Microsoft.SqlServer.Replication.TransSubscriberType"></see> object value that specifies the subscription behavior when a Subscriber initiates a change to data in an article image.</param>
			<param name="subscriptionDB">A <see cref="T:System.String"></see> value that specifies the name of the subscription database.</param>
			<param name="syncType">A <see cref="T:Microsoft.SqlServer.Replication.SubscriptionSyncType"></see> object value that specifies how the subscription synchronization is performed.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransPublication.PostTracerToken">
			<summary>Posts a tracer token into the Publisher log to begin the process of determining latency. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransPublication.RefreshSubscriptions">
			<summary>Updates all subscriptions to a publication to include any newly added articles. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransPublication.ReinitializeAllSubscriptions">
			<summary>Marks all subscriptions to the publication for reinitialization.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransPublication.RemovePullSubscription(System.String,System.String)">
			<summary>Removes the registration for a pull subscription at the Publisher.</summary>
			<param name="subscriber">A <see cref="T:System.String"></see> value that represents the name of the Subscriber where the pull subscription exists.</param>
			<param name="subscriptionDB">A <see cref="T:System.String"></see> value that represents the subscription database name. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransPublication.ValidatePublication(Microsoft.SqlServer.Replication.ValidationOption,Microsoft.SqlServer.Replication.ValidationMethod,System.Boolean)">
			<summary>Invokes inline publication validation for all subscriptions. </summary>
			<param name="validationMethod">A <see cref="T:Microsoft.SqlServer.Replication.ValidationMethod"></see> object value that specifies options for rowcount validation.</param>
			<param name="validationOption">A <see cref="T:Microsoft.SqlServer.Replication.ValidationOption"></see> object value that specifies the type of validation being performed.</param>
			<param name="shutdownAgent">A <see cref="T:System.Boolean"></see> value. If true, the Distribution Agent is shut down immediately after validation. If false, the Distribution Agent continues to run.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransPublication.ValidateSubscriptions(System.String[],System.String[],Microsoft.SqlServer.Replication.ValidationOption,Microsoft.SqlServer.Replication.ValidationMethod,System.Boolean)">
			<summary>Invokes inline publication validation for the specified subscription. </summary>
			<param name="validationMethod">A <see cref="T:Microsoft.SqlServer.Replication.ValidationMethod"></see> object value that specifies options for rowcount validation.</param>
			<param name="validationOption">A <see cref="T:Microsoft.SqlServer.Replication.ValidationOption"></see> object value that specifies the type of validation being performed.</param>
			<param name="subscriberNames">An array of <see cref="T:System.String"></see> objects that specifies the names of the Subscribers.</param>
			<param name="subscriptionDBs">An array of <see cref="T:System.String"></see> objects that specifies the names of the subscription databases.</param>
			<param name="shutdownAgent">A <see cref="T:System.Boolean"></see> value. If true, the Distribution Agent is shut down immediately after validation. If false, the Distribution Agent continues to run.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransPublication.ConflictPolicy">
			<summary>Gets or sets the conflict policy for publications that support updating subscriptions.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.ConflictPolicyOption"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransPublication.PublisherName">
			<summary>Gets or sets the name of the non-SQL Server Publisher.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransPublication.QueueType">
			<summary>Gets or sets the type of queue to use for publications that allow queued updating subscriptions.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.QueueOption"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransPublication.SnapshotAvailable">
			<summary>Gets whether or not the snapshot files for this publication are available for use.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the snapshot files are available. If false, the snapshot files are not available.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransPublication.TransArticles">
			<summary>Represents the articles in the publication. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.TransArticleCollection"></see> object. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransPublication.TransSubscriptions">
			<summary>Represents subscriptions to the publication. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.TransSubscriptionCollection"></see> object. </returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.TransPublicationCollection">
			<summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Replication.TransPublication"></see> objects. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransPublicationCollection.CopyTo(Microsoft.SqlServer.Replication.TransPublicationCollection,System.Int32)">
			<summary>Makes a copy of the collection.</summary>
			<param name="replicationCollection">A <see cref="T:Microsoft.SqlServer.Replication.TransPublicationCollection"></see> object that is to receive the copy of the original collection.</param>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the index position within the original collection to start copying.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransPublicationCollection.Item(System.Int32)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.TransPublication"></see> object in the collection by index number.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.TransPublication"></see> object. </returns>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the position of the <see cref="T:Microsoft.SqlServer.Replication.TransPublication"></see> object in the <see cref="T:Microsoft.SqlServer.Replication.TransPublicationCollection"></see>.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransPublicationCollection.Item(System.String)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.TransPublication"></see> object in the collection by name.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.TransPublication"></see> object. </returns>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of the transactional or snapshot publication.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.TransPullSubscription">
			<summary>Represents a pull subscription to a transactional publication.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransPullSubscription.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.TransPullSubscription"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransPullSubscription.#ctor(System.String,System.String,System.String,System.String,Microsoft.SqlServer.Management.Common.ServerConnection)">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.TransPullSubscription"></see> class with the properties that define a pull subscription.</summary>
			<param name="publicationDBName">A <see cref="T:System.String"></see> value that specifies the name of the publication database. </param>
			<param name="publicationName">A <see cref="T:System.String"></see> value that specifies the name of the publication. </param>
			<param name="subscriptionDBName">A <see cref="T:System.String"></see> value that specifies the name of the subscription database.</param>
			<param name="publisherName">A <see cref="T:System.String"></see> value that specifies the name of the Publisher.</param>
			<param name="subscriberConnectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object that specifies Subscriber connection. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransPullSubscription.#ctor(System.String,System.String,System.String,System.String,Microsoft.SqlServer.Management.Common.ServerConnection,System.Boolean)">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.TransPullSubscription"></see> class with the properties that define a pull subscription, and whether or not to create the agent job for the subscription.</summary>
			<param name="publicationDBName">A <see cref="T:System.String"></see> value that specifies the name of the publication database. </param>
			<param name="publicationName">A <see cref="T:System.String"></see> value that specifies the name of the publication. </param>
			<param name="createDistributionAgentByDefault">A <see cref="T:System.Boolean"></see> value that indicates whether to create the Distribution Agent job to synchronize the subscription.</param>
			<param name="subscriptionDBName">A <see cref="T:System.String"></see> value that specifies the name of the subscription database.</param>
			<param name="publisherName">A <see cref="T:System.String"></see> value that specifies the name of the Publisher.</param>
			<param name="subscriberConnectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object that specifies Subscriber connection. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransPullSubscription.Reinitialize">
			<summary>Marks the pull subscription for reinitialization.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransPullSubscription.StopSynchronizationJob">
			<summary>Attempts to stop a running Distribution Agent job that is currently synchronizing the subscription.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransPullSubscription.SynchronizeWithJob">
			<summary>Starts the agent job to synchronize the subscription. </summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransPullSubscription.Attributes">
			<summary>Gets or sets the attributes of a transactional publication that are supported by the subscription. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.PublicationAttributes"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransPullSubscription.DtsPackageLocation">
			<summary>Gets or sets the location of the Data Transformation Services (DTS) package used with a transformable subscription. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransPullSubscription.DtsPackageName">
			<summary>Gets or sets the Data Transformation Services (DTS) package name used in a transformable subscription. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the DTS package.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransPullSubscription.DtsPackagePassword">
			<summary>Sets the password that is used with a transformable subscription. </summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransPullSubscription.LastSummaryDateTime">
			<summary>Gets the date and time that the last synchronization was completed.</summary>
			<returns>A <see cref="T:System.String"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransPullSubscription.SubscriberType">
			<summary>Gets or sets the updating behavior of the subscription.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.TransSubscriberType"></see> object. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransPullSubscription.SynchronizationAgent">
			<summary>Gets an object that represents an instance of the Distribution Agent that can be used to synchronize the subscription. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.TransSynchronizationAgent"></see> object.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.TransPullSubscriptionCollection">
			<summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Replication.TransPullSubscription"></see> objects. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransPullSubscriptionCollection.CopyTo(Microsoft.SqlServer.Replication.TransPullSubscriptionCollection,System.Int32)">
			<summary>Makes a copy of the collection.</summary>
			<param name="replicationCollection">A <see cref="T:Microsoft.SqlServer.Replication.TransPullSubscriptionCollection"></see> object that is to receive the copy of the original collection.</param>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the index position within the original collection to start copying.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransPullSubscriptionCollection.Item(System.Int32)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.TransPullSubscription"></see> object in the collection by index number.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.TransPullSubscription"></see> object.</returns>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the position of the <see cref="T:Microsoft.SqlServer.Replication.TransPullSubscription"></see> object in the <see cref="T:Microsoft.SqlServer.Replication.TransPullSubscriptionCollection"></see> collection.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransPullSubscriptionCollection.Item(System.String,System.String,System.String)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.TransPullSubscription"></see> object in the collection by the <see cref="P:Microsoft.SqlServer.Replication.PullSubscription.PublisherName"></see>, <see cref="P:Microsoft.SqlServer.Replication.PullSubscription.PublicationDBName"></see>, and <see cref="P:Microsoft.SqlServer.Replication.PullSubscription.PublicationName"></see> properties that uniquely define the pull subscription.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.TransPullSubscription"></see> object.</returns>
			<param name="publicationDBName">A <see cref="T:System.String"></see> value that specifies the name of the publication database.</param>
			<param name="publicationName">A <see cref="T:System.String"></see> value that specifies the name of the publication.</param>
			<param name="publisherName">A <see cref="T:System.String"></see> value that specifies the name of the Publisher.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.TransSubscriberType">
			<summary>Enumerates the updating behaviors for subscriptions to transactional publications.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.TransSubscriberType.Failover">
			<summary>Enables the subscription for immediate updating, with queued updating as a failover. Data modifications can be made at the Subscriber and propagated to the Publisher immediately. If the Publisher and Subscriber are not connected, the updating mode can be changed so that data modifications made at the Subscriber are stored in a queue until the Subscriber and Publisher are reconnected. Not supported for Oracle Publishers.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.TransSubscriberType.ImmediateUpdate">
			<summary>Enables support for immediate updating subscriptions. Not supported for Oracle Publishers.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.TransSubscriberType.QueuedFailover">
			<summary>Enables the subscription as a queued updating subscription with the ability to change to immediate updating mode. Data modifications can be made at the Subscriber and stored in a queue until a connection is established between the Subscriber and Publisher. When a continuous connection is established the updating mode can be changed to immediate updating. Not supported for Oracle Publishers.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.TransSubscriberType.QueuedUpdate">
			<summary>Enables the subscription for queued updating. Data modifications can be made at the Subscriber, stored in a queue, and then propagated to the Publisher. Not supported for Oracle Publishers.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.TransSubscriberType.ReadOnly">
			<summary>The subscription is read-only. The changes at the Subscriber are not sent to the Publisher.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.TransSubscription">
			<summary>Represents a push subscription to a transactional or snapshot publication.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransSubscription.#ctor">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.TransSubscription"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransSubscription.#ctor(System.String,System.String,System.String,System.String,Microsoft.SqlServer.Management.Common.ServerConnection)">
			<summary>Creates a new instance of the <see cref="T:Microsoft.SqlServer.Replication.TransSubscription"></see> class with the specified publication, database, Subscriber, and subscriber database, and with the specified connection to the instance of Microsoft SQL Server.</summary>
			<param name="publicationName">A <see cref="T:System.String"></see> value that specifies the name of the transactional or snapshot publication.</param>
			<param name="connectionContext">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object that represents a connection to the Publisher or to the Distributor for a subscription to a non-SQL Server Publisher.</param>
			<param name="subscriptionDBName">A <see cref="T:System.String"></see> value that specifies the name of the subscription database.</param>
			<param name="subscriberName">A <see cref="T:System.String"></see> value that specifies the name of the Subscriber. </param>
			<param name="databaseName">A <see cref="T:System.String"></see> value that specifies the name of the database that contains the publication, or the name of the distribution database for a non-SQL Server Publisher. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransSubscription.Reinitialize">
			<summary>Marks the subscription for reinitialization the next time the Distribution Agent runs to synchronize the subscription. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransSubscription.StopSynchronizationJob">
			<summary>Attempts to stop a running Distribution Agent job that is currently synchronizing the subscription.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransSubscription.SynchronizeWithJob">
			<summary>Starts the agent job to synchronize the subscription. </summary>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransSubscription.BackupInformation">
			<summary>Gets or sets information needed to initialize a subscription from a backup. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.SubscriptionBackupInformation"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransSubscription.DtsPackageLocation">
			<summary>Gets or sets the location of the Microsoft SQL Server 2000 Data Transformation Services (DTS) package. </summary>
			<returns>A <see cref="T:System.String"></see> value that represents a file location of the DTS package.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransSubscription.DtsPackageName">
			<summary>Gets or sets the name of the Microsoft SQL Server 2000 Data Transformation Services (DTS) package that is applied at the Subscriber. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransSubscription.DtsPackagePassword">
			<summary>Sets the password used to run the Microsoft SQL Server 2000 Data Transformation Services (DTS) package. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransSubscription.LoopBackDetection">
			<summary>Gets or sets whether or not the Distribution Agent sends transactions that originated at the Subscriber back to the Subscriber. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value. If true, the Distribution Agent does not send transactions that originated at the Subscriber back to the Subscriber. If false, the Distribution Agent does send transactions that originated at the Subscriber back to the Subscriber.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransSubscription.PublisherName">
			<summary>Gets or sets the name of the Publisher when the subscription belongs to a non- SQL Server Publisher.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransSubscription.SecureDtsPackagePassword">
			<summary>Sets the password (as a <see cref="T:System.Security.SecureString"></see> object) used to run the Microsoft SQL Server 2000 Data Transformation Services (DTS) package.</summary>
			<returns>A <see cref="T:System.Security.SecureString"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransSubscription.SubscriberCatalog">
			<summary>Gets or sets the catalog used when making a connection to the OLE DB provider for a non-SQL Server Subscriber.</summary>
			<returns>A <see cref="T:System.String"></see> value that can be a maximum of 128 Unicode characters.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransSubscription.SubscriberDatasource">
			<summary>Name of the data source as understood by the OLE DB provider for a non-SQL Server Subscriber.</summary>
			<returns>A <see cref="T:System.String"></see> value that can be a maximum of 4000 Unicode characters.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransSubscription.SubscriberDatasourceType">
			<summary>Identifies the type of data source that is a non-SQL Server Subscriber.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.SubscriberType"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransSubscription.SubscriberLocation">
			<summary>Location of the database as understood by the OLE DB provider for the non-SQL Server Subscriber.</summary>
			<returns>A <see cref="T:System.String"></see> value that can be a maximum of 4000 Unicode characters.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransSubscription.SubscriberProvider">
			<summary>Unique programmatic identifier (PROGID) with which the OLE DB provider for the non-SQL Server Subscriber is registered</summary>
			<returns>A <see cref="T:System.String"></see> value that can be a maximum of 128 Unicode characters.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransSubscription.SubscriberProviderString">
			<summary>OLE DB provider-specific connection string is used to connect to the data source for non-SQL Server Subscribers.</summary>
			<returns>A <see cref="T:System.String"></see> value that can be a maximum of 4000 Unicode charactersThe <see cref="P:Microsoft.SqlServer.Replication.TransSubscription.SubscriberProviderString"></see> property should only be set for non-SQL Server Subscribers.  The value of <see cref="P:Microsoft.SqlServer.Replication.TransSubscription.SubscriberProviderString"></see> is passed as the DBPROP_INIT_PROVIDERSTRING property to initialize the OLE DB provider.The <see cref="P:Microsoft.SqlServer.Replication.TransSubscription.SubscriberProviderString"></see> property can only be retrieved by members of the sysadmin fixed server role, by members of the db_owner fixed database role, or by the user who created the subscription.The <see cref="P:Microsoft.SqlServer.Replication.TransSubscription.SubscriberProviderString"></see> property can only be set by members of the sysadmin fixed server role or by members of the db_owner fixed database role.Retrieving <see cref="P:Microsoft.SqlServer.Replication.TransSubscription.SubscriberProviderString"></see> is equivalent to executing sp_helpsubscription.Setting <see cref="P:Microsoft.SqlServer.Replication.TransSubscription.SubscriberProviderString"></see> is equivalent to executing sp_addpushsubscription_agent or sp_changesubscription.The <see cref="P:Microsoft.SqlServer.Replication.TransSubscription.SubscriberProviderString"></see> property is available with SQL Server 2005 only.This namespace, class, or member is supported only in version 2.0 of the .NET Framework.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransSubscription.SubscriberType">
			<summary>Gets or sets the updating behavior for data changes at the Subscriber. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.TransSubscriberType"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransSubscription.SynchronizationAgent">
			<summary>Gets an instance of the <see cref="T:Microsoft.SqlServer.Replication.TransSynchronizationAgent"></see> class that can be used to synchronize the subscription. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.TransSynchronizationAgent"></see> object. </returns>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.TransSubscriptionCollection">
			<summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Replication.TransSubscription"></see> objects. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Replication.TransSubscriptionCollection.CopyTo(Microsoft.SqlServer.Replication.TransSubscriptionCollection,System.Int32)">
			<summary>Makes a copy of the collection.</summary>
			<param name="replicationCollection">A <see cref="T:Microsoft.SqlServer.Replication.TransSubscriptionCollection"></see> object that is to receive the copy of the original collection.</param>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the index position within the original collection to start copying.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransSubscriptionCollection.Item(System.Int32)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.TransSubscription"></see> object in the collection by index number.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.TransSubscription"></see> object.</returns>
			<param name="index">An <see cref="T:System.Int32"></see> value that specifies the position of the <see cref="T:Microsoft.SqlServer.Replication.TransSubscription"></see> object in the <see cref="T:Microsoft.SqlServer.Replication.TransSubscriptionCollection"></see>.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Replication.TransSubscriptionCollection.Item(System.String,System.String)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Replication.TransSubscription"></see> object in the <see cref="T:Microsoft.SqlServer.Replication.TransSubscriptionCollection"></see>, by <see cref="P:Microsoft.SqlServer.Replication.Subscription.SubscriberName"></see> and <see cref="P:Microsoft.SqlServer.Replication.Subscription.SubscriptionDBName"></see> properties that uniquely identify the subscription.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Replication.TransSubscription"></see> object.</returns>
			<param name="subscriptionDBName">A <see cref="T:System.String"></see> value that specifies the subscription database.</param>
			<param name="subscriberName">A <see cref="T:System.String"></see> value that specifies the Subscriber.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ValidationMethod">
			<summary>Enumerates methods supported for rowcount validation of transactional publications. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ValidationMethod.ConditionalFast">
			<summary>Attempts a fast rowcount, but performs a full rowcount if the fast method shows any differences. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ValidationMethod.FastCount">
			<summary>Performs a fast rowcount validation using the sys.sysindexes system table. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ValidationMethod.FullCount">
			<summary>Performs a full rowcount using the COUNT function. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.ValidationOption">
			<summary>Enumerates the types of data validation supported by replication. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ValidationOption.Checksum70">
			<summary>Performs a checksum operation. This option is only supported for Microsoft SQL Server 7.0 Subscribers. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ValidationOption.Checksum80">
			<summary>Performs a binary checksum operation. This option is supported for Microsoft SQL Server 2000 and later Subscribers. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.ValidationOption.RowCountOnly">
			<summary>Performs a rowcount operation. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Replication.VerifyResolverSignatureOption">
			<summary>Enumerates values that specify whether the Merge Agent must verify the digital signature on a Component Object Model (COM)-based conflict resolver to determine if it is from a trusted source. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.VerifyResolverSignatureOption.NoVerification">
			<summary>Digital signature verification is not performed. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Replication.VerifyResolverSignatureOption.TrustedAuthority">
			<summary>Digital signature verification is performed. </summary>
		</member>
	</members>
</doc>